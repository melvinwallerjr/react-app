{
  "gloVersion": "1.8.12",
  "components": {
    "accordion": {
      "twig": "{% if isFAQ %}\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"name\": \"\",\n  \"mainEntity\": [\n  {% for item in list %}\n    {% if item.title and item.content %}\n    {\n      \"@type\": \"Question\",\n      \"name\": \"{{ item.title|e }}\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"{{ item.content|striptags|e }}\"\n      }\n    }{% if loop.index < loop.length %}{{ ',' }}{% endif %}\n    {% endif %}\n  {% endfor %}\n  ]\n}\n</script>\n{% endif %}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}{%\n  set firstOpen = openFirst ?: false\n%}<ol id=\"accordion{{ seed }}\" class=\"accordion {{ icon }}\">\n  {% for item in list %}\n    {% if item.title and item.content %}\n      <li class=\"card\">\n        <div id=\"accordion{{ seed }}-t{{ loop.index }}\" class=\"card-header\">\n          <a\n            href=\"#accordion{{ seed }}-c{{ loop.index }}\"\n            data-toggle=\"collapse\"\n            role=\"button\"\n            aria-expanded=\"{{ (firstOpen and loop.index == 1) ? 'true' : 'false' }}\"\n            aria-controls=\"accordion{{ seed }}-c{{ loop.index }}\"\n            {% if item.tracking %}data-ga-label=\"{{ item.tracking }}\"{% endif %}\n            class=\"glo-link-plain {{item.customClasses}}\"\n            {{item.additionalAttributes|raw}}\n          >\n            <h{{ index }} class=\"{% if headerSize == 'large' %}highlight-2{% else %}subtitle-1{% endif %}\">{{ item.title|raw }}</h{{ index }}>\n            {% if item.subCopy %}<p class=\"content-2\">{{ item.subCopy|raw }}</p>{% endif %}\n            {% if icon == 'chevron' %}\n              <span class=\"glo-svg\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\">\n                  <g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-width=\"6\">\n                    <polyline points=\"14 6 21.5 14.2494108 14 22.5\" transform=\"rotate(-270.0000) translate(0, -32)\"></polyline>\n                  </g>\n                </svg>\n              </span>\n            {% elseif icon == 'plus' %}\n              <span class=\"glo-svg\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\">\n                  <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"6\">\n                    <line class=\"h-line\" x1=\"6\" y1=\"18\" x2=\"30\" y2=\"18\"></line>\n                    <line class=\"v-line\" x1=\"18\" y1=\"6\" x2=\"18\" y2=\"30\"></line>\n                  </g>\n                </svg>\n              </span>\n            {% endif %}\n          </a>\n        </div>\n        <div\n          id=\"accordion{{ seed }}-c{{ loop.index }}\"\n          class=\"collapse{{ (firstOpen and loop.index == 1) ? ' show' : '' }}\"\n          data-toggle=\"collapse\"\n          data-parent=\"#accordion{{ seed }}\"\n          aria-labelledby=\"accordion{{ seed }}-t{{ loop.index }}\"\n        >\n          <div class=\"card-body content-2{% if icon != 'accordion-number-tabs' and icon != 'accordion-tabs' %} pb-5 pb-lg-6 offset-lg-2 col-lg-8{% endif %}\">{{ item.content|raw }}</div>\n        </div>\n      </li>\n    {% endif %}\n  {% endfor %}\n</ol>\n",
      "schema": {
        "key": "accordion",
        "title": "Accordion",
        "description": "Accordion fragment: a collection of items with title and details.",
        "properties": {
          "isFAQ": {
            "title": "Is this an FAQ accordion?",
            "description": "Adds SEO markup if this is an FAQ list.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "headerIndex": {
            "title": "Header level",
            "description": "What is the header level for these titles? (h1 - h6, h2 default)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "headerSize": {
            "title": "Header size",
            "description": "Choose a header size: large (highlight-2), small (subtitle-1)",
            "type": "string",
            "enum": [
              "small",
              "large"
            ],
            "default": "small"
          },
          "icon": {
            "title": "Icon type",
            "description": "Choose the icon type to display. Using 'tabs' switches to side tab design. Using 'number-tabs' switches to side tab design with numbered headings.",
            "type": "string",
            "enum": [
              "chevron",
              "plus",
              "accordion-tabs",
              "accordion-number-tabs"
            ],
            "default": "chevron"
          },
          "openFirst": {
            "title": "Open first item",
            "description": "Automatically open first item in the list?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "list": {
            "title": "Item list",
            "description": "Define the items to place in the accordion.",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "title": {
                  "title": "Item title",
                  "description": "Plain text title.",
                  "type": "string",
                  "format": "text"
                },
                "subCopy": {
                  "title": "Sub-copy",
                  "description": "Additional message to show with the title. (plain text)",
                  "type": "string",
                  "format": "markdown"
                },
                "content": {
                  "title": "Item details",
                  "description": "HTML formatted details.",
                  "type": "string",
                  "format": "markdown"
                },
                "tracking": {
                  "title": "Tracking label",
                  "type": "string",
                  "format": "text"
                },
                "customClasses": {
                  "title": "Custom classes",
                  "type": "string",
                  "format": "text"
                },
                "additionalAttributes": {
                  "title": "Additional attributes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              },
              "required": [
                "title",
                "content"
              ]
            },
            "default": [
              {}
            ]
          }
        },
        "required": [
          "list"
        ]
      }
    },
    "addressBox": {
      "twig": "<fieldset\n  aria-label=\"address details\"\n  class=\"d-block glo-address-box\"\n  {% if entityState %}data-entity-state=\"{{ entityState|raw }}\"{% endif %}\n  {% if showCounty %}data-show-county=\"true\"{% endif %}\n  {% if requireCounty == true %}data-require-county=\"true\"{% endif %}\n  {% if rejectOutOfStateAddress == true %}data-reject-outofstate=\"true\"{% endif %}\n  {% if rejectPOBox == true %}data-reject-pobox=\"true\"{% endif %}\n  {% if isBusinessAddress %}data-is-business-address=\"true\"{% endif %}\n  {% if validateForm == true %}data-validate-address=\"true\"{% endif %}\n>\n  {% if isBusinessAddress and entityState %}\n    <div class=\"row hide-invalid\">\n      <div class=\"col-12 pl-0 pr-0 mb-4\">\n          <p class=\"text-left mw-100\">\n          {% if rejectOutOfStateAddress %}\n            <span>{{ entityState }} law requires businesses to use a street address in {{ entityState }}.</span>\n          {% endif %}\n          {% if rejectPOBox %}\n            <span><abbr title=\"Post Office\">PO</abbr> Boxes are not allowed.</span>\n          {% endif %}\n            <span>If your business is run out of your home, you can use that address.</span>\n          </p>\n      </div>\n    </div>\n  {% endif %}\n\n  <div class=\"row\">\n    <div class=\"col-12 autocomplete\">\n      <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n        <input\n          id=\"tb-address1{{ seed }}\"\n          name=\"address1\"\n          {% if address1 %} value=\"{{ address1 }}\"{% endif %}\n          autocomplete=\"off\"\n          class=\"form-control\"\n          aria-autocomplete=\"list\"\n          aria-expanded=\"false\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          role=\"combobox\"\n          {% if validateForm %}required {% endif %}>\n        <label for=\"tb-address1{{ seed }}\"><span>Address line 1</span></label>\n        <span class=\"invalid-feedback\">Address is required.</span>\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n        <input\n          id=\"tb-address2{{ seed }}\"\n          name=\"address2\"\n          {% if address2 %} value=\"{{ address2 }}\"{% endif %}\n          autocomplete=\"section-address address-line2\"\n          class=\"form-control\"\n        >\n        <label for=\"tb-address2{{ seed }}\"><span>Address line 2</span></label>\n        <span class=\"invalid-feedback\"></span>\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12{% if showCounty or requireCounty %} col-md-6{% endif %}\">\n      <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n        <input\n          id=\"tb-city{{ seed }}\"\n          name=\"city\"\n          {% if city %} value=\"{{ city }}\"{% endif %}\n          autocomplete=\"section-address address-level2\"\n          class=\"form-control\"\n          {% if validateForm %}required {% endif %}>\n        <label for=\"tb-city{{ seed }}\"><span>City</span></label>\n        <span class=\"invalid-feedback\">City is required.</span>\n      </p>\n    </div>\n\n    {% if showCounty or requireCounty %}\n      <div class=\"col-12 col-md-6\">\n        <p #countyBox class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n          <input\n            id=\"tb-county{{ seed }}\"\n            name=\"county\"\n            {% if county %} value=\"{{ county }}\"{% endif %}\n            autocomplete=\"section-address county\"\n            class=\"form-control\"\n            {% if requireCounty %}required {% endif %}>\n          <label for=\"tb-county{{ seed }}\"><span>County</span></label>\n          <span class=\"invalid-feedback\">{% if requireCounty %}County is required.{% endif %}</span>\n        </p>\n      </div>\n    {% endif %}\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12 col-md-6\">\n      <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n        <input\n          id=\"tb-state{{ seed }}\"\n          name=\"state\"\n          {% if state %} value=\"{{ state }}\"{% endif %}\n          autocomplete=\"section-address address-level1\"\n          class=\"form-control\"\n          {% if validateForm %}required {% endif %}>\n        <label for=\"tb-state{{ seed }}\"><span>State</span></label>\n        <span class=\"invalid-feedback\">State is required.</span>\n      </p>\n    </div>\n\n    <div class=\"col-12 col-md-6\">\n      <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n        <input\n          id=\"tb-zipCode{{ seed }}\"\n          name=\"zipCode\"\n          {% if zipCode %} value=\"{{ zipCode }}\"{% endif %}\n          autocomplete=\"section-address postal-code\"\n          class=\"form-control\"\n          {% if validateForm %}required {% endif %}>\n        <label for=\"tb-zipCode{{ seed }}\"><span>ZIP code</span></label>\n        <span class=\"invalid-feedback\">ZIP code is required.</span>\n      </p>\n    </div>\n  </div>\n</fieldset>\n",
      "schema": {
        "key": "addressBox",
        "title": "Address Box",
        "description": "Address Box fragment",
        "properties": {
          "theme": {
            "title": "Theme",
            "description": "Control color theme.",
            "type": "string",
            "enum": [
              "[default]",
              "action"
            ],
            "default": "[default]"
          },
          "showCounty": {
            "title": "Show county",
            "description": "Show county field?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "entityState": {
            "title": "Entity state",
            "description": "Name of entity state.",
            "type": "string",
            "format": "text"
          },
          "requireCounty": {
            "title": "Require county",
            "description": "Require county?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "isBusinessAddress": {
            "title": "Is business address",
            "description": "Is this a business address?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "rejectOutOfStateAddress": {
            "title": "Reject out of state address",
            "description": "Enable reject out of state address?",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "rejectPOBox": {
            "title": "Reject PO Box",
            "description": "Enable reject PO Box?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "validateForm": {
            "title": "Validate form",
            "description": "Enable form validation?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          }
        },
        "required": []
      }
    },
    "attorneyBanner12col": {
      "twig": "<div class=\"attorney-banner-12col\">\n  <div class=\"media m-0\">\n    <img src=\"{{ mediaUrl }}\" loading=\"lazy\" alt=\"{{ mediaAlt|escape('html') }}\" width=\"158\" height=\"288\">\n  </div>\n  <div class=\"content-container\">\n    <h2 class=\"title highlight-1 m-0\">{{ title | raw }}</h2>\n    <p class=\"subtext content-2 m-0\">{{ subtext | raw }}</p>\n    <div class=\"button-container m-0\">\n      <a\n        href=\"{{ buttonUrl }}\"\n        {% if '//' in buttonUrl %} target=\"_blank\" rel=\"noopener\"{% endif %}\n        {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n        class=\"btn{% if customClasses %} {{customClasses}}{% endif %}\"\n        {{additionalAttributes|raw}}\n      >\n        {{ buttonText | raw }}\n      </a>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "attorneyBanner12col",
        "title": "Banner, Attorney [12-col]",
        "description": "Banner, Attorney [12-col] fragment",
        "properties": {
          "title": {
            "title": "Title",
            "description": "Title",
            "type": "string",
            "format": "markdown"
          },
          "subtext": {
            "title": "Subtext",
            "description": "Subtext",
            "type": "string",
            "format": "markdown"
          },
          "buttonText": {
            "title": "Button text",
            "description": "Text for action button",
            "type": "string",
            "format": "markdown"
          },
          "buttonUrl": {
            "title": "Button URL",
            "description": "URL for action button",
            "type": "string",
            "format": "uri"
          },
          "mediaUrl": {
            "title": "Media",
            "description": "Media URL",
            "type": "string",
            "format": "uri"
          },
          "mediaAlt": {
            "title": "Media alt text",
            "description": "Media alt text",
            "type": "string",
            "format": "text"
          },
          "tracking": {
            "title": "Tracking label",
            "type": "string",
            "format": "text"
          },
          "customClasses": {
            "title": "Custom Classes",
            "type": "string",
            "format": "text"
          },
          "additionalAttributes": {
            "title": "Additional Attributes",
            "type": "string",
            "format": "text"
          }
        },
        "required": [
          "title",
          "subtext",
          "buttonText",
          "buttonUrl",
          "mediaUrl",
          "mediaAlt"
        ]
      }
    },
    "attorneyBanner6col": {
      "twig": "<div class=\"col-12 col-lg-6 col-xl-6\">\n  <div class=\"attorney-banner-6col\">\n    <h2 class=\"title highlight-2 m-0\">{{ title | raw }}</h2>\n    <p class=\"subtext content-2 m-0\">{{ subtext | raw }}</p>\n\n    <p class=\"button m-0\">\n    <a\n      href=\"{{ buttonUrl }}\"\n      {% if '//' in buttonUrl %} target=\"_blank\" rel=\"noopener\"{% endif %}\n      {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n      class=\"btn {{customClasses}}\"\n      {{additionalAttributes|raw}}\n    >\n      <span>{{ buttonText | raw }}</span>\n    </a>\n    </p>\n\n    <div class=\"image m-0\">\n      <picture>\n        {% if mobileImageUrl %}<source media=\"(max-width:767px)\" srcset={{ mobileImageUrl }}>{% endif %}\n        <img src=\"{{ imageUrl }}\" loading=\"lazy\" alt=\"{{ imageAlt|escape('html') }}\" width=\"125\" height=\"228\">\n      </picture>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "attorneyBanner6col",
        "title": "Banner, Attorney[6-col]",
        "description": "Banner, Attorney[6-col] fragment",
        "properties": {
          "title": {
            "title": "Title",
            "description": "Title of fragment",
            "type": "string",
            "format": "markdown"
          },
          "subtext": {
            "title": "Subtext",
            "description": "Subtext of fragment",
            "type": "string",
            "format": "markdown"
          },
          "buttonText": {
            "title": "Button text",
            "description": "Text for action button",
            "type": "string",
            "format": "markdown"
          },
          "buttonUrl": {
            "title": "Button URL",
            "description": "URL for action button",
            "type": "string",
            "format": "uri"
          },
          "imageUrl": {
            "title": "Image URL",
            "description": "Image URL",
            "type": "string",
            "format": "uri"
          },
          "mobileImageUrl": {
            "title": "Image URL (mobile)",
            "description": "Mobile Image URL",
            "type": "string",
            "format": "uri"
          },
          "imageAlt": {
            "title": "Image alt",
            "description": "Image Alt Text",
            "type": "string",
            "format": "text"
          },
          "tracking": {
            "title": "Tracking label",
            "type": "string",
            "format": "text"
          },
          "customClasses": {
            "title": "Custom classes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "additionalAttributes": {
            "title": "Additional attributes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          }
        },
        "required": [
          "title",
          "subtext",
          "buttonText",
          "buttonUrl",
          "imageUrl",
          "imageAlt"
        ]
      }
    },
    "authorCard": {
      "twig": "<section class=\"author-card row\">\n  <div class=\"d-flex flex-row col-12 col-md-10 offset-md-1 my-4 my-md-7\">\n    {% if image %}<div class=\"author-image\"><img src=\"{{ image }}\" loading=\"lazy\" width=\"100\" height=\"100\" alt=\"the author\"></div>{% endif %}\n    <div class=\"flex-fill\">\n      <p>About the Author</p>\n      {% if name %}<p><strong>{{ name }}</strong></p>{% endif %}\n      <p>\n        {{ message|striptags|trim|slice(0,120) }}&hellip;\n        {% if url %}\n          <a\n            href=\"{{ url }}\"\n            {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n            {% if customClasses %}class=\"{{customClasses}}\"{% endif %}\n            {{additionalAttributes|raw}}\n          >\n            Read more<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\" width=\"13px\" height=\"13px\">\n              <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\">\n                <polyline points=\"4 1 9 6.49960717 4 12\"></polyline>\n              </g>\n            </svg>\n          </a>\n        {% endif %}\n      </p>\n    </div>\n  </div>\n</section>\n",
      "schema": {
        "key": "authorCard",
        "title": "Author Card",
        "description": "Author Card fragment",
        "properties": {
          "image": {
            "title": "Image",
            "description": "Image of the author should be 100x100 pixels in size.",
            "type": "string",
            "format": "text"
          },
          "name": {
            "title": "Author name",
            "description": "The name of the author.",
            "type": "string",
            "format": "text"
          },
          "message": {
            "title": "Bio",
            "description": "Description or short bio about the author. Include a link to the author details page.",
            "type": "string",
            "format": "markdown",
            "default": "Short description about the author with <a href=\"https://www.legalzoom.com/\">links to other details</a> and some message info that no one really reads rambling on and on to infinity and beyond."
          },
          "url": {
            "title": "Link",
            "description": "URL to the Author's bio page.",
            "type": "string",
            "format": "text",
            "default": "https://www.legalzoom.com/articles/article-center/"
          },
          "tracking": {
            "title": "Tracking label",
            "type": "string",
            "format": "text"
          },
          "customClasses": {
            "title": "Custom classes",
            "type": "string",
            "format": "text"
          },
          "additionalAttributes": {
            "title": "Additional attributes",
            "type": "string",
            "format": "text"
          }
        },
        "required": []
      }
    },
    "bannerCard": {
      "twig": "<div class=\"banner-card col-12 row{% if bannerBorder %} banner-border{% endif %}\">\n  <div class=\"banner-container\">\n    <div class=\"banner-info-container\">\n      {% if bannerTitle %}\n        <div class=\"banner-title-container\">\n          <div class=\"highlight-1 banner-title\">{{ bannerTitle|raw }}</div>\n          <div class=\"banner-media-container banner-media-sm\">\n            {% if image %}\n              <div class=\"banner-image\">\n                <img src=\"{{ image }}\" loading=\"lazy\" alt=\"\">\n              </div>\n            {% endif %}\n          </div>\n        </div>\n      {% endif %}\n      {% if bannerSubTitle %}<div class=\"content-2 banner-sub-title\">{{ bannerSubTitle|raw }}</div>{% endif %}\n    </div>\n    <div class=\"banner-media-container banner-media-lg\">\n      {% if image %}\n        <div class=\"banner-image\">\n          <img src=\"{{ image }}\" loading=\"lazy\" alt=\"\">\n        </div>\n      {% endif %}\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "bannerCard",
        "title": "Banner Card",
        "description": "Banner Card fragment",
        "properties": {
          "image": {
            "title": "Banner image",
            "description": "Banner image reference.",
            "type": "string",
            "format": "text"
          },
          "bannerTitle": {
            "title": "Banner title",
            "description": "The title of the banner.",
            "type": "string",
            "format": "markdown"
          },
          "bannerSubTitle": {
            "title": "Banner subtitle",
            "description": "Description or more information about the banner.",
            "type": "string",
            "format": "markdown",
            "default": "We do right by you—so <a href=\"https://www.legalzoom.com/\">we’ll refund our fee</a> within the first 60 days if you're unhappy with our services."
          },
          "bannerBorder": {
            "title": "Banner border",
            "description": "Enable or disable the banner border.",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          }
        },
        "required": []
      }
    },
    "bannerHomepage": {
      "twig": "<div{% if id %} id=\"{{ id }}\"{% endif %} class=\"banner-homepage alert-{{ theme }}\">\n  {% set btnIconA = (ctaIcon and ctaIcon != 'none' and ctaIcon != '[none]') ? ctaIcon : '' %}\n  {% set btnIconB = (btnIconA == 'chevron-right') ? 'right' : btnIconA %}\n  {% set btnIcon = (btnIconB == 'arrow-right') ? 'arrow-right' : btnIconB %}\n  <div class=\"container p-0\">\n    <div role=\"alert\" class=\"alert alert-dismissible fade show\">\n      <div class=\"d-flex flex-column flex-md-row justify-content-center\">\n        <div class=\"alert-content content-4 d-flex flex-column justify-content-center py-1 py-md-0 px-md-2\">{{ content|raw }}</div>\n        {% if ctaText and ctaAction %}\n          <div class=\"alert-action d-flex flex-column justify-content-center py-1 py-md-0 px-md-2\">\n            <a\n              href=\"{{ ctaAction }}\"\n              {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n              {% if ctaType == 'button' or ctaClasses %} class=\"{% if ctaType == 'button' %}btn{% if btnModel != '[default]' or btnTheme != '[default]' %} btn{% if btnModel != '[default]' %}-{{ btnModel }}{% endif %}{% if btnTheme != '[default]' %}-{{ btnTheme }}{% endif %}{% endif %}{% endif %} {{ ctaClasses }}\"{% endif %}\n              {{ ctaAttributes|raw }}\n            >\n              <span>{{ ctaText|raw }}</span>{% if btnIcon %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                <use xlink:href=\"#glo-{{ btnIcon }}\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-{{ btnIcon }}\"></use>\n              </svg>{% endif %}\n            </a>\n          </div>\n        {% endif %}\n      </div>\n      <button type=\"button\" class=\"close glo-btn-close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n          <use xlink:href=\"#glo-close-2\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-close-2\"></use>\n        </svg>\n      </button>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "bannerHomepage",
        "title": "Banner, Homepage",
        "description": "Banner, Homepage fragment",
        "properties": {
          "id": {
            "title": "Banner ID",
            "description": "ID for the banner.",
            "type": "string",
            "format": "text"
          },
          "theme": {
            "title": "Banner theme",
            "description": "Banner color theme.",
            "type": "string",
            "enum": [
              "blue",
              "gray"
            ],
            "default": "blue"
          },
          "content": {
            "title": "Content",
            "description": "Text content.",
            "type": "string",
            "format": "markdown"
          },
          "ctaText": {
            "title": "CTA text",
            "description": "Button or anchor text.",
            "type": "string",
            "format": "markdown"
          },
          "ctaIcon": {
            "title": "CTA icon",
            "description": "Type of icon (if any).",
            "type": "string",
            "enum": [
              "[none]",
              "chevron-right",
              "arrow-right"
            ],
            "default": "[none]"
          },
          "ctaAction": {
            "title": "CTA action",
            "description": "Provide the URL for the button action.",
            "type": "string",
            "format": "text"
          },
          "ctaType": {
            "title": "CTA type",
            "description": "CTA to be shown as a link or button.",
            "type": "string",
            "enum": [
              "link",
              "button"
            ],
            "default": "button"
          },
          "btnModel": {
            "title": "CTA button model",
            "description": "If CTA type button, choose a design model.",
            "type": "string",
            "enum": [
              "[default]",
              "inverse",
              "outline"
            ],
            "default": "[default]"
          },
          "btnTheme": {
            "title": "CTA button theme",
            "description": "Choose a button design theme.",
            "type": "string",
            "enum": [
              "[default]",
              "action",
              "danger",
              "negative"
            ],
            "default": "[default]"
          },
          "tracking": {
            "title": "CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "ctaClasses": {
            "title": "CTA classes",
            "description": "Additional CSS classes for the button.",
            "type": "string",
            "format": "text"
          },
          "ctaAttributes": {
            "title": "CTA attributes",
            "description": "Additional HTML attributes for the button.",
            "type": "string",
            "format": "text"
          }
        },
        "required": []
      }
    },
    "breadcrumb": {
      "twig": "{% if list %}<nav aria-label=\"breadcrumb\">\n  <script type=\"application/ld+json\">\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": [\n      {% for item in list %}\n        {% set text %}{{ item.text }}{% endset %}\n        {\n          \"@type\": \"ListItem\",\n          \"position\": {{ loop.index }},\n          \"item\": { {% if item.href %} \"@id\": \"{{ item.href }}\", {% endif %}\"name\": \"{{ text|trim }}\" }\n        }{% if loop.index < loop.length %},{% endif %}\n    {% endfor %}\n    ]\n  }\n  </script>\n  <ol class=\"breadcrumb{% if mobile == 'none' %} d-none d-md-flex{% elseif mobile == 'arrow' %} only-second-to-last-on-mobile{% endif %}\">\n    <li class=\"previous-arrow\">\n      <a href=\"{{ list[list.length - 2].href }}\" title=\"{{ list[list.length - 2].text }}\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 23 19\">\n          <use xlink:href=\"#glo-left\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-left\"></use>\n        </svg>\n      </a>\n    </li>\n    {% for item in list %}\n      {% if item.text %}\n        {% if item.last %}\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            <span>{{ item.text|raw }}</span>\n          </li>\n        {% else %}\n          <li class=\"breadcrumb-item\">\n            {% if item.href %}\n              <a href=\"{{ item.href }}\"{% if item.tracking %} data-ga-label=\"{{ item.tracking }}\"{% endif %}>\n                <span>{{ item.text|raw }}</span>\n              </a>\n            {% else %}\n              <span>{{ item.text|raw }}</span>\n            {% endif %}\n          </li>\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n  </ol>\n</nav>{% endif %}\n",
      "schema": {
        "key": "breadcrumb",
        "title": "Breadcrumb",
        "description": "Breadcrumb Fragment",
        "properties": {
          "mobile": {
            "title": "On mobile",
            "description": "What to show on mobile. None or last link as an arrow.",
            "type": "string",
            "enum": [
              "[default]",
              "none",
              "arrow"
            ],
            "default": "[default]"
          },
          "list": {
            "title": "List",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "text": {
                  "title": "Text",
                  "type": "string",
                  "format": "text"
                },
                "href": {
                  "title": "Link URL",
                  "type": "string",
                  "format": "text"
                },
                "tracking": {
                  "title": "Tracking Label",
                  "type": "string",
                  "format": "text"
                }
              }
            }
          }
        },
        "required": []
      }
    },
    "closeCard": {
      "twig": "{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}{%\nif desktop or tablet %}{#\n  DEPRICATED: Old method, do not use (retained to prevent breaking changes)\n  #}{%\n  if tablet < 2 and desktop > 1 %}{%\n    set rows = ' flex-lg-row-reverse flex-lg-wrap'\n  %}{% elseif tablet > 1 %}{%\n    set rows = ' flex-md-row-reverse flex-md-wrap'\n  %}{% endif %}{%\n\n  if tablet > 1 %}{%\n    set md = ' col-md-6'\n  %}{% endif %}{%\n\n  if tablet < 2 and desktop == 2 %}{%\n    set lg = ' col-lg-6'\n  %}{% elseif desktop > 2 %}{%\n    set lg = ' col-lg-4'\n  %}{% endif %}{%\nelse %}{#\n  New Method: Define the column width of cards for extra large, desktop (large), and tablet (medium)\n  #}{%\n  if xlWrap == 'top-to-bottom' %}{%\n    set xlRow = ' flex-xl-column'\n  %}{% elseif xlWrap == 'bottom-to-top' %}{%\n    set xlRow = ' flex-xl-column-reverse'\n  %}{% elseif xlWrap == 'left-to-right' %}{%\n    set xlRow = ' flex-xl-row flex-xl-wrap'\n  %}{% else %}{# default = reverse (right-to-left) #}{%\n    set xlRow = ' flex-xl-row-reverse flex-xl-wrap'\n  %}{% endif %}{%\n\n  if desktopWrap == 'top-to-bottom' %}{%\n    set desktopRow = ' flex-lg-column'\n  %}{% elseif desktopWrap == 'bottom-to-top' %}{%\n    set desktopRow = ' flex-lg-column-reverse'\n  %}{% elseif desktopWrap == 'left-to-right' %}{%\n    set desktopRow = ' flex-lg-row flex-lg-wrap'\n  %}{% else %}{# default = reverse (right-to-left) #}{%\n    set desktopRow = ' flex-lg-row-reverse flex-lg-wrap'\n  %}{% endif %}{%\n\n  if tabletWrap == 'top-to-bottom' %}{%\n    set tabletRow = ''\n  %}{% elseif tabletWrap == 'bottom-to-top' %}{%\n    set tabletRow = ' flex-md-column-reverse'\n  %}{% elseif tabletWrap == 'left-to-right' %}{%\n    set tabletRow = ' flex-md-row flex-md-wrap'\n  %}{% else %}{# default = reverse (right-to-left) #}{%\n    set tabletRow = ' flex-md-row-reverse flex-md-wrap'\n  %}{% endif %}{%\n\n  if tabletColWidth > 11 %}{%\n    set md = ' col-md-12'\n  %}{% elseif tabletColWidth < 6 %}{%\n    set md = ' col-md-5'\n  %}{% else %}{%\n    set md = ' col-md-' ~ tabletColWidth\n  %}{% endif %}{%\n\n  if desktopColWidth > 11 %}{%\n    set lg = ' col-lg-12'\n  %}{% elseif desktopColWidth < 5 %}{%\n    set lg = ' col-lg-4'\n  %}{% else %}{%\n    set lg = ' col-lg-' ~ desktopColWidth\n  %}{% endif %}{%\n\n  if xlColWidth > 11 %}{%\n    set xl = ' col-xl-12'\n  %}{% elseif xlColWidth < 5 %}{%\n    set xl = ' col-xl-4'\n  %}{% else %}{%\n    set xl = ' col-xl-' ~ xlColWidth\n  %}{% endif %}{%\nendif %}{#\n  NOTE: Rules given for wrapping image to next line.\n    - 3 or more cards used\n    - image is large version\n    - display size is desktop large (lg)\n  Additionally the image has no left margin when wrapped.\n#}<div class=\"row glo-close-card-row flex-column justify-content-center align-content-center{{ rows }}{{ tabletRow }}{{ desktopRow }}{{ xlRow }}\">\n  {% for card in cards %}\n    <div class=\"card glo-close-card my-2 col-12{{ md }}{{ lg }}{{ xl }}{% if card.selected %} glo-selected{% if card.badge %} glo-badge{% endif %}{% endif %}\">\n      <div>\n        {% if card.selected and card.badge %}<p class=\"card-badge caption-3\">{{ card.badge|raw }}</p>{% endif %}\n        <div class=\"card-top\">\n          <div class=\"glo-header w-100 {% if card.imageSize == 'large' and cards|length > 2 %}d-flex flex-row flex-lg-column flex-xl-row{% else %}d-table{% endif %}\">\n            <div class=\"d-table-cell align-middle w-100\">\n              <h{{ index }} class=\"highlight-2 m-0\">{{ card.title|raw }}</h{{ index }}>\n              {% if card.subtitle %}\n                <p class=\"glo-subtitle{% if card.subtitleClass == 'bold' %} highlight-2{% else %} content-3{% endif %} m-0\">\n                  <span class=\"pricing-wrapper\">{{ card.subtitle|raw }}</span>{% if card.caption %}<span class=\"glo-caption caption-1\">&nbsp;{{ card.caption|raw }}</span>{% endif %}\n                </p>\n              {% endif %}\n            </div>\n            {% if card.image %}\n              <div class=\"d-table-cell align-top pl-4{% if card.imageSize == 'large' and cards|length > 2 %} pl-lg-0 pl-xl-4 pt-lg-2 pt-xl-0 d-flex flex-row flex-lg-column flex-xl-row{% endif %}\">\n                <img src=\"{{ card.image }}\" loading=\"lazy\" {% if card.imageSize == 'large' %} width=\"72\" height=\"72\"{% else %} width=\"48\" height=\"48\"{% endif %} alt=\"\" class=\"d-block\">\n              </div>\n            {% endif %}\n          </div>\n          {% if card.featureTag %}<div class=\"glo-feature-tag\">{{ card.featureTag|raw }}</div>{% endif %}\n          {% if card.mainContent%}<div class=\"glo-section content-3\">{{ card.mainContent|raw }}</div>{% endif %}\n        </div>\n        {% if ((card.mainBtnText and card.mainBtnAction) or (card.mainLinkText and card.mainLinkAction)) %}\n          <div class=\"glo-section d-table w-100\">\n            {% if card.extraSection != 'toggle' and card.extraSection != 'switch' and card.mainLinkText and card.mainLinkAction %}\n              {% if card.mainLinkType == 'modal' %}\n                <div class=\"d-table-cell align-middle w-100 glo-size-16 pr-2{% if not card.mainLinkTabModalDisable %} d-md-none{% endif %}\">\n                  <a\n                    id=\"{{ card.mainLinkAction }}-{{ loop.index }}-trigger\"\n                    href=\"#{{ card.mainLinkAction }}\"\n                    data-toggle=\"modal\"\n                    data-target=\"#{{ card.mainLinkAction|escape('html') }}\"\n                    {% if card.mainLinkTabModalDisable %}\n                      data-not-tab=\"true\"\n                    {% else %}\n                      onclick=\"[].slice.call(document.querySelectorAll('#{{ card.mainLinkAction }} .nav-tabs a'))[{{ loop.index - 1 }}].click()\"\n                    {% endif %}\n                    {% if card.mainLinkTracking %}data-ga-label=\"{{ card.mainLinkTracking }}\"{% endif %}\n                    class=\"glo-link-action-plain {{card.mainLinkClasses}}\"\n                    {{card.mainLinkAttributes|raw}}\n                  >\n                    {{ card.mainLinkText|raw }}{% if card.mainLinkIcon %}<span class=\"btn btn-dot btn-action btn-xs\" title=\"info\"\n                      ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                        <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                      </svg>\n                    </span>{% endif %}\n                  </a>\n                </div>\n              {% else %}\n                <div class=\"d-table-cell align-middle w-100 glo-size-16 pr-2\">\n                  <a\n                    href=\"{{ card.mainLinkAction }}\"\n                    {% if '//' in card.mainLinkAction %} target=\"_blank\" rel=\"noopener\"{% endif %}\n                    {% if card.mainLinkTracking %}data-ga-label=\"{{ card.mainLinkTracking }}\"{% endif %}\n                    class=\"glo-link-action-plain {{card.mainLinkClasses}}\"\n                    {{card.mainLinkAttributes|raw}}\n                  >\n                    {{ card.mainLinkText|raw }}{% if card.mainLinkIcon %}<span class=\"btn btn-dot btn-action btn-xs\" title=\"info\"\n                      ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                        <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                      </svg>\n                    </span>{% endif %}\n                  </a>\n                </div>\n              {% endif %}\n            {% endif %}\n            {% if card.mainBtnAction and card.mainBtnText %}\n              <div class=\"d-table-cell align-middle\">\n                {% if actionType == 'radio' %}\n                  <span class=\"btn-group\" role=\"group\">\n                    <input id=\"{{ actionName }}{{ seed }}-{{ loop.index }}\" type=\"radio\" name=\"{{ actionName }}\" value=\"{{ card.mainBtnAction }}\" required>\n                    <label for=\"{{ actionName }}{{ seed }}-{{ loop.index }}\" class=\"btn btn{% if card.mainBtnModel == 'outline' %}-outline{% endif %}-action\">\n                      <span class=\"glo-btn-text\">{{ card.mainBtnText|raw }}</span>\n                      <span class=\"glo-btn-icon\" aria-hidden=\"true\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                          <polyline points=\"2 12 9 18 21 4\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"6\"></polyline>\n                        </svg>\n                      </span>\n                    </label>\n                  </span>\n                {% else %}\n                  <a\n                    href=\"{{ card.mainBtnAction }}\"\n                    {% if '//' in card.mainBtnAction %} target=\"_blank\" rel=\"noopener\"{% endif %}\n                    {% if card.mainBtnTracking %}data-ga-label=\"{{ card.mainBtnTracking }}\"{% endif %}\n                    class=\"btn btn{% if card.mainBtnModel == 'outline' %}-outline{% endif %}-action {{card.mainBtnClasses}}\"\n                    {{card.mainBtnAttributes|raw}}\n                  >{{ card.mainBtnText|raw }}</a>\n                {% endif %}\n              </div>\n            {% endif %}\n          </div>\n        {% endif %}\n        {% if card.extraSection == 'toggle' or card.extraSection == 'switch' %}\n          <div class=\"glo-size-16 pt-4{% if card.extraSection == 'switch' %} d-md-none{% endif %}\">\n            <a\n              href=\"#collapse{{ seed }}-{{ loop.index }}\"\n              data-toggle=\"collapse\"\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse{{ seed }}-{{ loop.index }}\"\n              class=\"glo-toggle glo-link-action-plain collapsed\">\n              {% if card.mainLinkText %}\n                <span>{{card.mainLinkText|raw}}</span>\n              {% else %}\n                <span class=\"glo-inline-a\">View</span><span class=\"glo-inline-b\" aria-hidden=\"true\">Hide</span> features<span class=\"glo-icon icon-chevron\"\n              >\n              {%endif %}\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\">\n                  <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90.000000) translate(0.00000, -13.000000)\"></polyline>\n                </g>\n              </svg></span>\n            </a>\n          </div>\n        {% endif %}\n        {% if card.extraSection and card.extraSection != '[none]' %}\n          <div\n            {% if card.extraSection == 'toggle' or card.extraSection == 'switch' %}\n              id=\"collapse{{ seed }}-{{ loop.index }}\"\n              class=\"glo-section content-3 collapse{% if card.extraSection == 'switch' %} d-md-block{% endif %}{% if card.extraRule and card.extraRule != '[none]' %} glo-{{ card.extraRule }}{% endif %}\"\n            {% else %}\n              class=\"glo-section content-3{% if card.extraRule and card.extraRule != '[none]' %} glo-{{ card.extraRule }}{% endif %}\"\n            {% endif %}\n          >\n            {% if card.extraContent %}<div>{{ card.extraContent|raw }}</div>{% endif %}\n            {% if card.extraList|length > 0 and card.extraListIcon %}\n              <ul class=\"glo-list-{{ card.extraListIcon }}\">\n                {% for item in card.extraList %}<li>{{ item.content|raw }}</li>{% endfor %}\n              </ul>\n            {% endif %}\n            {% if (card.extraLinkText and card.extraLinkAction) or (card.extraBtnAction and card.extraBtnText) %}\n              <div class=\"glo-section d-table w-100\">\n                {% if card.extraLinkText and card.extraLinkAction %}\n                  <div class=\"d-table-cell align-middle w-100 glo-size-16 pr-2\">\n                    {% if card.extraLinkType == 'modal' %}\n                      <a\n                        href=\"#{{ card.extraLinkAction }}\"\n                        data-toggle=\"modal\"\n                        data-target=\"#{{ card.extraLinkAction|escape('html') }}\"\n                        {% if card.extraLinkTracking %}data-ga-label=\"{{ card.extraLinkTracking }}\"{% endif %}\n                        class=\"glo-link-action-plain {{card.extraLinkClasses}}\"\n                        {{card.extraLinkAttributes|raw}}\n                      >\n                        {{ card.extraLinkText|raw }}{% if card.extraLinkIcon %}<span class=\"btn btn-dot btn-action btn-xs\" title=\"info\"\n                          ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                            <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                          </svg>\n                        </span>{% endif %}\n                      </a>\n                    {% else %}\n                      <a\n                        href=\"{{ card.extraLinkAction }}\"\n                        {% if '//' in card.extraLinkAction %} target=\"_blank\" rel=\"noopener\"{% endif %}\n                        {% if card.extraLinkTracking %}data-ga-label=\"{{ card.extraLinkTracking }}\"{% endif %}\n                        class=\"glo-link-action-plain {{card.extraLinkClasses}}\"\n                        {{card.extraLinkAttributes|raw}}\n                      >\n                        {{ card.extraLinkText|raw }}{% if card.extraLinkIcon %}<span class=\"btn btn-dot btn-action btn-xs\" title=\"info\"\n                          ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                            <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                          </svg>\n                        </span>{% endif %}\n                      </a>\n                    {% endif %}\n                  </div>\n                {% endif %}\n                {% if card.extraBtnAction and card.extraBtnText %}\n                  <div class=\"d-table-cell align-middle\">\n                    <a\n                      href=\"{{ card.extraBtnAction }}\"\n                      {% if '//' in card.extraBtnAction %} target=\"_blank\" rel=\"noopener\"{% endif %}\n                      {% if card.extraBtnTracking %}data-ga-label=\"{{ card.extraBtnTracking }}\"{% endif %}\n                      class=\"btn btn{% if card.extraBtnModel == 'outline' %}-outline{% endif %}-action {{card.extraBtnClasses}}\"\n                      {{card.extraBtnAttributes|raw}}\n                    >{{ card.extraBtnText|raw }}</a>\n                  </div>\n                {% endif %}\n              </div>\n            {% endif %}\n          </div>\n        {% endif %}\n      </div>\n    </div>\n  {% endfor %}\n</div>\n",
      "schema": {
        "key": "closeCard",
        "title": "Close Card",
        "description": "Close Card fragment: product item detail comparison cards.",
        "properties": {
          "headerIndex": {
            "title": "Card: heading index",
            "description": "What will be the starting heading index? (number: 1-6, default: 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "tabletWrap": {
            "title": "Card: tablet sort",
            "description": "Choose the sort order of the cards for Tablet. (default: right-to-left)",
            "type": "string",
            "enum": [
              "top-to-bottom",
              "bottom-to-top",
              "right-to-left",
              "left-to-right"
            ],
            "default": "left-to-right"
          },
          "tabletColWidth": {
            "title": "Card: tablet column width",
            "description": "How many columns wide (5 - 12) for each card on Tablet.",
            "type": "number",
            "format": "number",
            "default": 6
          },
          "desktopWrap": {
            "title": "Card: desktop sort",
            "description": "Choose the sort order of the cards for Desktop. (default: right-to-left)",
            "type": "string",
            "enum": [
              "top-to-bottom",
              "bottom-to-top",
              "right-to-left",
              "left-to-right"
            ],
            "default": "left-to-right"
          },
          "desktopColWidth": {
            "title": "Card: desktop column width",
            "description": "How many columns wide (4 - 12) for each card on Desktop.",
            "type": "number",
            "format": "number",
            "default": 5
          },
          "xlWrap": {
            "title": "Card: XL desktop sort",
            "description": "Choose the sort order of the cards for XL Desktop. (default: right-to-left)",
            "type": "string",
            "enum": [
              "top-to-bottom",
              "bottom-to-top",
              "right-to-left",
              "left-to-right"
            ],
            "default": "left-to-right"
          },
          "xlColWidth": {
            "title": "Card: XL desktop column width",
            "description": "How many columns wide (4 - 12) for each card on XL Desktop.",
            "type": "number",
            "format": "number",
            "default": 4
          },
          "actionType": {
            "title": "Main: button action type",
            "description": "Choose how the Main button action shall behave. A \"link\" type behaves as a standard link with URL. A non-link action will require Form integration support with a data value. Only the Main button can be used with Form integration.",
            "type": "string",
            "enum": [
              "link",
              "radio"
            ],
            "default": "link"
          },
          "actionName": {
            "title": "Main: form field name",
            "description": "If a Form action is used for the buttons, provide a name for the data field.",
            "type": "string",
            "format": "text"
          },
          "cards": {
            "title": "Cards",
            "description": "Define the contents of each card item in descending sequence. These items will be rendered in descending order, the way they will be shown on mobile. Desktop will display these items from right to left, in reverse order.",
            "type": "array",
            "items": {
              "title": "Card",
              "type": "object",
              "properties": {
                "selected": {
                  "title": "Header: card selected",
                  "description": "Header section: Display this card as selected with a heavy border? The first card is generally selected and may have a badge label.",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "badge": {
                  "title": "Header: card badge",
                  "description": "Header section: Name for the card badge if it is to display one. Will only be applied to a selected card.",
                  "type": "string",
                  "format": "markdown"
                },
                "title": {
                  "title": "Header: card title",
                  "description": "Header section: Title or product name for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitle": {
                  "title": "Header: subtitle",
                  "description": "Header section: Card subtitle if any.",
                  "type": "string",
                  "format": "markdown"
                },
                "caption": {
                  "title": "Header: subtitle caption",
                  "description": "Header section: Caption statement to follow the subtitle, such as a descriptor.",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitleClass": {
                  "title": "Header: subtitle class",
                  "description": "Header section: Should the subtitle be bolded or default plain text?",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "bold"
                  ]
                },
                "image": {
                  "title": "Header: image URL",
                  "description": "Header section: Icon/image URL to show to the right of the title.",
                  "type": "string",
                  "format": "text"
                },
                "imageSize": {
                  "title": "Header: image size",
                  "description": "Header section: Select the size of the image. (small: icon 48x48, large: photo 72x72)",
                  "type": "string",
                  "enum": [
                    "small",
                    "large"
                  ]
                },
                "featureTag": {
                  "title": "Header: feature tag",
                  "description": "Header section: Special feature tags to highlight for this specific item.",
                  "type": "string",
                  "format": "markdown"
                },
                "mainContent": {
                  "title": "Main: content",
                  "description": "Main section: Main content or message for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "mainBtnText": {
                  "title": "Main: button text",
                  "description": "Main section: Text for the button to display below the main content section.",
                  "type": "string",
                  "format": "markdown"
                },
                "mainBtnAction": {
                  "title": "Main: button action",
                  "description": "Main section: If \"Button action type\" of \"link\" is used, provide the URL. For a Form action, provide the data for the field.",
                  "type": "string",
                  "format": "text"
                },
                "mainBtnModel": {
                  "title": "Main: button model",
                  "description": "Main section: Button design model to use in the main content section.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "mainBtnTracking": {
                  "title": "Main: button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "mainBtnClasses": {
                  "title": "Main: button custom classes",
                  "description": "Main section: Button additional classes for styling overrides.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "mainBtnAttributes": {
                  "title": "Main: button additional attributes",
                  "description": "Main section: Button additional HTML attributes when needed for things like data or tracking.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraSection": {
                  "title": "Main: extra section visibility",
                  "description": "Main section: If using the extra content section below the main buttons, how will it be displayed? Note: Using the extra section as a toggle requires the link to the left of the main section button to be defined as a toggle. 'switch' will use toggle for mobile and always display otherwise.",
                  "type": "string",
                  "enum": [
                    "[none]",
                    "visible",
                    "toggle",
                    "switch"
                  ]
                },
                "mainLinkText": {
                  "title": "Main: link text",
                  "description": "Main section: Text for extra section toggle or optional link. This will provide the text for the link or override the default toggle text when the extra section toggle is used.",
                  "type": "string",
                  "format": "markdown"
                },
                "mainLinkType": {
                  "title": "Main: link type",
                  "description": "Main section: If extra section is not toggled, provide the action type for the optional link. Choose if this link should call a modal or open a web page. NOTE: Modals are provided external of this fragment.",
                  "type": "string",
                  "enum": [
                    "link",
                    "modal"
                  ]
                },
                "mainLinkTabModalDisable": {
                  "title": "Main: disable 'tab modal' integration",
                  "description": "Main section: Check this option if using a specific modal integration that is not using the Tab Modal fragment.",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "mainLinkAction": {
                  "title": "Main: link action",
                  "description": "Main section: If extra section is not toggled, provide the action for the optional link. If modal, give the modal ID. If link, give the URL.",
                  "type": "string",
                  "format": "text"
                },
                "mainLinkIcon": {
                  "title": "Main: link info icon",
                  "description": "Main section: If extra section is not toggled: Should the link contain an \"info\" icon?",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "mainLinkTracking": {
                  "title": "Main: link tracking label",
                  "type": "string",
                  "format": "text"
                },
                "mainLinkClasses": {
                  "title": "Main: link custom classes",
                  "description": "Main section: Link additional classes for styling overrides.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "mainLinkAttributes": {
                  "title": "Main: link additional attributes",
                  "description": "Main section: Link additional HTML attributes when needed for things like data or tracking.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraRule": {
                  "title": "Extra: rule",
                  "description": "Extra section: Choose a rule (line) to separate the extra section from the content above.",
                  "type": "string",
                  "enum": [
                    "[none]",
                    "border",
                    "divider"
                  ]
                },
                "extraContent": {
                  "title": "Extra: content",
                  "description": "Extra section: Content or message section to display in the extra details section.",
                  "type": "string",
                  "format": "markdown"
                },
                "extraListIcon": {
                  "title": "Extra: list icon",
                  "description": "Extra section: If using a list, choose the icon to use as a bullet point in the extra content section.",
                  "type": "string",
                  "enum": [
                    "check",
                    "bullet"
                  ]
                },
                "extraList": {
                  "title": "Extra: list items",
                  "description": "Extra section: Content for each list item in the extra section.",
                  "type": "array",
                  "items": {
                    "title": "Item",
                    "type": "object",
                    "properties": {
                      "content": {
                        "title": "Extra: list item content",
                        "description": "Extra section: Content for this list item.",
                        "type": "string",
                        "format": "markdown"
                      }
                    }
                  }
                },
                "extraBtnText": {
                  "title": "Extra: button text",
                  "description": "Extra section: Text for the button if used in the extra content section",
                  "type": "string",
                  "format": "markdown"
                },
                "extraBtnAction": {
                  "title": "Extra: button URL",
                  "description": "Extra section: URL for the button in the extra content section.",
                  "type": "string",
                  "format": "text"
                },
                "extraBtnModel": {
                  "title": "Extra: button model",
                  "description": "Extra section: Button design to use for the extra content section?",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "extraBtnTracking": {
                  "title": "Extra: button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "extraBtnClasses": {
                  "title": "Extra: button custom classes",
                  "description": "Extra section: Extra button additional classes for styling overrides.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraBtnAttributes": {
                  "title": "Extra: button additional attributes",
                  "description": "Extra section: Button additional HTML attributes when needed for things like data or tracking.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraLinkText": {
                  "title": "Extra: link text",
                  "description": "Extra section: Text for the link to display in the extra section.",
                  "type": "string",
                  "format": "markdown"
                },
                "extraLinkType": {
                  "title": "Extra: link type",
                  "description": "Extra section: Provide the action type for the optional link. Choose if this link should call a modal or open a web page. NOTE: Modals are provided external of this fragment.",
                  "type": "string",
                  "enum": [
                    "link",
                    "modal"
                  ]
                },
                "extraLinkAction": {
                  "title": "Extra: link action",
                  "description": "Extra section: Provide the action for the optional link. If modal, give the modal ID. If link, give the URL.",
                  "type": "string",
                  "format": "text"
                },
                "extraLinkIcon": {
                  "title": "Extra: link info icon",
                  "description": "Extra section: If the link text and action were provided. Should it contain an \"info\" icon?",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "extraLinkTracking": {
                  "title": "Extra: link tracking label",
                  "type": "string",
                  "format": "text"
                },
                "extraLinkClasses": {
                  "title": "Extra: link custom classes",
                  "description": "Extra section: Link additional classes for styling overrides.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraLinkAttributes": {
                  "title": "Extra: link additional attributes",
                  "description": "Extra section: Link additional HTML attributes when needed for things like data or tracking.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              }
            },
            "default": [
              {
                "selected": false,
                "subtitleClass": "[default]",
                "imageSize": "small",
                "mainBtnModel": "[default]",
                "extraSection": "[none]",
                "mainLinkType": "link",
                "mainLinkTabModalDisable": false,
                "mainLinkIcon": true,
                "extraRule": "[none]",
                "extraListIcon": "check",
                "extraList": [],
                "extraBtnModel": "outline",
                "extraLinkType": "link",
                "extraLinkIcon": false
              }
            ]
          }
        }
      }
    },
    "comboAttorneyBanner6colXContactUs": {
      "twig": "<div class=\"container questions combo-attorney-6col-x-contact-us-container\">\n  {% if heading %}<h2 class=\"highlight-1 m-0 pb-5\">{{ heading|raw }}</h2>{% endif %}\n  <div class=\"row\">\n    {% with banner %}\n      <!-- glo:fragment:attorneyBanner6col -->\n    {% endwith %}\n    {% with contactUs %}\n      <!-- glo:fragment:contactUs -->\n    {% endwith %}\n  </div>\n</div>\n",
      "schema": {
        "key": "comboAttorneyBanner6colXContactUs",
        "title": "Combo: Banner, Attorney[6-col] |x| Contact Us",
        "description": "A combination of the Attorney Banner and the Contact Us Fragment",
        "properties": {
          "heading": {
            "title": "Heading",
            "description": "Fragment heading",
            "type": "string",
            "format": "string",
            "default": ""
          },
          "banner": {
            "$schema": "glo:fragment:attorneyBanner6col"
          },
          "contactUs": {
            "$schema": "glo:fragment:contactUs"
          }
        }
      }
    },
    "comparisonTable": {
      "twig": "{%\n  set columns = categories|length\n%}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit main header level: 6 #}{%\n  set index = (indexA < 6) ? indexA : 5\n%}<div class=\"glo-comparison-table\"{% if columns > 0 and columns < 5 and rows|length > 0 %} data-columns=\"{{ columns }}\"{% endif %}{% if stickyHeader %} data-sticky{% endif %}>\n  {% if columns < 1 or columns > 4 or rows|length < 1 %}\n    <div class=\"container\">\n      <p>There are either too few or too many categories, or there are no rows.</p>\n    </div>\n  {% else %}\n    <div class=\"table-header\">\n      <div class=\"table-sm container d-md-none\" aria-labelledby=\"comparison-table-mobile-title\">\n        <div class=\"row\">\n          <div class=\"table-heading col-6\">\n            <div class=\"table-category\">\n              {% if columns < 3 %}\n                <p class=\"d-block m-0 highlight-2\" title=\"{{ categories[0].name }}\">{{ categories[0].name|raw }}</p>\n              {% endif %}\n              {% if columns > 2 %}\n                <p class=\"form form-select py-0\">\n                  <select id=\"first-column\" name=\"first-column\" aria-label=\"first column\" class=\"form-control\">\n                    {% for category in categories %}\n                      {% if loop.index < columns %}\n                        <option value=\"{{ loop.index }}\"{% if loop.index == 1 %} selected{% endif %}>{{ category.name }}</option>\n                      {% endif %}\n                    {% endfor %}\n                  </select>\n                  <label for=\"first-column\">{{ mobileLabel1 ?: 'Column 1' }}</label>\n                  <span class=\"form-svg\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                      <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90.000000) translate(0.00000, -13.000000)\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></polyline>\n                    </svg>\n                  </span>\n                </p>\n              {% endif %}\n            </div>\n          </div>\n          <div class=\"table-heading col-6\">\n            <div class=\"table-category\">\n              {% if columns < 3 %}\n                <p class=\"d-block m-0 highlight-2\" title=\"{{ categories[1].name }}\">{{ categories[1].name|raw }}</p>\n              {% endif %}\n              {% if columns > 2 %}\n                <p class=\"form form-select py-0\">\n                  <select name=\"second-column\" aria-label=\"second column\" class=\"form-control\">\n                    {% for category in categories %}\n                      {% if loop.index > 1 %}\n                        <option value=\"{{ loop.index }}\"{% if loop.index == 2 %} selected{% endif %}>{{ category.name }}</option>\n                      {% endif %}\n                    {% endfor %}\n                  </select>\n                  <label for=\"second-column\">{{ mobileLabel2 ?: 'Column 2' }}</label>\n                  <span class=\"form-svg\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                      <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90.000000) translate(0.00000, -13.000000)\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></polyline>\n                    </svg>\n                  </span>\n                </p>\n              {% endif %}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"table-lg container d-none d-md-block\">\n        <div class=\"row\">\n          <div class=\"d-flex flex-row col-12 p-0{% if columns < 4 %} col-lg-10 offset-lg-1{% endif %}\">\n            {% for category in categories %}\n              <div class=\"table-heading {% if columns == 4 %}col-3{% elseif columns == 3 %}col-4{% elseif columns == 2 %}col-6{% else %}col-12{% endif %}{% if loop.index > 2 %} table-hide{% endif %}\">\n                <div class=\"table-category\">\n                  <p class=\"d-block m-0 highlight-2\" title=\"{{ category.name }}\">{{ category.name|raw }}</p>\n                </div>\n              </div>\n            {% endfor %}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <section class=\"table-body container\">\n      {% for row in rows %}\n        <div class=\"row {{ row.rowClass }}\">\n          <div class=\"d-flex flex-row col-12 p-0{% if columns < 4 %} col-lg-10 offset-lg-1{% endif %}\">\n            {% for column in 1..columns %}{# Always match row columns with total table columns #}\n              {% set category = categories[loop.index0] %}\n              {% set item = row.categories[column - 1] %}\n              <div class=\"table-option content-3 flex-even{% if loop.index > 2 %} table-hide{% endif %}\" data-index=\"{{ loop.index }}\">\n                <div class=\"h-100 pt-3 pt-md-4 pb-4 pb-md-9 content-3\" aria-label=\"for {{ category.name }}\">\n                  {% if item.image %}<img src=\"{{ item.image }}\" width=\"36\" height=\"36\" alt=\"\" class=\"mb-2\" />{% endif %}\n                  {% if item.title %}<p class=\"m-0\"><strong class=\"content-4\">{{ item.title|raw }}</strong></p>{% endif %}\n                  {% if item.description %}<div>{{ item.description|raw }}</div>{% endif %}\n                </div>\n              </div>\n            {% endfor %}\n          </div>\n        </div>\n      {% endfor %}\n    </section>\n\n    <div class=\"table-footer container\">\n      <div class=\"row\">\n        <div class=\"d-flex flex-row col-12 p-0{% if columns < 4 %} col-lg-10 offset-lg-1{% endif %}\">\n          {% for category in categories %}\n            <div class=\"table-option caption-1 flex-even{% if loop.index > 2 %} table-hide{% endif %}\" data-index=\"{{ loop.index }}\" aria-label=\"for {{ category.name }}\">\n              <div class=\"pt-3 pt-md-4\">\n                {% if category.btnText and category.btnLink %}\n                <a\n                  href=\"{{ category.btnLink }}\"\n                  aria-label=\"{{ category.btnText }} for {{ category.name }}\"\n                  {% if category.btnTracking %}data-ga-label=\"{{ category.btnTracking }}\"{% endif %}\n                  class=\"btn btn{% if category.btnModel and category.btnModel != '[default]' %}-{{ category.btnModel }}{% endif %}{% if category.btnTheme and category.btnTheme != '[default]' %}-{{ category.btnTheme }}{% endif %} {{ category.btnClasses }}\"\n                  {{ category.btnAttributes|raw }}\n                ><span>{{ category.btnText|raw }}</span></a>\n                {% endif %}\n              </div>\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n    </div>\n  {% endif %}\n</div>\n",
      "schema": {
        "key": "comparisonTable",
        "title": "Comparison Table",
        "description": "Comparison Table fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading index",
            "description": "What will be the starting heading index? (number: 1-5, default: 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "stickyHeader": {
            "title": "Sticky header",
            "description": "",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "mobileLabel1": {
            "title": "Mobile label 1",
            "description": "Label for mobile column 1 select list to describe the selection type.",
            "type": "string",
            "format": "markdown"
          },
          "mobileLabel2": {
            "title": "Mobile label 2",
            "description": "Label for mobile column 2 select list to describe the selection type.",
            "type": "string",
            "format": "markdown"
          },
          "categories": {
            "title": "Categories (column)",
            "description": "Table column categories. Table will only render if there are two to four category column names defined.",
            "type": "array",
            "items": {
              "title": "Category",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Category title",
                  "description": "Displayed category title shown at the top of the table column.",
                  "type": "string",
                  "format": "markdown"
                },
                "btnText": {
                  "title": "Button text",
                  "description": "Text shown in the button. (Text and URL required to display)",
                  "type": "string",
                  "format": "markdown"
                },
                "btnLink": {
                  "title": "Button URL",
                  "description": "URL destination when the button is clicked. (Text and URL required to display)",
                  "type": "string",
                  "format": "text"
                },
                "btnModel": {
                  "title": "Button model",
                  "description": "The category buttons can use solid or outline models.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "btnTheme": {
                  "title": "Button theme",
                  "description": "Choose a category buttons theme, default black or action blue.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "action"
                  ]
                },
                "btnTracking": {
                  "title": "Button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "btnClasses": {
                  "title": "Button classes",
                  "description": "Add additional CSS styling class for the CTA button.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "btnAttributes": {
                  "title": "Button attributes",
                  "description": "Add additional HTML attributes to the CTA button.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              },
              "required": [
                "name"
              ]
            },
            "default": [
              {
                "btnModel": "[default]"
              }
            ]
          },
          "rows": {
            "title": "Table rows",
            "description": "The table can have zero to many rows.",
            "type": "array",
            "items": {
              "title": "Row",
              "type": "object",
              "properties": {
                "rowClass": {
                  "title": "CSS Row Classes",
                  "description": "[Optional] CSS classes to apply to the row.",
                  "type": "string",
                  "format": "text"
                },
                "categories": {
                  "title": "Row categories",
                  "type": "array",
                  "items": {
                    "title": "Row category",
                    "type": "object",
                    "properties": {
                      "image": {
                        "title": "Icon/image",
                        "description": "Image/icon for the item cell.",
                        "type": "string",
                        "format": "text"
                      },
                      "title": {
                        "title": "Row title",
                        "description": "Title for this row. If \"new section\" was selected this title will begin a new sub-group of row items and the remainder of this row data will be ignored.",
                        "type": "string",
                        "format": "markdown"
                      },
                      "description": {
                        "title": "Row description",
                        "description": "Detailed description about this row item.",
                        "type": "string",
                        "format": "markdown"
                      }
                    }
                  }
                }
              },
              "required": []
            },
            "default": [
              {
                "categories": [
                  {
                    "icon": "[none]"
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "categories",
          "rows"
        ]
      }
    },
    "contactInfoSlider": {
      "twig": "{%\n  set svgPath = '/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg'\n%}<div\n  id=\"contact-info-slider\"\n  class=\"glo-contact-info-slider modal modal-md fade\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"contact-info-slider-label\"\n  aria-hidden=\"true\">\n  <div\n    class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\"\n    role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body content-3\">\n        {% if title %}\n        <h2\n          id=\"contact-info-slider-label\"\n          class=\"highlight-2 mb-4 text-center\"\n        >{{ title|raw }}</h2>\n        {% endif %}\n\n        <div class=\"modal-message\">\n          {% if content %}\n          <p class=\"content-3 mb-0\">{{ content|raw }}</p>\n          {% endif %}\n\n          <div class=\"my-4\">\n            {% if primaryCtaUrl %}\n            <a\n              href=\"{{ primaryCtaUrl }}\"\n              {% if '//' in primaryCtaUrl %} target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if primaryCtaTracking %}data-ga-label=\"{{ primaryCtaTracking }}\"{% endif %}\n              class=\"btn btn-block{% if secondaryCta is not empty %} mb-2{% endif %} btn-action primaryCta {{ primaryCtaClasses }}\"\n              {{ primaryCtaAttributes|raw }}\n            ><span>{{ primaryCta|raw }}</span></a>\n            {% endif %}\n\n            {% if secondaryCtaUrl %}\n            <a\n              href=\"{{ secondaryCtaUrl }}\"\n              {% if '//' in secondaryCtaUrl %} target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if secondaryCtaTracking %}data-ga-label=\"{{ secondaryCtaTracking }}\"{% endif %}\n              class=\"btn btn-block btn-outline secondaryCta {{ secondaryCtaClasses }}\"\n              {{ secondaryCtaAttributes|raw }}\n            ><span>{{ secondaryCta|raw }}</span></a>\n            {% endif %}\n          </div>\n\n          {% if subCopy %}\n          <p class=\"caption-1\">\n            {{ subCopy|raw }}\n            {% if subCopyCtaUrl %}\n            <a\n              href=\"{{ subCopyCtaUrl }}\"\n              {% if '//' in subCopyCtaUrl %} target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if copyCtaTracking %}data-ga-label=\"{{ copyCtaTracking }}\"{% endif %}\n              class=\"glo-link-action subCopyCta {{ copyCtaClasses }}\"\n              {{ copyCtaAttributes|raw }}\n            ><span>{{ subCopyCta|raw }}</span></a>\n            {% endif %}\n          </p>\n          {% endif %}\n        </div>\n      </div>\n\n      <button type=\"button\" class=\"close glo-btn-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 13 13\" width=\"13\" height=\"13\">\n          <use xlink:href=\"#glo-close-2\" href=\"{{ svgPath }}#glo-close-2\"></use>\n        </svg>\n      </button>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "contactInfoSlider",
        "title": "Contact Info Slider",
        "description": "Contact Info Slider fragment",
        "properties": {
          "title": {
            "title": "Slider title",
            "type": "string",
            "format": "markdown"
          },
          "content": {
            "title": "Body caption",
            "type": "string",
            "format": "markdown"
          },
          "primaryCta": {
            "title": "Primary CTA text",
            "description": "Text displayed in the primary CTA",
            "type": "string",
            "format": "markdown"
          },
          "primaryCtaUrl": {
            "title": "Primary CTA URL",
            "description": "Link parameter for the primary CTA",
            "type": "string",
            "format": "text"
          },
          "primaryCtaTracking": {
            "title": "Primary CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "primaryCtaClasses": {
            "title": "Primary CTA classes",
            "type": "string",
            "format": "text"
          },
          "primaryCtaAttributes": {
            "title": "Primary CTA attributes",
            "type": "string",
            "format": "text"
          },
          "secondaryCta": {
            "title": "Secondary CTA text",
            "description": "Text displayed in the secondary CTA",
            "type": "string",
            "format": "markdown"
          },
          "secondaryCtaUrl": {
            "title": "Secondary CTA URL",
            "description": "Link parameter for the secondary CTA",
            "type": "string",
            "format": "text"
          },
          "secondaryCtaTracking": {
            "title": "Secondary CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "secondaryCtaClasses": {
            "title": "Secondary CTA classes",
            "type": "string",
            "format": "text"
          },
          "secondaryCtaAttributes": {
            "title": "Secondary CTA attributes",
            "type": "string",
            "format": "text"
          },
          "subCopy": {
            "title": "Sub-copy text",
            "description": "Text displayed at the end of the fragment",
            "type": "string",
            "format": "markdown"
          },
          "subCopyCta": {
            "title": "Sub-copy CTA",
            "description": "Text displayed in the sub-copy CTA",
            "type": "string",
            "format": "markdown"
          },
          "subCopyCtaUrl": {
            "title": "Sub-copy CTA URL",
            "description": "Link parameter for the sub-copy CTA",
            "type": "string",
            "format": "text"
          },
          "copyCtaTracking": {
            "title": "Copy CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "copyCtaClasses": {
            "title": "Copy CTA classes",
            "type": "string",
            "format": "text"
          },
          "copyCtaAttributes": {
            "title": "Copy CTA attributes",
            "type": "string",
            "format": "text"
          }
        },
        "required": []
      }
    },
    "contactUs": {
      "twig": "<div id=\"contact-us\" class=\"contact-us col-12 d-flex {{ (fullWidth and image) ? 'flex-row' : 'col-lg-6' }}\">\n{% set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex %}{# limit header level: 6 #}{% set index = (indexA < 7) ? indexA : 6 %}\n\n{% if phone matches '/^[0-9]{10}$/' %}\n  {% set firstChain = phone|slice(0, 3) %}\n  {% set secondChain = phone|slice(3, 3) %}\n  {% set thirdChain = phone|slice(6, 4) %}\n  {% set formattedNumberPhone = \"(\" ~ firstChain ~ \") \" ~ secondChain ~ \"-\" ~ thirdChain %}\n  {% if not phoneOnMobile %}\n    {% set phoneOnMobile = phone %}\n  {% endif %}\n{% endif %}\n\n{% if phoneOnMobile matches '/^[0-9]{10}$/' %}\n  {% set firstChain = phoneOnMobile|slice(0, 3) %}\n  {% set secondChain = phoneOnMobile|slice(3, 3) %}\n  {% set thirdChain = phoneOnMobile|slice(6, 4) %}\n  {% set formattedNumberPhoneMobile = \"(\" ~ firstChain ~ \") \" ~ secondChain ~ \"-\" ~ thirdChain %}\n{% endif %}\n  <div class=\"flex-fill d-flex align-items-center\">\n    <div>\n      <h{{ index }} class=\"highlight-2 contact-us-heading\">\n        <span class=\"mb-0\">\n          Call an agent at\n        </span>\n        {% if formattedNumberPhone %}\n          <a\n            href=\"tel:+1{{ phone }}\"\n            {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n            class=\"contact-us-phone contact-us-phone-desktop d-none d-md-inline-block glo-link-plain {% if customClasses %} {{ customClasses }}{% endif %}\"\n            {{ attributes|raw }}\n          >{{ formattedNumberPhone }}</a>\n        {% endif %}\n        {% if formattedNumberPhoneMobile %}\n          <a\n            href=\"tel:+1{{ phoneOnMobile }}\"\n            {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n            class=\"contact-us-phone contact-us-phone-mobile d-block d-md-none glo-link-plain {% if customClasses %} {{ customClasses }}{% endif %}\"\n            {{ attributes|raw }}\n          >{{ formattedNumberPhoneMobile }}</a>\n        {% endif %}\n      </h{{ index }}>\n      <p class=\"content-2 contact-us-hours\">\n        Mon-Fri: 5 a.m.-7 p.m. PT<br>\n        Weekends: 7 a.m.-4 p.m. PT\n      </p>\n      <p class=\"content-3 contact-us-location mb-0\">\n        Our agents are based in the U.S.\n        <svg class=\"ml-1\" width=\"36\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill=\"#FFF\" d=\"M0 1.314h36v20.892H0z\"></path>\n          <path fill=\"#DA000C\" d=\"M0 1.314h36v2.32H0zM0 5.957h36v2.32H0zM0 10.6h36v2.32H0zM0 15.242h36v2.32H0zM0 19.885h36v2.32H0z\"></path>\n          <path fill=\"#0093FF\" d=\"M0 1.314h18V12.92H0z\"></path>\n        </svg>\n      </p>\n    </div>\n  </div>\n  {% if fullWidth and image %}\n    <div class=\"contact-us-image align-items-center justify-content-end\">\n      <img src=\"{{ image }}\" alt=\"Call us\">\n    </div>\n  {% endif %}\n</div>\n",
      "schema": {
        "key": "contactUs",
        "title": "Contact Us Block",
        "description": "Contact Us Block fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "phone": {
            "title": "Phone number",
            "description": "Numeric characters only, 10 digit, with no 1 prefix.",
            "type": "string",
            "format": "text"
          },
          "phoneOnMobile": {
            "title": "Phone number (mobile version)",
            "description": "Numeric characters only, 10 digit, with no 1 prefix.",
            "type": "string",
            "format": "text"
          },
          "tracking": {
            "title": "Tracking label",
            "description": "Tracking label for phone link.",
            "type": "string",
            "format": "text"
          },
          "customClasses": {
            "title": "Custom CSS classes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "attributes": {
            "title": "Additional HTML attributes",
            "description": "Additional HTML attributes for phone link.",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "fullWidth": {
            "title": "Full Width",
            "description": "Use full container width, 12 column mode. Requires an image.",
            "type": "checkbox",
            "format": "boolean",
            "default": false
          },
          "image": {
            "title": "Image",
            "description": "Image URL for full width version. Image size should be 168x168.",
            "type": "string",
            "format": "text"
          }
        },
        "required": []
      }
    },
    "contentBlockCard": {
      "twig": "{%\n  set md = tablet ? 12 / tablet : 6\n%}{%\n  set lg = desktop ? 12 / desktop : 4\n%}{%\n  set xl = desktopXL ? 12 / desktopXL : 3\n%}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}<div class=\"content-block-card{% if mobileCardDivider %} content-block-card-divider{% endif %} d-flex flex-row flex-md-column col-12 col-md-{{ md }} col-lg-{{ lg }} col-xl-{{ xl }}\">\n  {% if image %}<div class=\"content-block-card-icon pr-4 pb-4\"><img src=\"{{ image }}\" loading=\"lazy\" alt=\"\"></div>{% endif %}\n  <div class=\"d-flex flex-column flex-fill\">\n    <div{% if not tags or tags|length < 1 %} class=\"flex-fill\"{% endif %}>\n      {% if emphasis %}<p class=\"content-block-card-emphasis hero-1 flex-fill\">{{ emphasis|raw }}</p>{% endif %}\n      {% if title %}<h{{ index }} class=\"content-block-card-title highlight-2 mb-2\">{{ title|raw }}</h{{ index }}>{% endif %}\n      {% if subtitle %}<p class=\"content-block-card-subtitle content-2\">{{ subtitle|raw }}</p>{% endif %}\n    </div>\n    {% if btnLink and btnText %}\n      <p class=\"mt-4\"><a\n        href=\"{{ btnLink }}\"\n        {% if btnTracking %}data-ga-label=\"{{ btnTracking }}\"{% endif %}\n        class=\"btn btn{% if btnModel == 'outline' %}-outline{% endif %}-action {{ btnClasses }}\"\n        {{ btnAttributes|raw }}\n        >{{ btnText|raw }}</a></p>\n    {% endif %}\n    {# CTA alignment: always render container when content provided or no tags defined #}\n    {% if caption or (btnLink and btnText and (not tags or tags|length < 1)) %}\n      <p class=\"content-block-card-caption caption-1 mb-0 mt-2\">{{ caption|raw }}{% if not tags or tags|length < 1 %}&nbsp;{% endif %}</p>\n    {% endif %}\n    {% if tags %}\n      <p class=\"content-block-card-tags mt-1 mb-0\">\n        {% for tag in tags %}\n          {% if tag.name and tag.url %}\n            <a\n              href=\"{{ tag.url }}\"\n              {% if '//' in tag.url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if tag.tagTracking %}data-ga-label=\"{{ tag.tagTracking }}\"{% endif %}\n              class=\"btn btn-tag mr-3 mt-3 {{ tag.tagClasses }}\"\n              {{ tag.tagAttributes|raw }}\n            >{{ tag.name|raw }}</a>\n          {% endif %}\n        {% endfor %}\n      </p>\n    {% endif %}\n  </div>\n</div>\n",
      "schema": {
        "key": "contentBlockCard",
        "title": "Content Block Card",
        "description": "Content Block Card Fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "desktopXL": {
            "title": "Max columns (desktop xl)",
            "description": "How many items to display across on desktop lg?",
            "type": "number",
            "format": "number",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              12
            ],
            "default": 3
          },
          "desktop": {
            "title": "Max columns (desktop lg)",
            "description": "How many items to display across on desktop xl?",
            "type": "number",
            "format": "number",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              12
            ],
            "default": 4
          },
          "tablet": {
            "title": "Max columns (tablet)",
            "description": "How many items to display across on tablet?",
            "type": "number",
            "format": "number",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              12
            ],
            "default": 2
          },
          "mobileCardDivider": {
            "title": "Mobile card divider",
            "description": "Show divider line between cards for mobile.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "image": {
            "title": "Image URL",
            "description": "URL for the image/icon if used.",
            "type": "string",
            "format": "text"
          },
          "emphasis": {
            "title": "Emphasis text",
            "description": "Oversized emphasis text message if used.",
            "type": "string",
            "format": "markdown"
          },
          "title": {
            "title": "Title",
            "description": "[required] Title for this card.",
            "type": "string",
            "format": "markdown"
          },
          "subtitle": {
            "title": "Subtitle",
            "description": "Subtitle for this card.",
            "type": "string",
            "format": "markdown"
          },
          "btnText": {
            "title": "Button text",
            "description": "Button text if used.",
            "type": "string",
            "format": "markdown"
          },
          "btnLink": {
            "title": "Button URL",
            "description": "URL for the button.",
            "type": "string",
            "format": "text"
          },
          "btnTracking": {
            "title": "Button tracking label",
            "type": "string",
            "format": "text"
          },
          "btnClasses": {
            "title": "Button Custom Classes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "btnAttributes": {
            "title": "Button Additional Attributes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "btnModel": {
            "title": "Button model",
            "description": "Button design to use.",
            "type": "string",
            "enum": [
              "[default]",
              "outline"
            ],
            "default": "[default]"
          },
          "caption": {
            "title": "Caption",
            "description": "Caption text.",
            "type": "string",
            "format": "markdown"
          },
          "tags": {
            "title": "Category tags",
            "description": "Tags for related categories.",
            "type": "array",
            "items": {
              "title": "Tag",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Tag name",
                  "description": "Category tag name.",
                  "type": "string",
                  "format": "markdown"
                },
                "url": {
                  "title": "Tag URL",
                  "description": "Page URL for the category.",
                  "type": "string",
                  "format": "text"
                },
                "tagTracking": {
                  "title": "Tag tracking label",
                  "type": "string",
                  "format": "text"
                },
                "tagClasses": {
                  "title": " Tag custom classes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "tagAttributes": {
                  "title": "Tag additional attributes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              }
            },
            "default": [
              {}
            ]
          }
        },
        "required": []
      }
    },
    "contentBlockCardSlider": {
      "twig": "{%\n  set md = tablet ? 12 / tablet : 6\n%}{%\n  set lg = desktop ? 12 / desktop : 4\n%}{%\n  set xl = desktopXL ? 12 / desktopXL : 3\n%}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}<div class=\"content-block-card-slider row\">\n  <div class=\"content-block-cards{% if enableSlider %} glo-slider{% endif %}\">\n    {% for card in cards %}\n      <div class=\"glo-card content-block-card{% if mobileCardDivider and not enableSlider %} content-block-card-divider{% endif %} d-flex flex-row flex-md-column col-12 col-md-{{ md }} col-lg-{{ lg }} col-xl-{{ xl }}\">\n        {% if card.image %}<div class=\"content-block-card-icon pr-4 pb-4\"><img src=\"{{ card.image }}\" loading=\"lazy\" alt=\"\"></div>{% endif %}\n        <div class=\"d-flex flex-column flex-fill\">\n          <div{% if not card.tags or card.tags|length < 1 %} class=\"flex-fill\"{% endif %}>\n            {% if card.emphasis %}<p class=\"content-block-card-emphasis hero-1 flex-fill\">{{ card.emphasis|raw }}</p>{% endif %}\n            {% if card.title %}<h{{ index }} class=\"content-block-card-title highlight-2 mb-2\">{{ card.title|raw }}</h{{ index }}>{% endif %}\n            {% if card.subtitle %}<p class=\"content-block-card-subtitle content-2\">{{ card.subtitle|raw }}</p>{% endif %}\n          </div>\n          {% if card.btnLink and card.btnText %}\n            <p class=\"mt-4\"><a\n              href=\"{{ card.btnLink }}\"\n              {% if card.btnTracking %}data-ga-label=\"{{ card.btnTracking }}\"{% endif %}\n              class=\"btn btn{% if card.btnModel == 'outline' %}-outline{% endif %}-action {{ card.btnClasses }}\"\n              {{ card.btnAttributes|raw }}\n              >{{ card.btnText|raw }}</a></p>\n          {% endif %}\n          {# CTA alignment: always render container when content provided or no tags defined #}\n          {% if card.caption or (card.btnLink and card.btnText and (not card.tags or card.tags|length < 1)) %}\n            <p class=\"content-block-card-caption caption-1 mb-0 mt-2\">{{ card.caption|raw }}{% if not card.tags or card.tags|length < 1 %}&nbsp;{% endif %}</p>\n          {% endif %}\n          {% if card.tags %}\n            <p class=\"content-block-card-tags mt-1 mb-0\">\n              {% for tag in card.tags %}\n                {% if tag.name and tag.url %}\n                  <a\n                    href=\"{{ tag.url }}\"\n                    {% if '//' in tag.url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                    {% if tag.tagTracking %}data-ga-label=\"{{ tag.tagTracking }}\"{% endif %}\n                    class=\"btn btn-tag mr-3 mt-3 {{ tag.tagClasses }}\"\n                    {{ tag.tagAttributes|raw }}\n                  >{{ tag.name|raw }}</a>\n                {% endif %}\n              {% endfor %}\n            </p>\n          {% endif %}\n        </div>\n      </div>\n    {% endfor %}\n  </div>\n  {% if enableSlider %}<div class=\"glo-card-dots\"></div>{% endif %}\n</div>\n",
      "schema": {
        "key": "contentBlockCardSlider",
        "title": "Content Block Card Slider",
        "description": "Content Block Card Slider Fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "desktopXL": {
            "title": "Max columns (desktop xl)",
            "description": "How many items to display across on desktop lg?",
            "type": "number",
            "format": "number",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              12
            ],
            "default": 3
          },
          "desktop": {
            "title": "Max columns (desktop lg)",
            "description": "How many items to display across on desktop xl?",
            "type": "number",
            "format": "number",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              12
            ],
            "default": 4
          },
          "tablet": {
            "title": "Max columns (tablet)",
            "description": "How many items to display across on tablet?",
            "type": "number",
            "format": "number",
            "enum": [
              1,
              2,
              3,
              4,
              6,
              12
            ],
            "default": 2
          },
          "mobileCardDivider": {
            "title": "Mobile card divider",
            "description": "Show divider line between cards for mobile. Divider is not used in slider mode.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "enableSlider": {
            "title": "Enable slider",
            "description": "Enable slider function to maintain single row of cards. Default is stacked, wrapping to next line.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "cards": {
            "title": "Cards",
            "description": "List of cards",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "image": {
                  "title": "Image URL",
                  "description": "URL for the image/icon if used.",
                  "type": "string",
                  "format": "text"
                },
                "emphasis": {
                  "title": "Emphasis text",
                  "description": "Oversized emphasis text message if used.",
                  "type": "string",
                  "format": "markdown"
                },
                "title": {
                  "title": "Title",
                  "description": "[required] Title for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitle": {
                  "title": "Subtitle",
                  "description": "Subtitle for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "btnText": {
                  "title": "Button text",
                  "description": "Button text if used.",
                  "type": "string",
                  "format": "markdown"
                },
                "btnLink": {
                  "title": "Button URL",
                  "description": "URL for the button.",
                  "type": "string",
                  "format": "text"
                },
                "btnTracking": {
                  "title": "Button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "btnClasses": {
                  "title": "Button Custom Classes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "btnAttributes": {
                  "title": "Button Additional Attributes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "btnModel": {
                  "title": "Button model",
                  "description": "Button design to use.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ],
                  "default": "[default]"
                },
                "caption": {
                  "title": "Caption",
                  "description": "Caption text.",
                  "type": "string",
                  "format": "markdown"
                },
                "tags": {
                  "title": "Category tags",
                  "description": "Tags for related categories.",
                  "type": "array",
                  "items": {
                    "title": "Tag",
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "Tag name",
                        "description": "Category tag name.",
                        "type": "string",
                        "format": "markdown"
                      },
                      "url": {
                        "title": "Tag URL",
                        "description": "Page URL for the category.",
                        "type": "string",
                        "format": "text"
                      },
                      "tagTracking": {
                        "title": "Tag tracking label",
                        "type": "string",
                        "format": "text"
                      },
                      "tagClasses": {
                        "title": " Tag custom classes",
                        "type": "string",
                        "format": "text",
                        "options": {
                          "hidden": true
                        }
                      },
                      "tagAttributes": {
                        "title": "Tag additional attributes",
                        "type": "string",
                        "format": "text",
                        "options": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  "default": [
                    {}
                  ]
                }
              }
            }
          }
        },
        "required": []
      }
    },
    "contentBlockSolidBackground": {
      "twig": "<div class=\"content-block-solid-background row\">\n  <ul class=\"glo-list-bullet d-md-flex flex-md-row flex-md-wrap justify-content-center\">\n    {% for listItem in list %}\n    <li class=\"d-md-flex col-md-6 col-xl-4\">\n      <div class=\"content-block{% if black %} content-inverse{% endif %}\">\n        <img class=\"icon\" src=\"{{ listItem.iconUrl }}\" loading=\"lazy\" width=\"48\" height=\"48\" alt=\"\">\n        <p class=\"title subtitle-1 m-0\">{{ listItem.title|raw }}</p>\n        <p class=\"subtitle content-2 m-0\">{{ listItem.subtitle|raw }}</p>\n      </div>\n    </li>\n    {% endfor %}\n  </ul>\n</div>\n",
      "schema": {
        "key": "contentBlockSolidBackground",
        "title": "Content Block, Solid Background",
        "description": "Content Block, Solid Background Fragment",
        "properties": {
          "black": {
            "title": "Black Theme",
            "description": "changes the colors of background, text and icon.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "list": {
            "title": "Blocks",
            "type": "array",
            "items": {
              "type": "object",
              "title": "Block",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "Title",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitle": {
                  "title": "Subtitle",
                  "description": "Subtitle",
                  "type": "string",
                  "format": "markdown"
                },
                "iconUrl": {
                  "title": "Icon",
                  "description": "Icon",
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "default": [
              {}
            ]
          }
        },
        "required": []
      }
    },
    "contentMediaCard": {
      "twig": "{%\n  set indexA = (not blockHeaderIndex or blockHeaderIndex < 1) ? 2 : blockHeaderIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}{#\n  NOTE: This fragment uses styling from \"content-block-card\"\n#}<div class=\"row content-media-block-card content-media-block-{{ horizontal }}\">\n  <div class=\"row content-media-block-align d-flex col-md-10 col-lg-12 px-0 mx-0\">\n    <div class=\"col-12 col-lg-6{% if horizontal != 'left' %} offset-lg-1{% endif %}\">\n      {# NOTE: \"card-media\" is a copy from the template #}\n      <div class=\"card card-media card-media-{{ horizontal }}\">\n        {% if mediaImageHref %}\n          <a\n            href=\"{{ mediaImageHref }}\"\n            {% if mediaImageTracking %}data-ga-label=\"{{ mediaImageTracking }}\"{% endif %}\n            class=\"card-anchor-media-container {{ mediaImageClasses }}\"\n            {{ mediaImageHrefAttributes|raw }}\n          >\n            <img src=\"{{ mediaImage }}\" loading=\"lazy\" alt=\"{{ mediaImageAlt|escape('html') }}\" class=\"card-img\" aria-hidden=\"true\">\n          </a>\n        {% else %}\n          <img src=\"{{ mediaImage }}\" loading=\"lazy\" alt=\"{{ mediaImageAlt|escape('html') }}\" class=\"card-img\" aria-hidden=\"true\">\n        {% endif %}\n        {% if mediaIcon or mediaHeading or mediaContent %}\n          <div class=\"card-body card-media-{{ mediaVertical }}{% if mediaShadow %} card-media-shadow{% endif %}\">\n            {% if mediaIcon %}<img src=\"{{ mediaIcon }}\" loading=\"lazy\" alt=\"{{ mediaImageAlt|escape('html') }}\" class=\"card-media-icon\" aria-hidden=\"true\">{% endif %}\n            {% if mediaHeading %}<p class=\"card-title\"><strong class=\"title-1\">{{ mediaHeading|raw }}</strong></p>{% endif %}\n            {% if mediaContent %}<p class=\"caption-3\">{{ mediaContent|raw }}</p>{% endif %}\n          </div>\n        {% endif %}\n      </div>\n    </div>\n    <div class=\"content-block-card col-12 col-lg-5{% if horizontal == 'left' %} offset-lg-1{% endif %}\">\n      <div class=\"pt-4 pt-md-5 pt-lg-0\">\n        {% if blockTitle %}<h{{ index }} class=\"content-block-card-title highlight-1 mb-2\">{{ blockTitle|raw }}</h{{ index }}>{% endif %}\n        {% if blockContent %}<p class=\"content-block-card-content content-2\">{{ blockContent|raw }}</p>{% endif %}\n        {% if blockBtnLink and blockBtnText %}\n          <p class=\"mt-4\"><a\n            href=\"{{ blockBtnLink }}\"\n            {% if btnTracking %}data-ga-label=\"{{ btnTracking }}\"{% endif %}\n            class=\"btn btn{% if blockBtnModel == 'outline' %}-outline{% endif %}-action {{btnClasses}}\"\n            {{btnAttributes|raw}}\n          >{{ blockBtnText|raw }}</a></p>\n        {% endif %}\n        {% if blockTags %}\n          <p class=\"content-block-card-tags mt-4 mb-0\">\n            {% for tag in blockTags %}{% if tag.name and tag.url %}\n              <a\n                href=\"{{ tag.url }}\"\n                {% if '//' in tag.url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                {% if tag.tagTracking %}data-ga-label=\"{{ tag.tagTracking }}\"{% endif %}\n                class=\"btn btn-tag mr-3 mb-3 {{tag.tagClasses}}\"\n                {{tag.tagAttributes|raw}}\n              >{{ tag.name|raw }}</a>{% endif %}{% endfor %}\n          </p>\n        {% endif %}\n      </div>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "contentMediaCard",
        "title": "Content Media Card",
        "description": "Content Media Card fragment",
        "properties": {
          "horizontal": {
            "title": "Image position",
            "description": "Choose the position where the image will be placed in respect to the main message on desktop.",
            "type": "string",
            "enum": [
              "left",
              "right"
            ],
            "default": "left"
          },
          "mediaImage": {
            "title": "Image URL",
            "description": "URL for the image.",
            "type": "string",
            "format": "text"
          },
          "mediaImageAlt": {
            "title": "Image alt text",
            "description": "Alt Text for the image",
            "type": "string",
            "format": "text"
          },
          "mediaImageHref": {
            "title": "Image link to open",
            "description": "Link for clickable image.",
            "type": "string",
            "format": "text"
          },
          "mediaImageTracking": {
            "title": "Image link tracking label",
            "type": "string",
            "format": "text"
          },
          "mediaImageClasses": {
            "title": "Image link additional classes",
            "description": "Additional classes for link for clickable image.",
            "type": "string",
            "format": "text"
          },
          "mediaImageHrefAttributes": {
            "title": "Image link additional attributes",
            "description": "Additional Attributes for link for clickable image.",
            "type": "string",
            "format": "text"
          },
          "mediaVertical": {
            "title": "Image message",
            "description": "Choose the position where the content message will be placed over the image.",
            "type": "string",
            "enum": [
              "top",
              "bottom"
            ],
            "default": "top"
          },
          "mediaIcon": {
            "title": "Icon URL",
            "description": "URL for the icon in the message over the image.",
            "type": "string",
            "format": "text"
          },
          "mediaHeading": {
            "title": "Heading",
            "description": "Heading for the message over the image.",
            "type": "string",
            "format": "markdown"
          },
          "mediaContent": {
            "title": "Content",
            "description": "Text for the message over the image.",
            "type": "string",
            "format": "markdown"
          },
          "mediaShadow": {
            "title": "Message shadow",
            "description": "Should the message over the image have a shadow?",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "blockHeaderIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "blockTitle": {
            "title": "Title",
            "description": "[required] Title for this card.",
            "type": "string",
            "format": "markdown"
          },
          "blockContent": {
            "title": "Content",
            "description": "Content for this card.",
            "type": "string",
            "format": "markdown"
          },
          "blockBtnText": {
            "title": "Button text",
            "description": "Button text if used.",
            "type": "string",
            "format": "markdown"
          },
          "blockBtnLink": {
            "title": "Button URL",
            "description": "URL for the button.",
            "type": "string",
            "format": "text"
          },
          "blockBtnModel": {
            "title": "Button model",
            "description": "Button design to use.",
            "type": "string",
            "enum": [
              "[default]",
              "outline"
            ],
            "default": "[default]"
          },
          "btnTracking": {
            "title": "Button tracking label",
            "type": "string",
            "format": "text"
          },
          "btnClasses": {
            "title": "Button custom classes",
            "type": "string",
            "format": "text"
          },
          "btnAttributes": {
            "title": "Button additional attributes",
            "type": "string",
            "format": "text"
          },
          "blockTags": {
            "title": "Category tags",
            "description": "Tags for related categories.",
            "type": "array",
            "items": {
              "title": "Tag",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Tag name",
                  "description": "Category tag name.",
                  "type": "string",
                  "format": "markdown"
                },
                "url": {
                  "title": "Tag URL",
                  "description": "Page URL for the category.",
                  "type": "string",
                  "format": "text"
                },
                "tagTracking": {
                  "title": "Tag tracking label",
                  "type": "string",
                  "format": "text"
                },
                "tagClasses": {
                  "title": "Tag custom classes",
                  "type": "string",
                  "format": "text"
                },
                "tagAttributes": {
                  "title": "Tag additional attributes",
                  "type": "string",
                  "format": "text"
                }
              },
              "required": [
                "name",
                "url"
              ]
            },
            "default": [
              {}
            ]
          }
        },
        "required": [
          "mediaImage"
        ]
      }
    },
    "creditCard": {
      "twig": "<div role=\"group\" aria-label=\"payment details\" class=\"row glo-credit-card\"{% if validateForm == false %} data-validate-card=\"false\"{% endif %}>\n  <div class=\"col-12 col-md-6\">\n    <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n      <input\n        id=\"card-number{{ seed }}\"\n        type=\"tel\"\n        name=\"cardNumber\"\n        maxlength=\"19\"\n        autocomplete=\"section-payment cc-number\"\n        pattern=\"[0-9]{16,19}\"\n        class=\"form-control\"\n        {% if validateForm != false %}required {% endif %}>\n      <label for=\"card-number{{ seed }}\" class=\"control-label\">\n        <span>\n          Card number\n          <span class=\"card-type\"></span>\n        </span>\n      </label>\n      <span class=\"invalid-feedback\" aria-live=\"polite\">Provide the card number</span>\n    </p>\n  </div>\n\n  <div class=\"col-8 col-md-4\">\n    <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n      <input\n        id=\"card-date{{ seed }}\"\n        type=\"text\"\n        name=\"cardExpirationDate\"\n        maxlength=\"7\"\n        autocomplete=\"section-payment cc-exp\"\n        pattern=\"[0-9/]{3,}\"\n        class=\"form-control\"\n        {% if validateForm != false %}required {% endif %}>\n      <label for=\"card-date{{ seed }}\" class=\"control-label\"><span>Expiration</span></label>\n      <span class=\"invalid-feedback\" aria-live=\"polite\">Please provide the card date</span>\n    </p>\n  </div>\n\n  <div class=\"col-4 col-md-2\">\n    <p class=\"form form-input{% if theme != '[default]' %} form-{{ theme }}{% endif %}\">\n      <input\n        id=\"card-code{{ seed }}\"\n        type=\"tel\"\n        name=\"cardSecurityCode\"\n        maxlength=\"4\"\n        autocomplete=\"section-payment cc-csc\"\n        pattern=\"[0-9]{3,4}\"\n        class=\"form-control\"\n        {% if validateForm != false %}required {% endif %}>\n      <label for=\"card-code{{ seed }}\" class=\"control-label\"\n        title=\"The CVC is a 3 digit code on the back or 4 digit code on the front of the card.\">\n        <span>CVC</span>\n      </label>\n      <span class=\"invalid-feedback\" aria-live=\"polite\">Provide card code</span>\n    </p>\n  </div>\n</div>\n",
      "schema": {
        "key": "creditCard",
        "title": "Credit Card",
        "description": "Credit Card Fragment",
        "properties": {
          "theme": {
            "title": "Theme",
            "description": "Control color theme.",
            "type": "string",
            "enum": [
              "[default]",
              "action"
            ],
            "default": "[default]"
          },
          "validateForm": {
            "title": "Validate Form",
            "description": "Enable form validation",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          }
        },
        "required": []
      }
    },
    "ctaBlock": {
      "twig": "{% if containerSize %}\n  {% set ctaContainerMobile = containerSize.mobile %}\n  {% set ctaContainerMD = containerSize.md %}\n  {% set ctaContainerLG = containerSize.lg %}\n  {% set ctaContainerXL = containerSize.xl %}\n{% endif %}\n\n<div>\n  <div class=\"cta-block row justify-content-center\">\n    <div class=\"cta-block-container col-{{ ctaContainerMobile ?: '12' }} col-md-{{ ctaContainerMD ?: '10' }} col-lg-{{ ctaContainerLG ?: '8' }} col-xl-{{ ctaContainerXL ?: '6' }}\">\n      <p class=\"cta-block-title text-center m-0\">\n        <strong class=\"highlight-1\">{{ title | raw }}</strong>\n      </p>\n      {% with button %}\n        {% if name and label %}\n          <form action=\"{{ url }}\">\n            <p class=\"mt-9 input-pair{% if theme != '[default]' %} input-{{ theme }}{% endif %}{% if disabled %} input-disabled{% endif %}\">\n              <input id=\"{{ name }}\" type=\"{{ type }}\" name=\"{{ name }}\" class=\"form-control\" aria-label=\"{{ label }}\"\n                {% if placeholder %} placeholder=\"{{ placeholder }}\"{% endif %}\n                {% if disabled %} disabled{% elseif required %} required{% endif %}>\n              <button type=\"submit\" class=\"btn{% if theme%} btn-{{ theme }}{% endif %} {{customClasses}}\"\n                {% if additionalAttributes %} {{additionalAttributes}}{% endif %}><span>{{ text }}</span></button>\n            </p>\n          </form>\n        {% else %}\n          <div class=\"cta-block-button\">\n            <a\n              href=\"{{ url }}\"\n              {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n              class=\"btn btn-lg{% if model != '[default]' or theme != '[default]' %} btn{% if model != '[default]' %}-{{ model }}{% endif %}{% if theme != '[default]' %}-{{ theme }}{% endif %}{% endif %} {{ customClasses }}\"\n              {{ attributes|raw }}\n            ><span>{{ text | raw }}</span>{% if icon and icon != '[none]' %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\"><use xlink:href=\"#glo-{{ icon }}\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-{{ icon }}\"></use></svg>{% endif %}</a>\n          </div>\n        {% endif %}\n      {% endwith %}\n      {% if textLinks|length %}\n        <div class=\"cta-block-text-links row glo-size-16\">\n          {% for textLink in textLinks %}{% with textLink %}{% if text and url %}\n            <a\n              href=\"{{url}}\"\n              {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n              class=\"cta-block-text-link col-auto {{ customClasses }}\"\n              {{ attributes|raw }}\n            >{{ text | raw }}</a>{% endif %}{% endwith %}{% endfor %}\n        </div>\n      {% endif %}\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "ctaBlock",
        "title": "CTA Block, Final",
        "description": "CTA Block fragment",
        "properties": {
          "title": {
            "title": "Title",
            "description": "CTA Title",
            "type": "string",
            "format": "markdown"
          },
          "button": {
            "title": "Button",
            "description": "Button",
            "type": "object",
            "properties": {
              "name": {
                "title": "Field name",
                "description": "CTA Search: Provide a form field name. Name and label are required for field and button. (Form field only.)",
                "type": "string",
                "format": "text"
              },
              "type": {
                "title": "Input Type",
                "description": "CTA Search: Select the input type for the field. (Form field only.)",
                "type": "string",
                "enum": [
                  "text",
                  "textarea",
                  "date",
                  "datetime-local",
                  "email",
                  "month",
                  "number",
                  "password",
                  "tel",
                  "time",
                  "url",
                  "week"
                ],
                "default": "text"
              },
              "label": {
                "title": "Label",
                "description": "CTA Search: Short descriptive label for the field. Name and label are required for field and button. (Form field only.)",
                "type": "string",
                "format": "text"
              },
              "placeholder": {
                "title": "Placeholder",
                "description": "CTA Search: [optional] Default text to show when the field is empty. (Form field only.)",
                "type": "string",
                "format": "text",
                "default": "placeholder"
              },
              "text": {
                "title": "Button text",
                "description": "Button text.",
                "type": "string",
                "format": "markdown"
              },
              "url": {
                "title": "Button/Form URL",
                "description": "Button/Form URL.",
                "type": "string",
                "format": "text"
              },
              "model": {
                "title": "Button model",
                "description": "Button design model. (Not used with form field.)",
                "type": "string",
                "enum": [
                  "[default]",
                  "outline"
                ],
                "default": "[default]"
              },
              "theme": {
                "title": "Button theme",
                "description": "Button design theme.",
                "type": "string",
                "enum": [
                  "[default]",
                  "action"
                ],
                "default": "[default]"
              },
              "icon": {
                "title": "Button icon",
                "description": "Add an icon to the button.",
                "type": "string",
                "enum": [
                  "[none]",
                  "arrow-right"
                ],
                "default": "[none]"
              },
              "tracking": {
                "title": "Tracking label",
                "type": "string",
                "format": "text"
              },
              "customClasses": {
                "title": "Button custom class",
                "description": "Add custom CSS classes to the button",
                "type": "string",
                "format": "text"
              },
              "attributes": {
                "title": "Button attributes",
                "description": "Add custom HTML attributes to the button",
                "type": "string",
                "format": "text"
              }
            },
            "required": [
              "text",
              "url"
            ]
          },
          "textLinks": {
            "title": "Links",
            "description": "Links to related resources.",
            "type": "array",
            "items": {
              "title": "Link",
              "type": "object",
              "properties": {
                "text": {
                  "title": "Link text",
                  "description": "Text for link.",
                  "type": "string",
                  "format": "markdown"
                },
                "url": {
                  "title": "Link URL",
                  "description": "Url for the text link.",
                  "type": "string",
                  "format": "text"
                },
                "tracking": {
                  "title": "Tracking label",
                  "type": "string",
                  "format": "text"
                },
                "customClasses": {
                  "title": "Link custom classes",
                  "description": "Add custom CSS classes to the link",
                  "type": "string",
                  "format": "text"
                },
                "attributes": {
                  "title": "Link attributes",
                  "description": "Add custom HTML attributes to the link",
                  "type": "string",
                  "format": "text"
                }
              },
              "required": [
                "text",
                "url"
              ]
            },
            "default": [
              {}
            ]
          },
          "containerSize": {
            "title": "Container sizing",
            "description": "Sizing requirements for CTA container",
            "type": "object",
            "properties": {
              "mobile": {
                "title": "Mobile container width",
                "description": "Mobile container width in columns",
                "type": "number",
                "format": "number",
                "minimum": 1,
                "maximum": 12,
                "default": 12
              },
              "md": {
                "title": "Tablet container width",
                "description": "Tablet container width in columns",
                "type": "number",
                "format": "number",
                "minimum": 1,
                "maximum": 12,
                "default": 10
              },
              "lg": {
                "title": "Desktop container width",
                "description": "Desktop container width in columns",
                "type": "number",
                "format": "number",
                "minimum": 1,
                "maximum": 12,
                "default": 8
              },
              "xl": {
                "title": "XL desktop container width",
                "description": "XL desktop container width in columns",
                "type": "number",
                "format": "number",
                "minimum": 1,
                "maximum": 12,
                "default": 6
              }
            }
          }
        },
        "required": [
          "title",
          "button"
        ]
      }
    },
    "flexTable": {
      "twig": "{%\n  set columns = categories|length\n%}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit main header level: 5 (contains a sub-level) #}{%\n  set index = (indexA < 5) ? indexA : 5\n%}<div class=\"glo-flex-table table-static\" data-columns=\"{{ columns }}\"{% if stickyHeader %} data-sticky{% endif %}>\n  {% if columns < 1 or columns > 4 %}\n    <div class=\"container\">\n      <p>There are either too few or too many categories to present in a table comparison format.</p>\n    </div>\n  {% else %}\n    <div class=\"table-header\">\n      <div class=\"table-sm container d-md-none{% if alignment == 'center' %} text-center{% endif %}\" aria-labelledby=\"flex-table-mobile-title\">\n        <div class=\"row\">\n          <div class=\"col-6 py-2\">\n            {% if columns < 3 %}\n              <p class=\"table-category d-block subtitle-1\">{{ categories[0].name|raw }}</p>\n            {% endif %}\n            {% if columns > 2 %}\n              <p class=\"form form-select py-0\">\n                <select id=\"first-column\" name=\"first-column\" aria-label=\"first column\" class=\"form-control\">\n                  {% for category in categories %}\n                    {% if loop.index < columns %}\n                      <option value=\"{{ loop.index }}\"{% if loop.index == 1 %} selected{% endif %}>{{ category.name }}</option>\n                    {% endif %}\n                  {% endfor %}\n                </select>\n                <label for=\"first-column\">Column 1</label>\n                <span class=\"form-svg\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                    <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90.000000) translate(0.00000, -13.000000)\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></polyline>\n                  </svg>\n                </span>\n              </p>\n            {% endif %}\n          </div>\n          <div class=\"col-6 py-2\">\n            {% if columns < 3 %}\n              <p class=\"table-category d-block subtitle-1\">{{ categories[1].name|raw }}</p>\n            {% endif %}\n            {% if columns > 2 %}\n              <p class=\"form form-select py-0\">\n                <select name=\"second-column\" aria-label=\"second column\" class=\"form-control\">\n                  {% for category in categories %}\n                    {% if loop.index > 1 %}\n                      <option value=\"{{ loop.index }}\"{% if loop.index == 2 %} selected{% endif %}>{{ category.name }}</option>\n                    {% endif %}\n                  {% endfor %}\n                </select>\n                <label for=\"second-column\">Column 2</label>\n                <span class=\"form-svg\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                    <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90.000000) translate(0.00000, -13.000000)\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></polyline>\n                  </svg>\n                </span>\n              </p>\n            {% endif %}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"table-lg container d-none d-md-block\">\n        <div class=\"row\">\n          <h{{ index }} class=\"col-12 {% if evenWidth %}flex-lg-even{% else %}{% if columns > 3 %}col-lg-4{% else %}col-lg-6{% endif %}{% endif %} highlight-2 m-0\">{{ title }}</h{{ index }}>\n          {% for category in categories %}\n            <div class=\"{% if evenWidth %}flex-even{% else %}{% if columns > 3 %}col-3 col-lg-2{% elseif columns == 3 %}col-4 col-lg-2{% else %}col-6 col-lg-3{% endif %}{% endif %} subtitle-1{% if alignment == 'center' %} text-center{% endif %}{% if loop.index > 2 %} table-hide{% endif %}\">{{ category.name|raw }}</div>\n          {% endfor %}\n        </div>\n      </div>\n    </div>\n\n    {% if rows|length %}\n      <section class=\"table-body container\">\n        <h{{ index }} id=\"flex-table-mobile-title\" class=\"table-sm-header d-md-none highlight-2 m-0 pb-4{% if alignment == 'center' %} text-center{% endif %}\">{{ title|raw }}</h{{ index }}>\n        {% for row in rows %}\n          {% set rowIndex = loop.index0 %}\n          {% if row.titleStyle == 'new section' %}\n\n            {% if rowIndex > 0 %}</section><section class=\"table-body container\">{% endif %}{# Start new container for extra section #}\n            <h{{ index + 1 }} class=\"table-section highlight-2{% if alignment == 'center' %} text-center{% endif %}\">{{ row.title|raw }}</h{{ index + 1 }}>\n\n          {% else %}\n\n            <div class=\"row {{ row.rowClass }}\">\n              <div class=\"col-12 {% if evenWidth %}flex-lg-even{% else %}{% if columns > 3 %}col-lg-4{% else %}col-lg-6{% endif %}{% endif %} pb-9 pb-lg-0\">\n                <div class=\"h-100 d-flex flex-column {% if vertical != 'top' %}justify-content-center{% endif %}\">\n                  {% if row.enableToggle and row.description %}\n                  <a\n                    href=\"#glo-{{ seed }}-{{ rowIndex }}\"\n                    class=\"d-block glo-link-plain{% if not row.toggleOpen %} collapsed{% endif %}\"\n                    data-toggle=\"collapse\"\n                    role=\"button\"\n                    aria-expanded=\"{% if row.toggleOpen %}true{% else %}false{% endif %}\"\n                    aria-controls=\"glo-{{ seed }}-{{ rowIndex }}\">\n                  {% endif %}\n                    <p class=\"{% if row.titleStyle == 'title' %}title-2{% else %}subtitle-1{% endif %} m-0\">\n                      {% if row.enableToggle %}\n                        <span class=\"glo-svg float-right ml-2 float-md-left ml-md-0 mr-md-2\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                            <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90.000000) translate(0.00000, -13.000000)\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></polyline>\n                          </svg>\n                        </span>\n                        {{ row.title }}\n                      {% else %}\n                        {{ row.title|raw }}\n                      {% endif %}\n                    </p>\n                  {% if row.enableToggle and row.description %}\n                  </a>\n                  {% endif %}\n\n                  {% if row.description %}\n                    <div\n                      {% if row.enableToggle %}\n                        id=\"glo-{{ seed }}-{{ rowIndex }}\"\n                        class=\"table-description content-3 mt-1 collapse{% if row.toggleOpen %} show{% endif %}\"\n                      {% else %}\n                        class=\"table-description content-3 mt-1\"\n                      {% endif %}\n                    >{{ row.description|raw }}</div>\n                  {% endif %}\n\n                  {% if row.btnText and row.btnLink %}\n                    <p class=\"caption-1 table-text-muted mb-0 mt-4\">\n                      <a\n                        href=\"{{ row.btnLink }}\"\n                        aria-label=\"{{ row.btnText }} for {{ row.title }}\"\n                        {% if row.btnTracking %}data-ga-label=\"{{ row.btnTracking }}\"{% endif %}\n                        class=\"btn{% if (row.btnModel and row.btnModel != '[default]') or (row.btnTheme and row.btnTheme != '[default]') %} btn{% if row.btnModel and row.btnModel != '[default]' %}-{{ row.btnModel }}{% endif %}{% if row.btnTheme and row.btnTheme != '[default]' %}-{{ row.btnTheme }}{% endif %}{% endif %} {{ row.btnClasses }}\"\n                        {{ row.btnAttributes|raw }}\n                      ><span>{{ row.btnText|raw }}</span></a>\n                    </p>\n                  {% endif %}\n\n                  {% if row.subtext %}\n                    <p class=\"caption-1 table-text-muted mb-0 mt-2\">{{ row.subtext|raw }}</p>\n                  {% endif %}\n                </div>\n              </div>\n\n              {% for column in 1..columns %}{# Always match row columns with total table columns #}\n                {% set category = categories[loop.index0] %}\n                {% set item = row.categories[column - 1] %}\n                <div class=\"table-option content-3 {% if evenWidth %}flex-even{% else %}col-6 {% if columns > 3 %}col-md-3 col-lg-2{% elseif columns == 3 %}col-md-4 col-lg-2{% else %}col-md-6 col-lg-3{% endif %}{% endif %}{% if loop.index > 2 %} table-hide{% endif %}\" data-index=\"{{ loop.index }}\">\n                  {% if not item.icon or item.icon == '[none]' %}\n                    <div\n                      class=\"h-100 d-flex{% if vertical != 'top' %} align-items-center{% endif %}{% if alignment == 'center' %} justify-content-center{% endif %}\"\n                      aria-label=\"{{ row.title }} for {{ category.name }}\">\n                      <div{% if alignment == 'center' %} class=\"text-center\"{% endif %}>\n                        {{ item.text|raw }}\n                        {% if item.popover and item.popoverLabel %}\n                          <a tabindex=\"0\" role=\"button\" class=\"d-block glo-link-action\" data-toggle=\"popover\" data-trigger=\"focus\" data-html=\"true\" data-placement=\"bottom\" \n                          {% if item.popoverTitle %} data-title=\"{{ item.popoverTitle|escape('html') }}\"{% endif %} \n                          data-content=\"{{ item.popover|escape('html') }}\">\n                            {{ item.popoverLabel }} \n                          </a>\n                        {% endif %}\n                      </div>\n                    </div>\n                  {% elseif item.icon == 'checkmark' %}\n                    <div\n                      class=\"h-100 d-flex justify-content-center align-items-center\"\n                      aria-label=\"{{ row.title }} for {{ category.name }}: {% if item.text %}{{ item.text }}{% else %}included{% endif %}\">\n                      <div class=\"text-center\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 24 24\">\n                          <polyline points=\"2 12 9 18 21 4\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"6\"></polyline>\n                        </svg>\n                        {% if item.popover and item.popoverLabel %}\n                          <a tabindex=\"0\" role=\"button\" class=\"d-block glo-link-action\" data-toggle=\"popover\" data-trigger=\"focus\" data-html=\"true\" data-placement=\"bottom\" \n                          {% if item.popoverTitle %} data-title=\"{{ item.popoverTitle|escape('html') }}\"{% endif %} \n                          data-content=\"{{ item.popover|escape('html') }}\">\n                            {{ item.popoverLabel }} \n                          </a>\n                        {% endif %}\n                      </div>\n                    </div>\n                  {% else %}\n                    <div\n                      class=\"h-100 d-flex justify-content-center align-items-center\"\n                      aria-label=\"{{ row.title }} for {{ category.name }}: {% if item.text %}{{ item.text }}{% else %}not included{% endif %}\">\n                      <div class=\"text-center\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 24 24\">\n                          <line x1=\"2\" y1=\"12.5\" x2=\"22\" y2=\"12.5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"></line>\n                        </svg>\n                        {% if item.popover and item.popoverLabel %}\n                          <a tabindex=\"0\" role=\"button\" class=\"d-block glo-link-action\" data-toggle=\"popover\" data-trigger=\"focus\" data-html=\"true\" data-placement=\"bottom\"\n                          {% if item.popoverTitle %} data-title=\"{{ item.popoverTitle|escape('html') }}\"{% endif %} \n                          data-content=\"{{ item.popover|escape('html') }}\">\n                            {{ item.popoverLabel }} \n                          </a>\n                        {% endif %}\n                      </div>\n                    </div>\n                  {% endif %}\n                </div>\n              {% endfor %}\n            </div>\n          {% endif %}\n\n        {% endfor %}\n      </section>\n    {% endif %}\n\n    {% if footerMessage or columns > 1 %}\n      <div class=\"table-footer container\">\n        <div class=\"row\">\n          <div class=\"col-12 {% if evenWidth %}flex-lg-even{% else %}{% if columns > 3 %}col-lg-4{% else %}col-lg-6{% endif %}{% endif %} order-last order-lg-first pt-4 pt-lg-0 {% if footerStyle == 'caption' %}caption-1 table-text-muted{% else %}content-2{% endif %}\">{{ footerMessage|raw }}</div>\n\n          {% for category in categories %}\n            <div class=\"table-option caption-1 {% if evenWidth %}flex-even{% else %}col-6 {% if columns > 3 %}col-md-3 col-lg-2{% elseif columns == 3 %}col-md-4 col-lg-2{% else %}col-md-6 col-lg-3{% endif %}{% endif %}{% if alignment == 'center' %} text-center{% endif %}{% if loop.index > 2 %} table-hide{% endif %}\" data-index=\"{{ loop.index }}\" aria-label=\"for {{ category.name }}\">\n              {% if category.btnText and category.btnLink %}\n              <a\n                href=\"{{ category.btnLink }}\"\n                aria-label=\"{{ category.btnText }} for {{ category.name }}\"\n                {% if category.btnTracking %}data-ga-label=\"{{ category.btnTracking }}\"{% endif %}\n                class=\"btn btn{% if category.btnModel and category.btnModel != '[default]' %}-{{ category.btnModel }}{% endif %}-action d-block d-md-inline-block {{ category.btnClasses }}\"\n                {{ category.btnAttributes|raw }}\n              ><span>{{ category.btnText|raw }}</span></a>\n              {% endif %}\n              {% if category.subtext %}<div class=\"mt-2\">{{ category.subtext|raw }}</div>{% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n    {% endif %}\n  {% endif %}\n</div>\n",
      "schema": {
        "key": "flexTable",
        "title": "Flex Table",
        "description": "Flex Table fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading index",
            "description": "What will be the starting heading index? (number: 1-5, default: 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "stickyHeader": {
            "title": "Sticky header",
            "description": "",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "title": {
            "title": "Table title",
            "description": "Primary title for the table data.",
            "type": "string",
            "format": "markdown"
          },
          "vertical": {
            "title": "Column vertical alignment",
            "description": "Define the content vertical alignment within the category columns. This is for text only cells. It does not apply to cells that use an icon.",
            "type": "string",
            "enum": [
              "center",
              "top"
            ],
            "default": "center"
          },
          "alignment": {
            "title": "Column horizontal alignment",
            "description": "Define the content horizontal alignment within the category columns.",
            "type": "string",
            "enum": [
              "left",
              "center"
            ],
            "default": "left"
          },
          "evenWidth": {
            "title": "Even width columns",
            "description": "Apply even width columns for desktop. Changes all columns, including the details (first) column, to be equal width. Mobile and tablet views are not affected.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "categories": {
            "title": "Categories (column)",
            "description": "Table column categories. Table will only render if there are two to four category column names defined.",
            "type": "array",
            "items": {
              "title": "Category",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Category title",
                  "description": "Displayed category title shown at the top of the table column.",
                  "type": "string",
                  "format": "markdown"
                },
                "btnText": {
                  "title": "Button text",
                  "description": "Text shown in the button. (Text and URL required to display)",
                  "type": "string",
                  "format": "markdown"
                },
                "btnLink": {
                  "title": "Button URL",
                  "description": "URL destination when the button is clicked. (Text and URL required to display)",
                  "type": "string",
                  "format": "text"
                },
                "btnModel": {
                  "title": "Button model",
                  "description": "The category buttons always use the 'action' theme but can use solid or outline models.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "btnTracking": {
                  "title": "Button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "btnClasses": {
                  "title": "Button classes",
                  "description": "Add additional CSS styling class for the CTA button.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "btnAttributes": {
                  "title": "Button attributes",
                  "description": "Add additional HTML attributes to the CTA button.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "subtext": {
                  "title": "Subtext",
                  "description": "Supplemental content to follow blow the line item button.",
                  "type": "string",
                  "format": "text"
                }
              },
              "required": [
                "name"
              ]
            },
            "default": [
              {
                "btnModel": "[default]"
              }
            ]
          },
          "footerStyle": {
            "title": "Footer message style",
            "description": "Choose the styling for the footer message. Caption applies a disclaimer type styling.",
            "type": "string",
            "enum": [
              "[default]",
              "caption"
            ],
            "default": "[default]"
          },
          "footerMessage": {
            "title": "Footer message",
            "description": "Message to show in the footer. Can be regular text or disclaimer/caption styled.",
            "type": "string",
            "format": "text"
          },
          "rows": {
            "title": "Table rows",
            "description": "The table can have zero to many rows.",
            "type": "array",
            "items": {
              "title": "Row",
              "type": "object",
              "properties": {
                "titleStyle": {
                  "title": "Row title style",
                  "description": "Type of title. \"new section\" will create a header section to begin a new sub-group of row items.",
                  "type": "string",
                  "enum": [
                    "subtitle",
                    "title",
                    "new section"
                  ]
                },
                "rowClass": {
                  "title": "CSS Row Classes",
                  "description": "CSS classes to apply to the row.",
                  "type": "string",
                  "format": "text"
                },
                "title": {
                  "title": "Row title",
                  "description": "Title for this row. If \"new section\" was selected this title will begin a new sub-group of row items and the remainder of this row data will be ignored.",
                  "type": "string",
                  "format": "markdown"
                },
                "description": {
                  "title": "Row description",
                  "description": "Detailed description about this row item.",
                  "type": "string",
                  "format": "markdown"
                },
                "enableToggle": {
                  "title": "Enable toggle",
                  "description": "Should the line item description toggle into view?",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "toggleOpen": {
                  "title": "Toggle open",
                  "description": "When enabled the description toggle will be open by default.",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "btnText": {
                  "title": "Button text",
                  "description": "Text shown in the button. (Text and URL required to display)",
                  "type": "string",
                  "format": "markdown"
                },
                "btnLink": {
                  "title": "Button URL",
                  "description": "URL destination when the button is clicked. (Text and URL required to display)",
                  "type": "string",
                  "format": "text"
                },
                "btnModel": {
                  "title": "Button model",
                  "description": "Row buttons can use solid or outline models.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "btnTheme": {
                  "title": "Button theme",
                  "description": "Row buttons can use default or action color themes.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "action"
                  ]
                },
                "btnTracking": {
                  "title": "Button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "btnClasses": {
                  "title": "Button classes",
                  "description": "Additional CSS classes applied to button.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "btnAttributes": {
                  "title": "Button attributes",
                  "description": "Addition HTML attributes applied to button.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "subtext": {
                  "title": "Subtext",
                  "description": "Supplemental content to follow blow the line item button.",
                  "type": "string",
                  "format": "text"
                },
                "categories": {
                  "title": "Row categories",
                  "type": "array",
                  "items": {
                    "title": "Row category",
                    "type": "object",
                    "properties": {
                      "icon": {
                        "title": "Icon",
                        "description": "Each category line item can show an icon or content.",
                        "type": "string",
                        "enum": [
                          "[none]",
                          "checkmark",
                          "dash"
                        ]
                      },
                      "text": {
                        "title": "Text",
                        "description": "The description is shown when the icon type of 'none'. Otherwise, it is used as a title for the icon if one is used.",
                        "type": "string",
                        "format": "markdown"
                      },
                      "popoverLabel": {
                        "title": "Popover label",
                        "description": "Popover label: Required text to display. If no text is provided the popover won't be shown.",
                        "type": "string",
                        "format": "text"
                      },
                      "popoverTitle": {
                        "title": "Popover title",
                        "description": "Bolded title of the popover message. (optional)",
                        "type": "string",
                        "format": "text"
                      },
                      "popover": {
                        "title": "Popover",
                        "description": "Append a popover with extra details.",
                        "type": "string",
                        "format": "text"
                      }
                    }
                  }
                }
              },
              "required": [
                "title"
              ]
            },
            "default": [
              {
                "enableToggle": false,
                "toggleOpen": false,
                "btnModel": "[default]",
                "btnTheme": "[default]",
                "categories": [
                  {
                    "icon": "[none]"
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "title",
          "categories",
          "rows"
        ]
      }
    },
    "genericHtml": {
      "twig": "<div class=\"container glo-generic-html {{ containerClasses }}\">{{ content|raw }}</div>\n",
      "schema": {
        "key": "genericHtml",
        "title": "Generic HTML",
        "description": "Generic HTML Fragment",
        "properties": {
          "containerClasses": {
            "title": "Container classes",
            "description": "Container override classes",
            "type": "string",
            "format": "text",
            "default": ""
          },
          "content": {
            "title": "Content",
            "description": "HTML Content.",
            "type": "string",
            "format": "markdown"
          }
        },
        "required": [
          "content"
        ]
      }
    },
    "headlineCard": {
      "twig": "{%\n set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}<div>\n  {% if image %}\n    <figure class=\"glo-headline-card w-100 d-flex flex-row-reverse{% if inverse %} content-inverse{% endif %}\">\n      <a{% if url %} href=\"{{ url }}\"{% if '//' in url %} target=\"_blank\" rel=\"noopener\"{% endif %}{% endif %} class=\"card-image d-none d-lg-block col-lg-6 px-0\" style=\"background: url('{{ image }}') center / cover\" title=\"{{ title }}\">\n      </a>\n      <figcaption class=\"flex-fill p-9 p-md-5\">\n        {% if title %}\n          <h{{ index }} class=\"glo-headline-card-heading {% if description and titleClass|length > 0 and titleClass != '[default]' %}{{ titleClass }}{% elseif title|length > 60 %}highlight-2{% else %}title-2{% endif %} mb-4\">\n            {% if url %}\n              <a\n                href=\"{{ url }}\"\n                {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n                class=\"d-block glo-link-plain {{ customClasses }}\"\n                {{ additionalAttributes|raw }}\n              >{{ title|raw }}</a>\n            {% else %}\n              {{ title|raw }}\n            {% endif %}\n            {% if labelText|length > 0 %}<span class=\"badge{% if labelTheme|length > 0 and labelTheme != 'light' %} badge-theme-{{ labelTheme }}{% endif %}\">{{ labelText }}{% if labelCaption|length > 0 %}<span> {{ labelCaption }}</span>{% endif %}</span>{% endif %}\n          </h{{ index }}>\n        {% endif %}\n        {% if description %}<p class=\"m-0 pb-9\">{{ description|raw }}</p>{% endif %}\n        {% if url %}\n          <p class=\"m-0\">\n            <a href=\"{{ url }}\"{% if '//' in url %} target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if ctaTracking %}data-ga-label=\"{{ ctaTracking }}\"{% endif %}\n              class=\"btn btn{% if ctaModel|length > 0 and ctaModel != '[default]' %}-{{ ctaModel }}{% endif %}{% if ctaTheme == 'action' %}-action{% elseif inverse %}{% if ctaModel == 'outline' %}-negative{% else %} btn-inverse{% endif %}{% endif %} {{ ctaClasses }}\"\n              {{ ctaAttributes|raw }}\n            >\n              <span>{{ ctaText|raw }}</span>\n              {% if ctaArrow %}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                  <use xlink:href=\"#glo-arrow-right\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-arrow-right\"></use>\n                </svg>\n              {% endif %}\n            </a>\n          </p>\n        {% endif %}\n      </figcaption>\n    </figure>\n  {% else %}\n    <div class=\"glo-focus-card d-lg-flex w-100{% if inverse %} content-inverse{% endif %} col-12 p-9 p-md-5\">\n      <div class=\"flex-fill d-flex\">\n        <div class=\"align-self-center\">\n          <h{{ index }} class=\"glo-focus-card-heading {% if titleClass|length > 0 and titleClass != '[default]' %}{{ titleClass }}{% elseif title|length > 60 %}highlight-2{% else %}highlight-1{% endif %} m-0 pb-4 p-lg-0\">\n            {{ title|raw }}\n            {% if labelText|length > 0 %}<span class=\"badge{% if labelTheme|length > 0 and labelTheme != 'light' %} badge-theme-{{ labelTheme }}{% endif %}\">{{ labelText }}{% if labelCaption|length > 0 %}<span> {{ labelCaption }}</span>{% endif %}</span>{% endif %}\n          </h{{ index }}>\n        </div>\n      </div>\n      {% if ctaText and url %}\n        <div class=\"d-flex pl-md-5\">\n          <p class=\"align-self-center m-0\">\n            <a\n              href=\"{{ url }}\"\n              {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if ctaTracking %}data-ga-label=\"{{ ctaTracking }}\"{% endif %}\n              class=\"btn btn{% if ctaModel|length > 0 and ctaModel != '[default]' %}-{{ ctaModel }}{% endif %}{% if ctaTheme == 'action' %}-action{% elseif inverse %}{% if ctaModel == 'outline' %}-negative{% else %} btn-inverse{% endif %}{% endif %} {{ ctaClasses }}\"\n              {{ ctaAttributes|raw }}\n            >\n              <span>{{ ctaText|raw }}</span>\n              {% if ctaArrow %}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                  <use xlink:href=\"#glo-arrow-right\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-arrow-right\"></use>\n                </svg>\n              {% endif %}\n            </a>\n          </p>\n        </div>\n      {% endif %}\n    </div>\n  {% endif %}\n</div>\n",
      "schema": {
        "key": "headlineCard",
        "title": "Headline Card",
        "description": "Headline Card fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "image": {
            "title": "Image",
            "description": "Image web address for the headline card.",
            "type": "string",
            "format": "text"
          },
          "url": {
            "title": "URL",
            "description": "Web address to the headline topic page.",
            "type": "string",
            "format": "text"
          },
          "inverse": {
            "title": "Inverse colors",
            "description": "Inverse colors of background and text.",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "title": {
            "title": "Title",
            "description": "Headline topic title for the this headline. (plain text)",
            "type": "string",
            "format": "text"
          },
          "titleClass": {
            "title": "Title class",
            "description": "Specify a title class to be used. [default] will auto-select the class using existing logic.",
            "type": "string",
            "enum": [
              "[default]",
              "title-2",
              "highlight-1",
              "highlight-2"
            ],
            "default": "[default]"
          },
          "tracking": {
            "title": "Tracking label",
            "type": "string",
            "format": "text"
          },
          "customClasses": {
            "title": "Custom classes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "additionalAttributes": {
            "title": "Additional attributes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "labelText": {
            "title": "Feature label",
            "description": "Bolded text for the label.",
            "type": "string",
            "format": "text"
          },
          "labelCaption": {
            "title": "Feature caption",
            "description": "Caption text for the label.",
            "type": "string",
            "format": "text"
          },
          "labelTheme": {
            "title": "Feature theme",
            "description": "Label design theme.",
            "type": "string",
            "enum": [
              "light",
              "accent",
              "dark"
            ],
            "default": "light"
          },
          "description": {
            "title": "Description",
            "description": "Description for this headline. (plain text)",
            "type": "string",
            "format": "text"
          },
          "ctaText": {
            "title": "CTA text",
            "description": "Text to show on the CTA button.",
            "type": "string",
            "format": "text"
          },
          "ctaModel": {
            "title": "CTA button model",
            "description": "Select the design model for the button",
            "type": "string",
            "enum": [
              "[default]",
              "outline"
            ],
            "default": "[default]"
          },
          "ctaTheme": {
            "title": "CTA button theme",
            "description": "Select the design color theme for the button",
            "type": "string",
            "enum": [
              "[default]",
              "action"
            ],
            "default": "[default]"
          },
          "ctaArrow": {
            "title": "CTA arrow",
            "description": "If the media is not used, and optional arrow can be applided to the CTA button. Use the CTA arrow?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "ctaTracking": {
            "title": "CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "ctaClasses": {
            "title": "CTA custom classes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "ctaAttributes": {
            "title": "CTA additional attributes",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          }
        },
        "required": [
          "title"
        ]
      }
    },
    "heroMedia65": {
      "twig": "{%\n  set indexA = (not blockHeaderIndex or blockHeaderIndex < 1) ? 2 : blockHeaderIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}<div class=\"row glo-hero-media65\">\n  <div class=\"row d-flex col-lg-12 px-0 mx-0\">\n    <div class=\"content-block-card col-12 col-lg-6\">\n      <div>\n        {% if blockTitle %}<h{{ index }} class=\"content-block-card-title hero-1 m-0\">{{ blockTitle|raw }}</h{{ index }}>{% endif %}\n\n        {% if blockContent %}<p class=\"content-block-card-content content-1 mt-4 mb-0\">{{ blockContent|raw }}</p>{% endif %}\n\n        {% if ctaType == 'search' %}\n          {% if ctaSearch.action %}\n            <form action=\"{{ ctaSearch.action }}\" method=\"get\">\n              <p class=\"input-pair input-action mt-5 mb-0\">\n                <input\n                  id=\"hero65-input\"\n                  type=\"text\"\n                  name=\"{{ ctaSearch.inputName ?: 'entity' }}\"\n                  maxlength=\"255\"\n                  class=\"form-control\"\n                  aria-label=\"{{ (ctaSearch.label|length > 0) ? ctaSearch.label|escape('html') : 'search here' }}\"\n                  placeholder=\"{{ (ctaSearch.label|length > 0) ? ctaSearch.label|escape('html') : 'search here' }}\"\n                  required\n                />\n\n                <button\n                  id=\"hero65-button\"\n                  type=\"submit\"\n                  class=\"btn btn-action {{ ctaSearch.customClasses }}\"\n                  {% if ctaSearch.tracking %}data-ga-label=\"{{ ctaSearch.tracking }}\"{% endif %}\n                  {{ ctaSearch.attributes|raw }}\n                >\n                  <span>{{ (ctaSearch.buttonText|length > 0) ? ctaSearch.buttonText|raw : 'Search' }}</span>\n                </button>\n              </p>\n            </form>\n          {% endif %}\n        {% elseif (blockBtn1.link and blockBtn1.text) or (blockBtn2Link and blockBtn2Text) %}\n          <p class=\"mt-5 mb-0\">\n            {% if blockBtn1.link and blockBtn1.text %}\n              <a\n                href=\"{{ blockBtn1.link }}\"\n                {% if blockBtn1.tracking %}data-ga-label=\"{{ blockBtn1.tracking }}\"{% endif %}\n                class=\"d-block d-md-inline-block align-text-top mr-md-4 mb-4 mb-md-0 btn-1 btn btn-lg btn{% if blockBtn1.model == 'outline' %}-outline{% endif %}-action {{ blockBtn1.customClasses }}\"\n                {{ blockBtn1.attributes|raw }}\n              >{{ blockBtn1.text|raw }}</a>\n            {% endif %}\n            {% if blockBtn2.link and blockBtn2.text %}\n              <a\n                href=\"{{ blockBtn2.link }}\"\n                {% if blockBtn2.tracking %}data-ga-label=\"{{ blockBtn2.tracking }}\"{% endif %}\n                class=\"d-block d-md-inline-block align-text-top btn-2 btn btn-lg btn{% if blockBtn2.model == 'outline' %}-outline{% endif %}-action {{ blockBtn2.customClasses }}\"\n                {{ blockBtn2.attributes|raw }}\n              >{{ blockBtn2.text|raw }}</a>\n            {% endif %}\n          </p>\n        {% endif %}\n\n        {% if productId or (pricingLink and pricingText) %}\n          <div class=\"glo-hero-media65-stars-container d-flex flex-row align-items-md-end flex-wrap pt-4 mt-2\">\n            {% if productId %}\n              <div class=\"glo-hero-media65-bv-stars d-none\"\n                  data-bv-show=\"rating_summary\"\n                  data-bv-product-id=\"{{ productId }}\"\n                {% if __uniTest_mockTag_ready__ %} data-bv-ready=\"true\"{% endif %}>\n                {% if __uniTest_mockTag__ %}\n                  {{ __uniTest_mockTag__|raw }}\n                {% endif %}\n              </div>\n\n              <div class=\"rating d-none mr-3 mb-2 mb-md-0\">\n                <div class=\"stars\" aria-hidden=\"true\">\n                  <div class=\"glo-hero-media65-stars-filled\">\n                    {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <use xlink:href=\"#glo-star-1\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-1\"></use>\n                    </svg>{% endfor %}\n                  </div>\n                  <div class=\"glo-hero-media65-stars-outlines\">\n                    {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <use xlink:href=\"#glo-star-0\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-0\"></use>\n                    </svg>{% endfor %}\n                  </div>\n                </div>\n              </div>\n\n              {% if ratingsLink %}\n                <div class=\"ratings-container d-none flex-row align-items-md-center\">\n                  <a\n                    href=\"{{ ratingsLink }}\"\n                    {% if ratingsLinkTracking %}data-ga-label=\"{{ ratingsLinkTracking }}\"{% endif %}\n                    class=\"rate subtitle-1 {{ ratingsLinkCustomClasses }}\"\n                    {{ ratingsLinkAttributes|raw }}\n                  ></a>&nbsp;\n                  <div>(<span class=\"glo-hero-media65-reviews-count\"></span>)</div>\n                </div>\n              {% endif %}\n            {% endif %}\n\n            {% if pricingLink and pricingText %}\n              <div class=\"pricing-options\">\n                <a\n                  href=\"{{ pricingLink }}\"\n                  {% if pricingLinkTracking %}data-ga-label=\"{{ pricingLinkTracking }}\"{% endif %}\n                  class=\"hero65-pricing {{ pricingLinkCustomClasses }}\"\n                  {{ pricingLinkAttributes|raw }}\n                >{{ pricingText|raw }}</a>\n              </div>\n            {% endif %}\n          </div>\n        {% endif %}\n      </div>\n    </div>\n\n    <div class=\"col-12 col-lg-6 mt-6 mt-lg-0\">\n      {# NOTE: \"card-media\" is a copy from the template #}\n      <div class=\"card card-media card-media-right\">\n        <img src=\"{{ mediaImage }}\" loading=\"lazy\" alt=\"{{ mediaImageAlt|escape('html') }}\" class=\"card-img\" aria-hidden=\"true\">\n        {% if mediaIcon or mediaHeading or mediaContent %}\n          <div class=\"card-body card-media-{{ mediaVertical ?: 'top' }}{% if mediaShadow %} card-media-shadow{% endif %}\">\n            {% if mediaIcon %}<img src=\"{{ mediaIcon }}\" loading=\"lazy\" alt=\"{{ mediaImageAlt|escape('html') }}\" class=\"card-media-icon\" aria-hidden=\"true\">{% endif %}\n            {% if mediaHeading %}<p class=\"card-title\"><strong class=\"title-1\">{{ mediaHeading|raw }}</strong></p>{% endif %}\n            {% if mediaContent %}<p class=\"caption-3\">{{ mediaContent|raw }}</p>{% endif %}\n          </div>\n        {% endif %}\n      </div>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "heroMedia65",
        "title": "Hero Media 6:5",
        "description": "Hero Media 6:5 fragment",
        "properties": {
          "mediaImage": {
            "title": "Card Image URL",
            "description": "URL for the image.",
            "type": "string",
            "format": "text"
          },
          "mediaImageAlt": {
            "title": "Card Image alt text",
            "description": "Alt Text for the image",
            "type": "string",
            "format": "text"
          },
          "mediaVertical": {
            "title": "Card Image message",
            "description": "Choose the position where the content message will be placed over the image.",
            "type": "string",
            "enum": [
              "top",
              "bottom"
            ],
            "default": "top"
          },
          "mediaIcon": {
            "title": "Icon URL",
            "description": "URL for the icon in the message over the image.",
            "type": "string",
            "format": "text"
          },
          "mediaHeading": {
            "title": "Heading",
            "description": "Heading for the message over the image.",
            "type": "string",
            "format": "markdown"
          },
          "mediaContent": {
            "title": "Content",
            "description": "Text for the message over the image.",
            "type": "string",
            "format": "markdown"
          },
          "mediaShadow": {
            "title": "Message shadow",
            "description": "Should the message over the image have a shadow?",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "useBazaarVoice": {
            "title": "Enable BazaarVoice",
            "description": "Do not forget to include the BazaarVoice on the page",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "productId": {
            "title": "Product ID",
            "description": "Provide the productId that corresponds to a valid BazaarVoice product id.",
            "type": "string",
            "format": "text"
          },
          "ratingsLink": {
            "title": "Ratings link",
            "description": "Used to link the reviews from BazaarVoice to the product reviews.",
            "type": "string",
            "format": "text"
          },
          "ratingsLinkTracking": {
            "title": "Ratings link tracking label",
            "type": "string",
            "format": "text"
          },
          "ratingsLinkCustomClasses": {
            "title": "Ratings link custom classes",
            "description": "Used to provide custom classes to the ratings link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "ratingsLinkAttributes": {
            "title": "Ratings link attributes",
            "description": "Used to apply additional HTML attributes to the ratings link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "pricingText": {
            "title": "Pricing text",
            "description": "Text of the link to the pricing page.",
            "type": "string",
            "format": "text"
          },
          "pricingLink": {
            "title": "Pricing link",
            "description": "Link to the pricing page.",
            "type": "string",
            "format": "text"
          },
          "pricingLinkTracking": {
            "title": "Pricing link tracking label",
            "type": "string",
            "format": "text"
          },
          "pricingLinkCustomClasses": {
            "title": "Pricing link custom classes",
            "description": "Used to provide custom classes to the pricing link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "pricingLinkAttributes": {
            "title": "Pricing link attributes",
            "description": "Used to apply additional HTML attributes to the pricing link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "blockHeaderIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "blockTitle": {
            "title": "Title",
            "description": "[required] Title for this card.",
            "type": "string",
            "format": "markdown"
          },
          "blockContent": {
            "title": "Content",
            "description": "Content for this card.",
            "type": "string",
            "format": "markdown"
          },
          "ctaType": {
            "title": "CTA type",
            "description": "Defines whether to use a Search form or Buttons. Definitions for both Buttons will be ignored if Search is chosen.",
            "type": "string",
            "enum": [
              "button",
              "search"
            ],
            "default": "button"
          },
          "ctaSearch": {
            "title": "Search",
            "description": "Search input pair form.",
            "type": "object",
            "properties": {
              "action": {
                "title": "Search CTA form action",
                "description": "Search CTA URL to call when the form is submitted.",
                "type": "string",
                "format": "text"
              },
              "inputName": {
                "title": "Search CTA input name",
                "description": "Search CTA input field name for form. (default: entity)",
                "type": "string",
                "format": "text"
              },
              "label": {
                "title": "Search CTA input label",
                "description": "Search CTA input label/placeholder text.",
                "type": "string",
                "format": "text"
              },
              "buttonText": {
                "title": "Search CTA button text",
                "description": "Search CTA button text. (default: Search)",
                "type": "string",
                "format": "markdown"
              },
              "tracking": {
                "title": "Search CTA button tracking",
                "description": "Search CTA tracking label for click action.",
                "type": "string",
                "format": "text"
              },
              "customClasses": {
                "title": "Search CTA button classes",
                "description": "Search CTA custom CSS classes added to the button.",
                "type": "string",
                "format": "text",
                "options": {
                  "hidden": true
                }
              },
              "attributes": {
                "title": "Search CTA button attributes",
                "description": "Search CTA custom HTML attributes added to the button.",
                "type": "string",
                "format": "text",
                "options": {
                  "hidden": true
                }
              }
            }
          },
          "blockBtn1": {
            "title": "Button 1",
            "description": "Details for Button 1",
            "type": "object",
            "properties": {
              "text": {
                "title": "Button 1 text",
                "description": "Button 1 text if used.",
                "type": "string",
                "format": "markdown"
              },
              "link": {
                "title": "Button 1 URL",
                "description": "URL for button 1.",
                "type": "string",
                "format": "text"
              },
              "model": {
                "title": "Button 1 model",
                "description": "Button 1 design to use.",
                "type": "string",
                "enum": [
                  "[default]",
                  "outline"
                ],
                "default": "[default]"
              },
              "tracking": {
                "title": "Tracking label",
                "type": "string",
                "format": "text"
              },
              "customClasses": {
                "title": "Button 1 custom classes",
                "type": "string",
                "format": "text",
                "options": {
                  "hidden": true
                }
              },
              "attributes": {
                "title": "Button 1 additional attributes",
                "type": "string",
                "format": "text",
                "options": {
                  "hidden": true
                }
              }
            }
          },
          "blockBtn2": {
            "title": "Button 2",
            "description": "Details for Button 2",
            "type": "object",
            "properties": {
              "text": {
                "title": "Button 2 text",
                "description": "Button 2 text if used.",
                "type": "string",
                "format": "markdown"
              },
              "link": {
                "title": "Button 2 URL",
                "description": "URL for button 2.",
                "type": "string",
                "format": "text"
              },
              "model": {
                "title": "Button 2 model",
                "description": "Button 2 design to use.",
                "type": "string",
                "enum": [
                  "[default]",
                  "outline"
                ],
                "default": "outline"
              },
              "tracking": {
                "title": "Tracking label",
                "type": "string",
                "format": "text"
              },
              "customClasses": {
                "title": "Button 2 custom classes",
                "type": "string",
                "format": "text",
                "options": {
                  "hidden": true
                }
              },
              "attributes": {
                "title": "Button 2 additional attributes",
                "type": "string",
                "format": "text",
                "options": {
                  "hidden": true
                }
              }
            }
          }
        },
        "required": [
          "mediaImage"
        ]
      }
    },
    "heroMedia915": {
      "twig": "<div class=\"glo-hero915\">\n  {% set svgUrl = '/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg' %}\n  <div class=\"hero915-content\">\n    <h1 class=\"hero-1\">{{ heroText|raw }}</h1>\n\n    <p class=\"content-1\">\n      {{ heroSubText|raw }}\n\n      {% if heroPopoverText %}\n      <a\n        tabindex=\"0\"\n        data-trigger=\"focus\"\n        data-toggle=\"popover\"\n        data-placement=\"bottom\"\n        data-offset=\"-8px, 8px\"\n        data-html=\"true\"\n        data-container=\"body\"\n        data-content=\"{{ heroPopoverText|escape('html') }}\"\n        class=\"btn btn-dot btn-xs\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n          <use style=\"color: #fff;\" xlink:href=\"#glo-info\" href=\"{{ svgUrl }}#glo-info\"></use>\n        </svg>\n      </a>\n      {% endif %}\n    </p>\n\n    {% if heroSubTextHint %}<p class=\"content-1 mt-0\">{{ heroSubTextHint|raw }}</p>{% endif %}\n\n    <div class=\"hero915-cta\">\n      {% if heroCTAType == 'search' and heroFormAction %}\n      <form action=\"{{ heroFormAction }}\">\n        <p class=\"input-pair input-action\">\n          <input\n            id=\"hero915-input\"\n            type=\"text\"\n            name=\"{{ heroFormInputName ?: 'entity' }}\"\n            maxlength=\"255\"\n            class=\"form-control\"\n            aria-label=\"{{ heroCTAInputPlaceholder|escape('html') ?: 'search here' }}\"\n            {% if heroCTAInputPlaceholder %}placeholder=\"{{ heroCTAInputPlaceholder|escape('html') }}\"{% endif %}\n            required>\n\n          <button\n            id=\"hero915-button\"\n            type=\"submit\"\n            {% if heroCTATracking %}data-ga-label=\"{{ heroCTATracking }}\"{% endif %}\n            class=\"btn btn-action {{ heroCTACustomClasses }}\"\n            {{ heroCTAAttributes|raw }}\n          >\n            <span>{{ heroCTAButtonText|raw ?: 'Search' }}</span>\n          </button>\n        </p>\n      </form>\n      {% else %}\n      <p>\n        <a\n          id=\"hero915-cta-button\"\n          href=\"{{ heroCTAButtonHref }}\"\n          {% if heroCTATracking %}data-ga-label=\"{{ heroCTATracking }}\"{% endif %}\n          class=\"btn btn-action btn-lg {{ heroCTACustomClasses }}\"\n          {{ heroCTAAttributes|raw }}\n        >\n          <span>{{ heroCTAButtonText|raw ?: 'Search' }}</span>\n        </a>\n      </p>\n      {% endif %}\n\n      {% if heroCTACaption %}<p class=\"caption-1 mt-3 hero915-hero-cta-caption\">{{ heroCTACaption|raw }}</p>{% endif %}\n\n      {% if heroCTASubCaption %}<p class=\"content-2 mt-9 hero915-hero-cta-subcaption\">{{ heroCTASubCaption|raw }}</p>{% endif %}\n    </div>\n\n    {% if productId %}\n      <div\n        class=\"hero915-bv\"\n        data-bv-show=\"rating_summary\"\n        data-bv-product-id=\"{{ productId }}\"\n        {% if __uniTest_mockTag_ready__ %}data-bv-ready=\"true\"{% endif %}>\n        {% if __uniTest_mockTag__ %}{{ __uniTest_mockTag__|raw }}{% endif %}\n      </div>\n    {% endif %}\n\n    {% if productId or (pricingLink and pricingText) %}\n      <p class=\"hero915-bv-rating\">\n        {% if productId %}\n          <span class=\"rating d-none\" aria-hidden=\"true\">\n            <span class=\"stars\">\n              <span class=\"star0\">\n                {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <use xlink:href=\"#glo-star-1\" href=\"{{ svgUrl }}#glo-star-1\"></use>\n                </svg>{% endfor %}\n              </span>\n\n              <span class=\"star1\">\n                {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <use xlink:href=\"#glo-star-0\" href=\"{{ svgUrl }}#glo-star-0\"></use>\n                </svg>{% endfor %}\n              </span>\n            </span>\n          </span>\n\n          {% if ratingsLink %}\n            <span class=\"hero915-rating d-none{% if pricingLink and pricingText %} hero915-pipe{% endif %}\">\n              <a\n                href=\"{{ratingsLink}}\"\n                {% if ratingsLinkTracking %}data-ga-label=\"{{ ratingsLinkTracking }}\"{% endif %}\n                class=\"subtitle-1 {{ ratingsLinkCustomClasses }}\"\n                {{ ratingsLinkAttributes|raw }}\n              >&nbsp;</a>&nbsp;(<span></span>)\n            </span>\n          {% endif %}\n        {% endif %}\n\n        {% if pricingLink and pricingText %}\n          <a\n            href=\"{{ pricingLink }}\"\n            {% if pricingLinkTracking %}data-ga-label=\"{{ pricingLinkTracking }}\"{% endif %}\n            class=\"hero915-pricing {{ pricingLinkCustomClasses }}\"\n            {{ pricingLinkAttributes|raw }}\n          >{{ pricingText|raw }}</a>\n        {% endif %}\n      </p>\n    {% endif %}\n\n    {% if heroSubCaption %}<p class=\"hero915-caption content-2\">{{ heroSubCaption|raw }}</p>{% endif %}\n\n    {% if questionnaireLinkText or (questionnaireLinkText and questionnaireLinkUrl) %}\n    <p class=\"hero915-questionnaire content-2 m-0\">\n      {{ questionnaireHelperText|raw }}\n      {% if questionnaireLinkText and questionnaireLinkUrl %}\n      <a\n        href=\"{{ questionnaireLinkUrl }}\"\n        {% if questionnaireLinkTracking %}data-ga-label=\"{{ questionnaireLinkTracking }}\"{% endif %}\n        {% if questionnaireLinkClasses %}class=\"{{ questionnaireLinkClasses }}\"{% endif %}\n        {{ questionnaireLinkAttributes|raw }}\n      >{{ questionnaireLinkText|raw }}</a>\n      {% endif %}\n    </p>\n    {% endif %}\n  </div>\n\n  {% if mediaImage %}\n  <div class=\"hero915-image\">\n    <figure>\n      <picture>\n        {% if mobileMediaImage %}\n          <source srcset=\"{{ mobileMediaImage }}\" media=\"(max-width:767px)\" />\n        {% endif %}\n        <img src=\"{{ mediaImage }}\" alt=\"{{ mediaImageAlt|escape('html') }}\" loading=\"lazy\" />\n      </picture>\n      {% if mediaImageCaption %}\n        <figcaption>\n          <p><strong>{{ mediaImageCaption|raw }}</strong></p>\n        </figcaption>\n      {% endif %}\n    </figure>\n  </div>\n  {% endif %}\n\n  {% if satisfactionGuaranteeBadgeImage %}\n  <div class=\"hero915-banner\">\n    <div class=\"hero915-guarantee\">\n      <div class=\"hero915-badge\">\n        <img src=\"{{ satisfactionGuaranteeBadgeImage }}\" loading=\"lazy\" alt=\"\"\n          title=\"{{ satisfactionGuaranteeBadgeAlt|escape('html') ?: 'Our promise: 100% Satisfaction Guarantee' }}\">\n      </div>\n\n      {% if satisfactionGuaranteeTitle or satisfactionGuarantee %}\n      <div class=\"hero915-statement\">\n        {% if satisfactionGuaranteeTitle %}<h2 class=\"highlight-1\">{{ satisfactionGuaranteeTitle|raw }}</h2>{% endif %}\n        {% if satisfactionGuarantee %}<p class=\"content-2\">{{ satisfactionGuarantee|raw }}</p>{% endif %}\n      </div>\n      {% endif %}\n    </div>\n  </div>\n  {% endif %}\n</div>\n",
      "schema": {
        "key": "heroMedia915",
        "title": "Hero Media 9:15",
        "description": "Hero Media 9:15 fragment",
        "properties": {
          "mediaImage": {
            "title": "Desktop Image URL",
            "description": "URL for the image.",
            "type": "string",
            "format": "text"
          },
          "mobileMediaImage": {
            "title": "Mobile Image URL",
            "description": "URL for the image.",
            "type": "string",
            "format": "text"
          },
          "mediaImageAlt": {
            "title": "Image alt",
            "description": "Alt text for the hero image.",
            "type": "string",
            "format": "text"
          },
          "mediaImageCaption": {
            "title": "Image caption",
            "description": "Text that goes on the white frame",
            "type": "string",
            "format": "text"
          },
          "heroText": {
            "title": "Heading",
            "description": "Main hero text section",
            "type": "string",
            "format": "markdown"
          },
          "heroSubText": {
            "title": "Hero subtext",
            "description": "Secondary hero text section.",
            "type": "string",
            "format": "markdown"
          },
          "heroPopoverText": {
            "title": "Hero popover text",
            "description": "Text shown in the popover below the subtext",
            "type": "string",
            "format": "text"
          },
          "heroSubTextHint": {
            "title": "Hero subtext hint",
            "description": "Hint text to be displayed in a tooltip.",
            "type": "string",
            "format": "markdown"
          },
          "heroCTAType": {
            "title": "CTA type",
            "description": "Defines whether to use a Search or Button",
            "type": "string",
            "enum": [
              "button",
              "search"
            ],
            "default": "search"
          },
          "heroCTAFormType": {
            "title": "Form type",
            "description": "Defines whether to use a normal button or a submit one if the form is gonna be used",
            "type": "string",
            "enum": [
              "button",
              "submit"
            ],
            "default": "button"
          },
          "heroCTAInputPlaceholder": {
            "title": "Hero CTA input placeholder",
            "description": "CTA Input placeholder text.",
            "type": "string",
            "format": "text"
          },
          "heroCTAButtonText": {
            "title": "Hero CTA button",
            "description": "CTA Button text.",
            "type": "string",
            "format": "markdown"
          },
          "heroCTAButtonHref": {
            "title": "Hero CTA button href",
            "description": "When CTAType is button, it can have an href property",
            "type": "string",
            "format": "text"
          },
          "heroCTACaption": {
            "title": "Hero CTA caption text",
            "description": "Caption text to be displayed below the CTA.",
            "type": "string",
            "format": "markdown"
          },
          "heroCTASubCaption": {
            "title": "Hero CTA Sub-caption Text",
            "description": "Sub-caption text to be displayed below the CTA's Caption.",
            "type": "string",
            "format": "markdown",
            "default": "Hero CTA Sub-caption"
          },
          "heroCTATracking": {
            "title": "Hero CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "heroCTACustomClasses": {
            "title": "Hero CTA custom class",
            "description": "Add custom CSS classes to the button",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "heroCTAAttributes": {
            "title": "Attributes",
            "description": "Hero CTA Add custom HTML attributes to the button",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "heroFormAction": {
            "title": "Form action",
            "description": "Action to be executed on main form",
            "type": "string",
            "format": "text"
          },
          "heroFormInputName": {
            "title": "Form input name attribute",
            "description": "Name for input field on main form",
            "type": "string",
            "format": "text"
          },
          "productId": {
            "title": "Product ID",
            "description": "Provide the productId that corresponds to a valid BazaarVoice product id.",
            "type": "string",
            "format": "text"
          },
          "staticStarsMessage": {
            "title": "Static stars message",
            "description": "Message to show if stars will be static",
            "type": "string",
            "format": "text"
          },
          "staticStarsPercentageFilled": {
            "title": "Static stars percentage filled",
            "description": "Percentage of filled stars to show",
            "type": "string",
            "format": "text"
          },
          "ratingsLink": {
            "title": "Ratings link",
            "description": "Used to link the reviews from BazaarVoice to the product reviews.",
            "type": "string",
            "format": "text"
          },
          "ratingsLinkTracking": {
            "title": "Ratings link tracking label",
            "type": "string",
            "format": "text"
          },
          "ratingsLinkCustomClasses": {
            "title": "Ratings link custom classes",
            "description": "Used to provide custom classes to the ratings link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "ratingsLinkAttributes": {
            "title": "Ratings link attributes",
            "description": "Used to apply additional HTML attributes to the ratings link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "pricingText": {
            "title": "Pricing text",
            "description": "Text of the link to the pricing page.",
            "type": "string",
            "format": "text"
          },
          "pricingLink": {
            "title": "Pricing link",
            "description": "Link to the pricing page.",
            "type": "string",
            "format": "text"
          },
          "pricingLinkTracking": {
            "title": "Pricing link tracking label",
            "type": "string",
            "format": "text"
          },
          "pricingLinkCustomClasses": {
            "title": "Pricing link custom classes",
            "description": "Used to provide custom classes to the pricing link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "pricingLinkAttributes": {
            "title": "Pricing link attributes",
            "description": "Used to apply additional HTML attributes to the pricing link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "heroSubCaption": {
            "title": "Hero sub caption",
            "description": "More details about the product.",
            "type": "string",
            "format": "markdown"
          },
          "questionnaireHelperText": {
            "title": "Questionnaire helper text",
            "description": "Questionnaire helper text before the link.",
            "type": "string",
            "format": "markdown"
          },
          "questionnaireLinkUrl": {
            "title": "Questionnaire link",
            "description": "URL to the questionnaire.",
            "type": "string",
            "format": "text"
          },
          "questionnaireLinkText": {
            "title": "Questionnaire link text",
            "description": "Text to be displayed as a link",
            "type": "string",
            "format": "markdown"
          },
          "questionnaireLinkTracking": {
            "title": "Questionnaire link tracking label",
            "type": "string",
            "format": "text"
          },
          "questionnaireLinkClasses": {
            "title": "Questionnaire classes",
            "description": "Custom classes to the questionnaire link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "questionnaireLinkAttributes": {
            "title": "Questionnaire attributes",
            "description": "Custom HTML attributes to the questionnaire link",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "satisfactionGuaranteeBadgeImage": {
            "title": "Satisfaction guarantee badge",
            "description": "URL to the satisfaction guarantee badge asset",
            "type": "string",
            "format": "text"
          },
          "satisfactionGuaranteeTitle": {
            "title": "Satisfaction guarantee title",
            "description": "Title for the satisfaction guarantee",
            "type": "string",
            "format": "markdown"
          },
          "satisfactionGuarantee": {
            "title": "Satisfaction guarantee",
            "description": "Messaging for the satisfaction guarantee",
            "type": "string",
            "format": "markdown"
          }
        },
        "required": [
          "mediaImage",
          "mediaImageCaption",
          "heroText",
          "heroSubText",
          "satisfactionGuaranteeBadgeImage"
        ]
      }
    },
    "heroMedia915v1": {
      "twig": "<div class=\"glo-hero-media-915-wrapper\">\n  <div class=\"container glo-hero-media-915\">\n    <div class=\"row d-flex flex-wrap\">\n      <div class=\"hero-content col-12 col-lg-6 order-1 mb-6 mb-lg-7 mb-xl-6\">\n        <h1 class=\"hero-1 mb-4\">{{heroText|raw}}</h1>\n        <p class=\"content-1 m-0\">\n          {{heroSubText|raw}}\n\n          {% if heroPopoverText %}\n          <a class=\"hero-popover btn btn-dot btn-xs cursor-pointer\" tabindex=\"0\"\n            data-offset=\"-8px, 8px\"\n            data-placement=\"bottom\"\n            data-toggle=\"popover\"\n            data-content=\"{{heroPopoverText|escape('html')}}\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n              <use style=\"color: #fff;\" xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n            </svg>\n          </a>\n          {% endif %}\n        </p>\n        <p class=\"content-1 m-0\">{{heroSubTextHint|raw}}</p>\n\n        {% if heroCTAType %}\n          <div class=\"hero-cta mt-md-5 {% if heroCTACaption %} mb-4 pb-2 {% else %} mb-3 {% endif %} mt-4 pt-2 pt-md-0\">\n            {% if heroCTAType == 'search' %}\n              <div class=\"input-pair input-action\">\n                <form id=\"hero-915-form-ctrl\" class=\"hero-915-cta-form\" action=\"{{ heroFormAction }}\">\n                  <input id=\"hero-915-cta-input\" title=\"This field cannot be blank.\" type=\"text\" name=\"{{ heroFormInputName }}\" pattern=\"^(?!(\\s+)$).*$\" maxlength=\"255\" class=\"form-control\" aria-label=\"{{heroCTAInputPlaceholder}}\" placeholder=\"{{heroCTAInputPlaceholder}}\" required>\n                  <button\n                    id=\"hero-915-cta-button\"\n                    type=\"{{ heroCTAFormType }}\"\n                    {% if heroCTATracking %}data-ga-label=\"{{ heroCTATracking }}\"{% endif %}\n                    class=\"btn btn-action {{ heroCTACustomClasses }}\"\n                    {{ heroCTAAttributes|raw }}\n                  ><span>{{heroCTAButtonText|raw}}</span></button>\n                </form>\n              </div>\n            {% else %}\n              <a\n                id=\"hero-915-cta-button\"\n                href=\"{{heroCTAButtonHref}}\"\n                {% if heroCTATracking %}data-ga-label=\"{{ heroCTATracking }}\"{% endif %}\n                class=\"btn btn-action btn-lg {{ heroCTACustomClasses }}\"\n                {{ heroCTAAttributes|raw }}\n              ><span>{{heroCTAButtonText|raw}}</span></a>\n            {% endif %}\n            <p class=\"caption-1 mb-0 mt-3 hero-cta-caption\">{{heroCTACaption|raw}}</p>\n          </div>\n        {% endif %}\n\n        <div class=\"d-flex flex-row align-items-md-end flex-wrap\">\n          {% if productId is not empty and staticStarsMessage is empty %}\n            <div class=\"glo-hero-media-915-bv-stars d-none\"\n              {% if __uniTest_mockTag_ready__ %}data-bv-ready=\"true\"{% endif %}\n              data-bv-show=\"rating_summary\"\n              data-bv-product-id=\"{{productId}}\">\n              {% if __uniTest_mockTag__ %}\n                {{__uniTest_mockTag__ | raw}}\n              {% endif %}\n            </div>\n\n            <div class=\"glo-hero-media-915-stars-container d-none mr-3 mb-2 mb-md-0\">\n              <div class=\"rating\">\n                <div class=\"stars\" aria-hidden=\"true\">\n                  <div class=\"glo-hero-media-915-stars-filled\">\n                    {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <use xlink:href=\"#glo-star-1\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-1\"></use>\n                    </svg><!---->{% endfor %}\n                  </div>\n                  <div class=\"glo-hero-media-915-stars-outlines\">\n                    {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <use xlink:href=\"#glo-star-0\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-0\"></use>\n                    </svg><!---->{% endfor %}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"ratings-container d-none flex-row align-items-md-center pipe-divider{% if pricingLink is empty %} pipe-divider--no-pricing-link{% endif %}\">\n              <a\n                href=\"{{ratingsLink}}\"\n                {% if ratingsLinkTracking %}data-ga-label=\"{{ ratingsLinkTracking }}\"{% endif %}\n                class=\"rate subtitle-1 {{ratingsLinkCustomClasses}}\"\n                {{ratingsLinkAttributes|raw}}\n              ></a>&nbsp;\n              <div>(<span class=\"glo-hero-media-915-reviews-count\"></span>)</div>\n            </div>\n          {% endif %}\n\n          {% if staticStarsMessage is not empty and productId is empty %}\n            <div class=\"glo-hero-media-915-stars-container mr-3 mb-2 mb-md-0\">\n              <div class=\"rating\">\n                <div class=\"stars\">\n                  <div class=\"glo-hero-media-915-stars-filled-static\" style=\"width:{{ staticStarsPercentageFilled }}%;\">\n                    {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <use xlink:href=\"#glo-star-1\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-1\"></use>\n                    </svg><!---->{% endfor %}\n                  </div>\n                  <div class=\"glo-hero-media-915-stars-outlines\">\n                    {% for i in 1..5 %}<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <use xlink:href=\"#glo-star-0\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-0\"></use>\n                    </svg><!---->{% endfor %}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"ratings-container flex-row align-items-md-center pipe-divider{% if pricingLink is empty %} pipe-divider--no-pricing-link{% endif %}\">\n              <span class=\"subtitle-1\">{{ staticStarsMessage }}</span>\n            </div>\n          {% endif %}\n\n          {% if pricingLink %}\n            <a\n              href=\"{{pricingLink}}\"\n              {% if pricingLinkTracking %}data-ga-label=\"{{ pricingLinkTracking }}\"{% endif %}\n              class=\"pricing-link {{pricingLinkCustomClasses}}\"\n              {{pricingLinkAttributes|raw}}\n            >{{pricingText}}</a>{% endif %}\n        </div>\n\n        {% if heroSubCaption or questionnaireLinkText %}\n          <div class=\"hero-sub-caption-content\">\n            <p class=\"content-2 m-0 my-4 mb-md-0\">{{heroSubCaption}}</p>\n            {% if questionnaireLinkText and questionnaireLinkUrl %}\n            <p class=\"content-2 m-0\">\n              {{questionnaireHelperText|raw}}<br class=\"d-md-none\">\n              <a\n                href=\"{{questionnaireLinkUrl}}\"\n                {% if questionnaireLinkTracking %}data-ga-label=\"{{ questionnaireLinkTracking }}\"{% endif %}\n                {% if questionnaireLinkClasses %} class=\"{{questionnaireLinkClasses}}\"{% endif %}\n                {{questionnaireLinkAttributes|raw}}\n              >{{questionnaireLinkText|raw}}</a></p>\n            {% endif %}\n          </div>\n        {% endif %}\n      </div>\n\n      {% if mediaImage %}\n        <div class=\"hero-image-wrapper col-12 col-md-6 col-lg-5 offset-lg-1 order-2 order-md-3 order-lg-2 pb-lg-7 pb-xl-0\">\n          <figure class=\"hero-image\">\n            <img src=\"{{mediaImage}}\" loading=\"lazy\" alt=\"{{mediaImageAlt|escape('html')}}\">\n              {% if mediaImageCaption %}\n              <figcaption class=\"d-flex text-center\">\n                <div class=\"hero-caption-text align-self-end\"><strong>{{mediaImageCaption|raw}}</strong></div>\n              </figcaption>\n              {% endif %}\n          </figure>\n        </div>\n      {% endif %}\n\n      {% if satisfactionGuaranteeBadgeImage %}\n        <div class=\"hero-sub-content py-5 py-md-0 py-lg-5 pt-xl-0 pb-xl-6 col-12 col-md-6 col-lg-12 col-xl-6 order-3 order-md-2 order-lg-3 d-flex flex-column justify-content-center\">\n          <div class=\"container\">\n            <div class=\"hero-sub-content-wrapper row no-gutters\">\n              <div class=\"satisfaction-guaranteed-banner col-12 d-flex flex-column justify-content-between\">\n                <div class=\"hero-sub-content-title d-flex flex-row-reverse flex-md-column flex-lg-row-reverse flex-xl-column justify-content-between flex-shrink-0\">\n                  <div class=\"badge-container\">\n                    <img class=\"badge\" src=\"{{satisfactionGuaranteeBadgeImage}}\" loading=\"lazy\" alt=\"Satisfaction Guarantee Badge\">\n                  </div>\n                  {% if satisfactionGuaranteeTitle %}<h2 class=\"highlight-1 mt-0 mt-md-4 mt-lg-0 mt-xl-4 mb-3\">{{satisfactionGuaranteeTitle|raw}}</h2>{% endif %}\n                </div>\n                {% if satisfactionGuarantee %}<p class=\"content-2 col-lg-6 p-0 m-0\">{{satisfactionGuarantee|raw}}</p>{% endif %}\n              </div>\n            </div>\n          </div>\n        </div>\n      {% endif %}\n\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "heroMedia915v1",
        "title": "Hero Media 9:15 v1 [deprecated]",
        "description": "[DEPRECATED] Hero Media 9:15 v1 fragment. Use updated Hero Media 9:15 fragment.",
        "properties": {
          "mediaImage": {
            "title": "Image URL",
            "description": "URL for the image.",
            "type": "string",
            "format": "text",
            "default": "https://via.placeholder.com/444x860"
          },
          "mediaImageAlt": {
            "title": "Image Alt",
            "description": "Alt text for the hero image.",
            "type": "string",
            "format": "text",
            "default": "some placeholder image"
          },
          "mediaImageCaption": {
            "title": "Image Caption",
            "description": "Text that goes on the white frame",
            "type": "string",
            "format": "text",
            "default": "We've helped entrepreneurs turn ideas into businesses 2M+ times."
          },
          "heroText": {
            "title": "Heading",
            "description": "Main hero text section",
            "type": "string",
            "format": "markdown",
            "default": "Start your business with confidence"
          },
          "heroSubText": {
            "title": "Hero Sub Text",
            "description": "Secondary hero text section.",
            "type": "string",
            "format": "markdown",
            "default": "Whether you're ready to form or still deciding, we've got your back. Learn if an LLC is right for you—or start one."
          },
          "heroPopoverText": {
            "title": "Hero Popover text",
            "description": "Text shown in the popover below the sub text",
            "type": "string",
            "format": "text",
            "default": "No need to add “LLC“ at the end. We'll do that for you."
          },
          "heroSubTextHint": {
            "title": "Hero Sub Text Hint",
            "description": "Hint text to be displayed in a tooltip.",
            "type": "string",
            "format": "markdown",
            "default": "Starts at <strong>$79</strong> + filing fees."
          },
          "heroCTAType": {
            "title": "CTA Type",
            "description": "Defines whether to use a Search or Button",
            "type": "string",
            "enum": [
              "button",
              "search"
            ],
            "default": "search"
          },
          "heroCTAFormType": {
            "title": "Form Type",
            "description": "Defines whether to use a normal button or a submit one if the form is gonna be used",
            "type": "string",
            "enum": [
              "button",
              "submit"
            ],
            "default": "button"
          },
          "heroCTAInputPlaceholder": {
            "title": "Hero CTA Input Placeholder",
            "description": "CTA Input placeholder text.",
            "type": "string",
            "format": "text",
            "default": "Enter your business name"
          },
          "heroCTAButtonText": {
            "title": "Hero CTA Button",
            "description": "CTA Button text.",
            "type": "string",
            "format": "markdown",
            "default": "Check availability"
          },
          "heroCTAButtonHref": {
            "title": "Hero CTA Button href",
            "description": "When CTAType is button, it can have an href property",
            "type": "string",
            "format": "text",
            "default": "http://legalzoom.com/cta/somewhere"
          },
          "heroCTACaption": {
            "title": "Hero CTA Caption Text",
            "description": "Caption text to be displayed below the CTA.",
            "type": "string",
            "format": "markdown",
            "default": "Many people finish the application in 15 minutes."
          },
          "heroCTATracking": {
            "title": "Hero CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "heroCTACustomClasses": {
            "title": "Hero CTA Custom Class",
            "description": "Add custom CSS classes to the button",
            "type": "string"
          },
          "heroCTAAttributes": {
            "title": "Attributes",
            "description": "Hero CTA Add custom HTML attributes to the button",
            "type": "string"
          },
          "heroFormAction": {
            "title": "Form action",
            "description": "Action to be executed on main form",
            "type": "string",
            "format": "text",
            "default": "/llc/name/state"
          },
          "heroFormInputName": {
            "title": "Form input name attribute",
            "description": "Name for input field on main form",
            "type": "string",
            "format": "text",
            "default": "entity"
          },
          "productId": {
            "title": "Product Id",
            "description": "Provide the productId that corresponds to a valid BazaarVoice product id.",
            "type": "string",
            "format": "text",
            "default": "1"
          },
          "staticStarsMessage": {
            "title": "Static Stars message",
            "description": "Message to show if stars will be static",
            "type": "string",
            "format": "text"
          },
          "staticStarsPercentageFilled": {
            "title": "Static Stars percentage filled",
            "description": "Percentage of filled stars to show",
            "type": "string",
            "format": "text"
          },
          "ratingsLink": {
            "title": "Ratings Link",
            "description": "Used to link the reviews from BazaarVoice to the product reviews.",
            "type": "string",
            "format": "text",
            "default": "https://legalzoom.com/123/123/something/here"
          },
          "ratingsLinkTracking": {
            "title": "Ratings link tracking label",
            "type": "string",
            "format": "text"
          },
          "ratingsLinkCustomClasses": {
            "title": "Ratings Link Custom Classes",
            "description": "Used to provide custom classes to the ratings link",
            "type": "string",
            "format": "text"
          },
          "ratingsLinkAttributes": {
            "title": "Ratings Link Attributes",
            "description": "Used to apply additional HTML attributes to the ratings link",
            "type": "string",
            "format": "text"
          },
          "pricingText": {
            "title": "Pricing Text",
            "description": "Text of the link to the pricing page.",
            "type": "string",
            "format": "text",
            "default": "See pricing options"
          },
          "pricingLink": {
            "title": "Pricing Link",
            "description": "Link to the pricing page.",
            "type": "string",
            "format": "text",
            "default": "https://legalzoom.com/123/123"
          },
          "pricingLinkTracking": {
            "title": "Pricing link tracking label",
            "type": "string",
            "format": "text"
          },
          "pricingLinkCustomClasses": {
            "title": "Pricing Link Custom Classes",
            "description": "Used to provide custom classes to the pricing link",
            "type": "string",
            "format": "text"
          },
          "pricingLinkAttributes": {
            "title": "Pricing Link Attributes",
            "description": "Used to apply additional HTML attributes to the pricing link",
            "type": "string",
            "format": "text"
          },
          "heroSubCaption": {
            "title": "Hero Sub Caption",
            "description": "More details about the product.",
            "type": "string",
            "format": "text",
            "default": "These costs are often tax deductible."
          },
          "questionnaireHelperText": {
            "title": "Questionnaire helper text",
            "description": "Questionnaire helper text before the link.",
            "type": "string",
            "format": "markdown",
            "default": "Still thinking of a business name?"
          },
          "questionnaireLinkUrl": {
            "title": "Questionnaire link",
            "description": "URL to the questionnaire.",
            "type": "string",
            "format": "text",
            "default": "https://legalzoom.com/123/321"
          },
          "questionnaireLinkText": {
            "title": "Questionnaire link text",
            "description": "Text to be displayed as a link",
            "type": "string",
            "format": "text",
            "default": "Start now and decide later"
          },
          "questionnaireLinkTracking": {
            "title": "Questionnaire tracking label",
            "type": "string",
            "format": "text"
          },
          "questionnaireLinkClasses": {
            "title": "Questionnaire classes",
            "description": "Custom classes to the questionnaire link",
            "type": "string",
            "format": "text"
          },
          "questionnaireLinkAttributes": {
            "title": "Questionnaire attributes",
            "description": "Custom HTML attributes to the questionnaire link",
            "type": "string",
            "format": "text"
          },
          "satisfactionGuaranteeBadgeImage": {
            "title": "Satisfaction Guarantee Badge",
            "description": "URL to the satisfaction guarantee badge asset",
            "type": "string",
            "format": "text",
            "default": "https://via.placeholder.com/137x115"
          },
          "satisfactionGuaranteeTitle": {
            "title": "Satisfaction Guarantee Title",
            "description": "Title for the satisfaction guarantee",
            "type": "string",
            "format": "markdown",
            "default": "100% Satisfaction Guarantee"
          },
          "satisfactionGuarantee": {
            "title": "Satisfaction Guarantee",
            "description": "Messaging for the satisfaction guarantee",
            "type": "string",
            "format": "markdown",
            "default": "We do right by you—so <a href=\"#\" id=\"hero-media-915-satisfaction-guarantee-refund-modal\">we'll refund our fee</a> if you're unhappy with our services."
          }
        },
        "required": [
          "mediaImage",
          "mediaImageCaption",
          "heroText",
          "heroSubText",
          "satisfactionGuaranteeBadgeImage"
        ]
      }
    },
    "heroTile": {
      "twig": "{% if tablet > 1 %}{%\n  set md = ' col-md-6'\n%}{% endif %}{% if tablet < 2 and desktop == 2\n%}{% set lg = ' col-lg-6'\n%}{% elseif desktop > 2 %}{%\n  set lg = ' col-lg-4'\n%}{% endif %}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}{%\nif btnModel == 'outline' or btnTheme == 'action'\n  %}{% if btnModel == 'outline' %}{%\n    set buttonClassA = '-outline'\n  %}{% endif %}{% if btnTheme == 'action' %}{%\n    set buttonClassB = '-action'\n  %}{% endif %}{%\nelseif colorScheme == 'black'\n  %}{%\n    set buttonClassA = '-inverse'\n  %}{%\nendif\n%}<div class=\"glo-hero-tile d-flex col-12{{ md }}{{ lg }}\">\n  <div class=\"w-100 d-flex flex-column\">\n    {% if image %}<div class=\"image\"><img src=\"{{ image }}\" loading=\"lazy\" alt=\"{{ imageAlt|escape('html') }}\"></div>{% endif %}\n\n    <div class=\"content-wrap flex-fill{% if colorScheme == 'black' %} content-inverse{% elseif colorScheme %} {{ colorScheme }}{% endif %}\">\n      {% if title %}<h{{ index }} class=\"title highlight-1\">{{ title|raw }}</h{{ index }}>{% endif %}\n\n      {% if description %}<p class=\"description content-2\">{{ description|raw }}</p>{% endif %}\n\n      {% if btnLink and btnText %}\n        <p class=\"mt-4\"><a\n          href=\"{{ btnLink }}\"\n          {% if btnTracking %}data-ga-label=\"{{ btnTracking }}\"{% endif %}\n          class=\"btn btn{{ buttonClassA }}{{ buttonClassB }}{{ btnClasses is not empty ? ' ' ~ btnClasses : '' }}\"\n          {{ btnAttributes|raw }}\n          ><span>{{ btnText|raw }}</span></a></p>\n      {% endif %}\n\n      {% if subCopy %}\n        <p class=\"subcopy content-3 mb-0\">\n          {{ subCopy|raw }}\n          {% if flag %}\n            <svg class=\"ml-2\" width=\"36\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <title>US Flag</title>\n              <path fill=\"#FFF\" d=\"M0 1.314h36v20.892H0z\"></path>\n              <path fill=\"#DA000C\" d=\"M0 1.314h36v2.32H0zM0 5.957h36v2.32H0zM0 10.6h36v2.32H0zM0 15.242h36v2.32H0zM0 19.885h36v2.32H0z\"></path>\n              <path fill=\"#0093FF\" d=\"M0 1.314h18V12.92H0z\"></path>\n          </svg>\n          {% endif %}\n        </p>\n      {% endif %}\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "heroTile",
        "title": "Hero Tile",
        "description": "Hero Tile fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "desktop": {
            "title": "Desktop columns",
            "description": "How many items across to show on desktop?",
            "type": "number",
            "format": "number",
            "default": 3,
            "options": {
              "hidden": true
            }
          },
          "tablet": {
            "title": "Tablet columns",
            "description": "How many items across to show on tablet?",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "image": {
            "title": "Image",
            "description": "Hero tile image.",
            "type": "string",
            "format": "text"
          },
          "imageAlt": {
            "title": "Image alt",
            "description": "Hero 'alt' message for the image.",
            "type": "string",
            "format": "text"
          },
          "colorScheme": {
            "title": "Color Scheme",
            "description": "Should the background be white,  gray, or black?",
            "type": "string",
            "enum": [
              "white",
              "gray",
              "black"
            ],
            "default": "white"
          },
          "title": {
            "title": "Title",
            "description": "Hero tile title.",
            "type": "string",
            "format": "markdown"
          },
          "description": {
            "title": "Body",
            "description": "Body text.",
            "type": "string",
            "format": "markdown",
            "default": "Lorem ipsum dolor sit anet, var <a href='#'>consectetur adipiscing</a> tortor."
          },
          "btnText": {
            "title": "Button text",
            "description": "Button text if used.",
            "type": "string",
            "format": "markdown"
          },
          "btnLink": {
            "title": "Button URL",
            "description": "URL for the button.",
            "type": "string",
            "format": "text"
          },
          "btnModel": {
            "title": "Button model",
            "description": "Button design to use.",
            "type": "string",
            "enum": [
              "[default]",
              "outline"
            ],
            "default": "[default]"
          },
          "btnTheme": {
            "title": "Button theme",
            "description": "Button color theme to use.",
            "type": "string",
            "enum": [
              "[default]",
              "action"
            ],
            "default": "[default]"
          },
          "btnTracking": {
            "title": "Button tracking label",
            "type": "string",
            "format": "text"
          },
          "btnClasses": {
            "title": "Custom button classes",
            "description": "Additional classes to add to the button",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "btnAttributes": {
            "title": "Custom button attributes",
            "description": "Additional attributes to add to the button",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "subCopy": {
            "title": "Sub-copy",
            "description": "Sub-copy text.",
            "type": "string",
            "format": "markdown"
          },
          "flag": {
            "title": "U.S. Flag",
            "description": "Append the United States flag to the end of the sub-copy.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          }
        },
        "required": []
      }
    },
    "highlightList": {
      "twig": "{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 5 #}{%\n  set index = (indexA < 6) ? indexA + 1 : 6\n%}{# adjusting index by one due to using accordion as a pattern to minimize code deviation #}{%\n  set headerSize = 'large'\n%}{%\n  set firstOpen = true\n%}{#\n NOTE: Accordion header small and header subCopy are intentionally not supported in this fragment\n#}<figure class=\"row glo-highlight-list\">\n  <div data-test--content-column class=\"col-lg-6 order-md-{{ (media.position == 'left') ? '2' : '1' }}\">\n    <div class=\"d-flex h-100 align-items-center\">\n      <div class=\"w-100\">\n        <figcaption>\n          {% if title %}<h{{ index - 1 }} class=\"highlight-1 mb-9\" data-test--title-container>{{ title|raw }}</h{{ index - 1 }}>{% endif %}\n          {% if icon == 'accordion-number-tabs' or icon == 'accordion-tabs' %}{# uses accordion fragment as a pattern #}\n            <ol id=\"accordion{{ seed }}\" class=\"accordion {{ icon }}\">\n              {% for item in list %}\n                {% if item.title and item.content %}\n                  <li class=\"card\">\n                    <div id=\"accordion{{ seed }}-t{{ loop.index }}\" class=\"card-header\">\n                      <a\n                        href=\"#accordion{{ seed }}-c{{ loop.index }}\"\n                        data-toggle=\"collapse\"\n                        role=\"button\"\n                        aria-expanded=\"{{ (firstOpen and loop.index == 1) ? 'true' : 'false' }}\"\n                        aria-controls=\"accordion{{ seed }}-c{{ loop.index }}\"\n                        {% if item.tracking %}data-ga-label=\"{{ item.tracking }}\"{% endif %}\n                        class=\"glo-link-plain {{ item.customClasses }}\"\n                        {{ item.additionalAttributes|raw }}\n                      >\n                        <h{{ index }} class=\"{% if headerSize == 'large' %}highlight-2{% else %}subtitle-1{% endif %}\">{{ item.title|raw }}</h{{ index }}>\n                        {% if item.subCopy %}<p class=\"content-2\">{{ item.subCopy|raw }}</p>{% endif %}\n                        {% if icon == 'chevron' %}\n                          <span class=\"glo-svg\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\">\n                              <g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-width=\"6\">\n                                <polyline points=\"14 6 21.5 14.2494108 14 22.5\" transform=\"rotate(-270.0000) translate(0, -32)\"></polyline>\n                              </g>\n                            </svg>\n                          </span>\n                        {% elseif icon == 'plus' %}\n                          <span class=\"glo-svg\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\">\n                              <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"6\">\n                                <line class=\"h-line\" x1=\"6\" y1=\"18\" x2=\"30\" y2=\"18\"></line>\n                                <line class=\"v-line\" x1=\"18\" y1=\"6\" x2=\"18\" y2=\"30\"></line>\n                              </g>\n                            </svg>\n                          </span>\n                        {% endif %}\n                      </a>\n                    </div>\n                    <div\n                      id=\"accordion{{ seed }}-c{{ loop.index }}\"\n                      class=\"collapse{{ (firstOpen and loop.index == 1) ? ' show' : '' }}\"\n                      data-toggle=\"collapse\"\n                      data-parent=\"#accordion{{ seed }}\"\n                      aria-labelledby=\"accordion{{ seed }}-t{{ loop.index }}\"\n                    >\n                      <div class=\"card-body content-2{% if icon != 'accordion-number-tabs' and icon != 'accordion-tabs' %} pb-5 pb-lg-6 offset-lg-2 col-lg-8{% endif %}\">{{ item.content|raw }}</div>\n                    </div>\n                  </li>\n                {% endif %}\n              {% endfor %}\n            </ol>\n          {% else %}{# default: numbered-list #}\n            <ol>\n              {% for item in list %}\n                {% if item.title %}\n                  <li>\n                    <strong class=\"highlight-2\">{{ item.title|raw }}</strong>\n                    {% if item.content %}<div class=\"card-content\">{{ item.content|raw }}</div>{% endif %}\n                  </li>\n                {% endif %}\n              {% endfor %}\n            </ol>\n          {% endif %}\n        </figcaption>\n        {% if dividerLine and dividerLine.enable %}\n          <hr data-test--underline class=\"glo-highlight-list--underline mt-4 m-0 p-0\">\n        {% endif %}\n        {% if additionalText %}\n          {% with additionalText %}\n            <div data-test--additional-text-container class=\"glo-highlight-list--supporting-text body-2 mt-4\">\n              {{ text|raw }}\n              {% if link %}<a\n                data-test--additional-text-link\n                href=\"{{ link.url }}\"\n                {% if link.tracking %}data-ga-label=\"{{ link.tracking }}\"{% endif %}\n                {% if link.customClasses %}class=\"{{ link.customClasses }}\"{% endif %}\n                {{ link.attributes|raw }}\n                >{{ link.text }}</a>{% endif %}\n            </div>\n          {% endwith %}\n        {% endif %}\n      </div>\n    </div>\n  </div>\n  <div data-test--media-column class=\"col-lg-6 {{ (media.showOnMobile) ? '' : 'hide-on-mobile' }} {{ (media.showOnTablet) ? '' : 'hide-on-tablet' }} glo-highlight-list--media order-md-{{ (media.position == 'left') ? '1' : '2' }}{% if icon == 'accordion-number-tabs' or icon == 'accordion-tabs' %} align-items-start{% endif %}\">\n    <div><img src=\"{{ media.src }}\" loading=\"lazy\" alt=\"{{ media.alt|default(title)|escape('html') }}\"></div>\n  </div>\n</figure>\n",
      "schema": {
        "key": "highlightList",
        "title": "Highlight List",
        "description": "Highlight List fragment",
        "properties": {
          "headerIndex": {
            "title": "Card: heading index",
            "description": "What will be the starting heading index? (number: 1-5, default: 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "title": {
            "title": "Title",
            "type": "string",
            "format": "text"
          },
          "icon": {
            "title": "List type",
            "type": "string",
            "enum": [
              "number-list",
              "accordion-tabs",
              "accordion-number-tabs"
            ],
            "default": "number-list"
          },
          "list": {
            "title": "List",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "type": "string",
                  "format": "markdown"
                },
                "content": {
                  "title": "Content",
                  "type": "string",
                  "format": "markdown"
                },
                "tracking": {
                  "title": "Tracking label (accordion)",
                  "type": "string",
                  "format": "text"
                },
                "customClasses": {
                  "title": "Custom classes (accordion)",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "additionalAttributes": {
                  "title": "Additional attributes (accordion)",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              },
              "required": []
            }
          },
          "dividerLine": {
            "title": "Divider line",
            "properties": {
              "enable": {
                "title": "Enable",
                "type": "boolean",
                "format": "checkbox",
                "default": true
              }
            }
          },
          "additionalText": {
            "title": "Additional text",
            "properties": {
              "text": {
                "title": "Text",
                "type": "string",
                "format": "text"
              },
              "link": {
                "title": "Link",
                "description": "[optional] link for additional text",
                "type": "object",
                "properties": {
                  "text": {
                    "title": "Text",
                    "description": "Link text",
                    "type": "string",
                    "format": "text"
                  },
                  "url": {
                    "title": "Url",
                    "description": "Link URL",
                    "type": "string",
                    "format": "text"
                  },
                  "tracking": {
                    "title": "Tracking label",
                    "type": "string",
                    "format": "text"
                  },
                  "customClasses": {
                    "title": "First button custom classes",
                    "type": "string",
                    "format": "text",
                    "options": {
                      "hidden": true
                    }
                  },
                  "attributes": {
                    "title": "First button additional attributes",
                    "type": "string",
                    "format": "text"
                  }
                },
                "required": [
                  "text",
                  "url"
                ]
              }
            }
          },
          "media": {
            "title": "Media",
            "properties": {
              "showOnTablet": {
                "title": "Show on tablet",
                "type": "boolean",
                "format": "checkbox",
                "default": false
              },
              "showOnMobile": {
                "title": "Show on mobile",
                "type": "boolean",
                "format": "checkbox",
                "default": false
              },
              "src": {
                "title": "Image URL",
                "type": "string",
                "format": "text"
              },
              "position": {
                "title": "Position",
                "type": "string",
                "enum": [
                  "default",
                  "left",
                  "right"
                ],
                "default": "default"
              },
              "alt": {
                "title": "Alt text",
                "type": "string",
                "format": "text"
              }
            },
            "required": [
              "src"
            ]
          }
        },
        "required": [
          "title",
          "media"
        ]
      }
    },
    "horizontalCard": {
      "twig": "<div class=\"horizontal-card\">\n  <div class=\"card\">\n    <div class=\"row\">\n      <div class=\"col-6 col-md-4\">\n        {% if image %}\n          {% if url %}\n            <a\n              href=\"{{ url }}\"\n              {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if imageTracking %}data-ga-label=\"{{ imageTracking }}\"{% endif %}\n              class=\"{{imageClasses}}\"\n              {{imageAttributes|raw}}\n            ><img src=\"{{ image }}\" loading=\"lazy\" class=\"card-img-top rounded-0\" alt=\"{{ title|escape('html') }}\"></a>\n          {% else %}\n            <img src=\"{{ image }}\" loading=\"lazy\" class=\"card-img-top rounded-0\" alt=\"{{ title|escape('html') }}\">\n          {% endif %}\n        {% endif %}\n      </div>\n      <div class=\"col-6 col-md-8\">\n        <div class=\"card-body\">\n          {% if title %}\n            <h3 class=\"card-title\">\n              {% if url %}\n                <a\n                  href=\"{{ url }}\"\n                  {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                  {% if linkTracking %}data-ga-label=\"{{ linkTracking }}\"{% endif %}\n                  class=\"{{linkClasses}}\"\n                  {{linkAttributes|raw}}\n                >{{ title }}</a>\n              {% else %}\n                {{ title }}\n              {% endif %}\n            </h3>\n          {% endif %}\n          {% if description %}\n            <div class=\"card-text content-3\">\n              <p>{{ description|slice(0,150) }}{% if description|length > 150 %}&hellip;{% endif %}</p>\n            </div>\n          {% endif %}\n          {% if info %}\n            <div class=\"card-info card-text-muted\">\n              <small>\n                <time>{{ info }}</time>\n                {% if minutes %}<time title=\"{{ minutes }} minutes reading time\"> &middot; {{ minutes }} min read</time>{% endif %}\n              </small>\n            </div>\n          {% endif %}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "horizontalCard",
        "title": "Horizontal Card",
        "description": "Horizontal Card fragment",
        "properties": {
          "url": {
            "url": "URL",
            "description": "Card article URL.",
            "type": "string",
            "format": "text"
          },
          "linkTracking": {
            "title": "Link tracking label",
            "type": "string",
            "format": "text"
          },
          "linkClasses": {
            "title": "Link custom classes",
            "type": "string",
            "format": "text"
          },
          "linkAttributes": {
            "title": "Link additional attributes",
            "type": "string",
            "format": "text"
          },
          "image": {
            "title": "Image URL",
            "description": "Default image of the vertical card should be 300X225 pixels in size.",
            "type": "string",
            "format": "text"
          },
          "imageTracking": {
            "title": "Image tracking label",
            "type": "string",
            "format": "text"
          },
          "imageClasses": {
            "title": "Image custom classes",
            "type": "string",
            "format": "text"
          },
          "imageAttributes": {
            "title": "Image additional attributes",
            "type": "string",
            "format": "text"
          },
          "title": {
            "title": "Card title",
            "description": "The name of the title.",
            "type": "string",
            "format": "text"
          },
          "description": {
            "title": "Description",
            "description": "Description or short info about the card",
            "type": "string",
            "format": "textarea"
          },
          "info": {
            "title": "Info",
            "description": "Related information",
            "type": "string",
            "format": "textarea"
          },
          "minutes": {
            "title": "How many minutes to read",
            "description": "Minutes to read",
            "type": "string",
            "format": "text",
            "default": "XX"
          }
        },
        "required": []
      }
    },
    "increment": {
      "twig": "{%\nif min matches '/^\\d+$/' %}{%\n  set minVal = min %}{%\nendif %}{%\nif max matches '/^\\d+$/' %}{%\n  if min matches '/^\\d+$/' %}{%\n    if max > min %}{%\n      set maxVal = max %}{%\n    endif %}{%\n  else %}{%\n    set maxVal = max %}{%\n  endif %}{%\nendif %}{%\nset stepVal = (step matches '/^\\d+$/') ? step : 1 %}{%\nset curTmp = (value matches '/^\\d+$/') ? value : 0 %}{%\nset curTmp2 = (curTmp < minVal) ? minVal : curTmp %}{%\nset curVal = (curTmp2 > maxVal) ? maxVal : curTmp2\n%}<fieldset class=\"d-inline-block increment{% if theme != '[default]' %} increment-{{ theme }}{% endif %}{% if disabled %} disabled{% endif %}\">\n  <button type=\"button\" title=\"decrease\" class=\"increment-button decrease\" {% if disabled %} disabled{% endif %}>\n    <span>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n        <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\">\n          <path d=\"M1.5,6.5 L11.5,6.5\"></path>\n        </g>\n      </svg>\n    </span>\n  </button>\n  <input{% if id %} id=\"{{ id }}\"{% endif %} name=\"{{ name }}\" type=\"number\"{% if minVal matches '/^\\d+$/' %} min=\"{{ minVal }}\"{% endif %}{% if maxVal matches '/^\\d+$/' %} max=\"{{ maxVal }}\"{% endif %} step=\"{{ stepVal }}\" value=\"{{ curVal }}\"{% if disabled %} disabled{% endif %} aria-label=\"choose a value\" class=\"increment-input\">\n  <button type=\"button\" title=\"increase\" class=\"increment-button increase\" {% if disabled %} disabled{% endif %}>\n    <span>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n        <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\">\n          <path d=\"M1.5,6.5 L11.5,6.5 M6.5,1.5 L6.5,11.5\"></path>\n        </g>\n      </svg>\n    </span>\n  </button>\n</fieldset>\n",
      "schema": {
        "key": "increment",
        "title": "Increment",
        "description": "Increment fragment",
        "properties": {
          "theme": {
            "title": "Theme",
            "description": "Control color theme.",
            "type": "string",
            "enum": [
              "[default]",
              "action"
            ],
            "default": "[default]"
          },
          "name": {
            "title": "Field name",
            "description": "Form field name.",
            "type": "string",
            "format": "text"
          },
          "min": {
            "title": "Minimum value",
            "description": "Lowest value for the field.",
            "type": "number",
            "format": "number",
            "default": 0
          },
          "max": {
            "title": "Maximum value",
            "description": "Highest value for the field.",
            "type": "number",
            "format": "number",
            "default": 100
          },
          "step": {
            "title": "Increment step",
            "description": "Step value changes when clicking the increment and decrement buttons.",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "value": {
            "title": "Initial value",
            "description": "Starting or default value for the field.",
            "type": "number",
            "format": "number",
            "default": 10
          },
          "disabled": {
            "title": "Disable component",
            "description": "Is the entire input control to be disabled?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "customClasses": {
            "title": "Custom classes",
            "type": "string",
            "format": "text"
          },
          "additionalAttributes": {
            "title": "Additional attributes",
            "type": "string",
            "format": "text"
          }
        },
        "required": [
          "name",
          "step",
          "value"
        ]
      }
    },
    "linkList": {
      "twig": "<div class=\"container\">\n  {% set lgColSize = list|length > 2 ? 'col-lg-4' : 'col-lg-6' %}\n  <div class=\"row\">\n    {% for listItem in list %}\n      <div class=\"glo-link-list col-12 col-md-6 {{lgColSize}} mb-5\">\n        {% if listItem.title %}<h3 class=\"highlight-2 mb-4\">{{listItem.title|raw}}</h3>{% endif %}\n        <ul>\n          {% for link in listItem.links %}\n          <li {% if not loop.last %}class=\"mb-2\"{% endif %}>\n            <a\n              href=\"{{ link.url }}\"\n              {% if '//' in link.url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if link.tracking %}data-ga-label=\"{{ link.tracking }}\"{% endif %}\n              class=\"{{ link.customClasses }}\"\n              {{ link.attributes|raw }}\n            >{{ link.text|raw }}</a>\n          </li>\n          {% endfor %}\n        </ul>\n      </div>\n    {% endfor %}\n  </div>\n</div>\n",
      "schema": {
        "key": "linkList",
        "title": "Link List",
        "description": "Link List fragment: display groups of lists with links.",
        "properties": {
          "list": {
            "title": "List group",
            "description": "Separate groups of linked lists.",
            "type": "array",
            "items": {
              "title": "Group",
              "type": "object",
              "properties": {
                "title": {
                  "title": "Group title",
                  "description": "Plain text title the the list group.",
                  "type": "string",
                  "format": "markdown"
                },
                "links": {
                  "title": "Group items",
                  "description": "Define the specifics for this link.",
                  "type": "array",
                  "items": {
                    "title": "Item",
                    "type": "object",
                    "properties": {
                      "text": {
                        "title": "Link text",
                        "description": "Text for the link.",
                        "type": "string",
                        "format": "markdown"
                      },
                      "url": {
                        "title": "Link URL",
                        "description": "URL for the link.",
                        "type": "string",
                        "format": "text"
                      },
                      "tracking": {
                        "title": "Tracking label",
                        "type": "string",
                        "format": "text"
                      },
                      "customClasses": {
                        "title": "Custom CSS classes",
                        "type": "string",
                        "format": "text"
                      },
                      "attributes": {
                        "title": "Additional HTML attributes",
                        "type": "string",
                        "format": "text"
                      }
                    },
                    "required": [
                      "text",
                      "url"
                    ]
                  }
                }
              },
              "required": [
                "links"
              ]
            },
            "default": [
              {
                "links": [
                  {}
                ]
              }
            ]
          }
        },
        "required": [
          "list"
        ]
      }
    },
    "modal": {
      "twig": "{%\n  set svgPath = '/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg'\n%}{%\n  set modalId = id ?: 'glo-modal-id'\n%}<div\n  id=\"{{ modalId }}\"\n  class=\"modal{% if flat %} modal-flat{% endif %}{% if animate %} fade{% endif %}{% if bootstrapHeader %} bootstrap-header{% endif %}\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"{{ modalId }}-label\"\n  aria-hidden=\"true\"\n  style=\"display: none;\">\n  <div role=\"document\" class=\"modal-dialog{% if not position or position == '[default]' %} modal-dialog-centered{% else %} modal-{{ position }}{% endif %} modal-dialog-scrollable{% if size and size|length > 0 and size != '[default]' %} modal-{{ size }}{% endif %}\">\n    <div class=\"modal-content{% if contentURL and contentURL|length > 0 %} modal-iframe{% endif %}\">\n      {% if bootstrapHeader %}\n        <div id=\"{{ modalId }}-label\" class=\"modal-header\">\n          <div>{% if header and header|length > 0 %}<h2 class=\"title-2 mb-0\">{{ header|raw }}</h2>{% endif %}</div>\n          <button type=\"button\" class=\"close glo-btn-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 13 13\" width=\"13\" height=\"13\">\n              <use xlink:href=\"#glo-close-2\" href=\"{{ svgPath }}#glo-close-2\"></use>\n            </svg>\n          </button>\n        </div>\n      {% endif %}\n\n        <div class=\"modal-body content-3{% if footer and footer|length > 0 %} mb-0{% endif %}\">\n          {% if not bootstrapHeader and header and header|length > 0 %}<h2 class=\"title-2 mb-9 mb-md-5\">{{ header|raw }}</h2>{% endif %}\n          {% if contentURL and contentURL|length > 0 %}\n            <iframe src=\"{{ contentURL }}\" title=\"modal document\" allowfullscreen></iframe>\n          {% else %}\n            <div class=\"modal-message\">{{ content|raw }}</div>\n          {% endif %}\n        </div>\n\n      {% if footer and footer|length > 0 %}<div class=\"modal-footer\">{{ footer|raw }}</div>{% endif %}\n\n      {% if not bootstrapHeader %}\n        <button type=\"button\" class=\"close glo-btn-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 13 13\" width=\"13\" height=\"13\">\n            <use xlink:href=\"#glo-close-2\" href=\"{{ svgPath }}#glo-close-2\"></use>\n          </svg>\n        </button>\n      {% endif %}\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "modal",
        "title": "Modal",
        "description": "Modal Pattern",
        "properties": {
          "id": {
            "title": "HTML ID",
            "description": "[REQUIRED] Unique HTML ID for this modal pattern. The ID is required, must be alpha-numeric, and cannot have spaces.",
            "type": "string",
            "format": "text"
          },
          "size": {
            "title": "Width",
            "description": "Modal size in width. sm (max 300px), [default] (max 600px), lg (max 800px), xl (max 1000px)",
            "type": "string",
            "enum": [
              "sm",
              "[default]",
              "lg",
              "xl"
            ],
            "default": "[default]"
          },
          "position": {
            "title": "Position",
            "description": "How is the modal to display, the location in the browser.",
            "type": "string",
            "enum": [
              "[default]",
              "top",
              "right",
              "bottom",
              "fullscreen"
            ],
            "default": "[default]"
          },
          "animate": {
            "title": "Animate",
            "description": "Allow modal scroll and fade animation.",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          },
          "flat": {
            "title": "Flat",
            "description": "Shall the modal be flat, without a shadow, and white out the page?",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "bootstrapHeader": {
            "title": "Bootstrap header",
            "description": "Override design header and use the default Bootstrap header.",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "header": {
            "title": "Header",
            "description": "Header for the modal. Header is optional if you want to provide a formatted message. If 'Content URL' is used and 'Bootstrap header' is not enabled, then this will be ignored.",
            "type": "string",
            "format": "text"
          },
          "contentURL": {
            "title": "Content URL",
            "description": "Content provided by external file url.",
            "type": "string",
            "format": "text"
          },
          "content": {
            "title": "Content HTML",
            "description": "Content provided by inline HTML. This is ignored if 'Content URL' is defined.",
            "type": "string",
            "format": "textarea"
          },
          "footer": {
            "title": "Footer",
            "description": "[optional] Modal footer content.",
            "type": "string",
            "format": "textarea"
          }
        }
      }
    },
    "modalSampleDocument": {
      "twig": "{% if ((newProductName or (productName != \"[new product]\")) and productName) and modalId %}\n<div\n  id=\"{{ modalId }}\"\n  class=\"modal glo-modal-sample-document glo-modal-sample-document-background fade\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"{{ modalId }}-label\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sample-doc\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <div></div>\n        <button type=\"button\" class=\"close glo-btn-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n            <use xlink:href=\"#glo-close-2\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-close-2\"></use>\n          </svg>\n        </button>\n      </div>\n      <div class=\"modal-body content-3 pt-3\">\n        <h2 class=\"title-2 mb-9\">Sample documents</h2>\n        <p class=\"form-description mb-9\">\n          Select your state below for a representative sample document(s).\n          Click on the link to view and/or download the document.\n          Your final forms, documents and filings may differ depending on your state.\n          NOTE: You will need Adobe&reg; Acrobat Reader to view the document.\n          <a href=\"https://get.adobe.com/reader/\" class=\"glo-link-action\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Download the latest version</a>\n        </p>\n        <div class=\"form form-select mb-4\" id=\"{{ modalId }}-sample-documents-select-form\">\n          <input type=\"hidden\" id=\"{{ modalId }}-sample-documents-type\" value=\"{{ sampleDocumentsType }}\">\n          {% if newProductName %}\n            <input type=\"hidden\" id=\"{{ modalId }}-new-product-name\" value=\"{{ newProductName }}\">\n            {% if excludedStates %}\n              <input type=\"hidden\" id=\"{{ modalId }}-excluded-states\" value=\"{{ excludedStates }}\">\n            {% endif %}\n          {% else %}\n            <input type=\"hidden\" id=\"{{ modalId }}-product-name\" value=\"{{ productName }}\">\n          {% endif %}\n          <select id=\"{{ modalId }}-state-selector\" required class=\"form-control\">\n            <option value=\"\" disabled selected>Select your option</option>\n          </select>\n          <label for=\"{{ modalId }}-state-selector\"><span>Select state</span></label>\n          <span class=\"form-svg\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n              <use xlink:href=\"#glo-down\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-down\"></use>\n            </svg>\n          </span>\n        </div>\n        <div class=\"sample-documents\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n{% endif %}\n",
      "schema": {
        "key": "modalSampleDocument",
        "title": "Modal Sample Document",
        "description": "Modal Sample Document fragment: Must include Modal ID and either a Product Name or a New Product Name",
        "properties": {
          "modalId": {
            "title": "Modal ID",
            "description": "Unique HTML ID for this modal. The ID is required and cannot have spaces.",
            "type": "string",
            "format": "text"
          },
          "productName": {
            "title": "Product name",
            "description": "The name of the product the modal is fetching documents for. If the product is not in the list, select [new product] ",
            "type": "string",
            "enum": [
              "articles-of-amendment",
              "annual-initial-report",
              "annual-report",
              "bylaws-and-resolutions",
              "dba",
              "dissolution",
              "divorce",
              "enr",
              "foreign-qualification",
              "inc",
              "llc",
              "llp",
              "lp",
              "lt",
              "lwt",
              "lw",
              "name-change",
              "nonprofit",
              "operating-agreement",
              "pet-protection-agreement",
              "poa",
              "real-estate-deed-transfer",
              "statement-of-conversion",
              "[new product]"
            ],
            "default": "[new product]"
          },
          "newProductName": {
            "title": "[OPTIONAL] New product name",
            "description": "Only use this field if your product does not appear in the above list. Please type the product name as it appears in the URL that fetches the sample documents",
            "type": "string",
            "format": "text"
          },
          "excludedStates": {
            "title": "[OPTIONAL] Excluded states",
            "description": "If there are states that should be excluded from the sample documents, list them here spelled out fully and correctly and separated by commas. If your product is in the dropdown above, there's already a record of excluded states",
            "type": "string",
            "format": "text"
          },
          "sampleDocumentsType": {
            "title": "Type",
            "description": "",
            "type": "string",
            "enum": [
              "overview",
              "qpage"
            ],
            "default": "overview"
          }
        },
        "required": [
          "modalId",
          "productName",
          "sampleDocumentsType"
        ]
      }
    },
    "pricingCard": {
      "twig": "{% set mt = '2' %}\n{% set break = false %}\n{% for card in cards if not break %}\n  {% if card.tabType == 'text' %}\n    {% set mt = '5' %}\n  {% endif %}\n  {% if card.tabType == 'image' %}\n    {% set mt = '7' %}\n    {% set break = true %}\n  {% endif %}\n{% endfor %}\n\n<div class=\"row glo-pricing-card-row flex-column justify-content-center align-content-center flex-md-row flex-md-wrap flex-lg-row flex-lg-wrap flex-xl-row flex-xl-wrap\">\n  {% for card in cards[:3] %}\n    <div class=\"card glo-pricing-card{% if not loop.last %} mb-2 mb-lg-0{% else %} mb-0{% endif %}{% if card.tabType == 'image' %} mt-7{% elseif card.tabType == 'text' %} mt-5{% else %} mt-2{% endif %} mt-lg-{{ mt }} col-12{% if cards|length == 1 %} col-lg-6{% else %} col-lg-4{% endif %}{% if card.selected %} glo-selected{% if card.badge %} glo-badge{% endif %}{% endif %}\">\n      <div>\n        {% if card.selected and card.badge %}<p class=\"card-badge caption-3\">{{ card.badge|raw }}</p>{% endif %}\n        {% if card.tabTitle and card.tabType != 'off' %}\n          <div class=\"card-badge-top content-4{% if card.tabType == 'image' %} full-width{% endif %}\">\n            {% if card.tabType == 'text' %}\n              <p class=\"text-center my-0 card-badge-top-text\">{{ card.tabTitle|raw }}</p>\n            {% endif %}\n            {% if card.tabSubtitle and card.tabAttorney and card.tabType == 'image' %}\n              <img src=\"{{ card.tabAttorney }}\" loading=\"lazy\" alt=\"\"/>\n              <div class=\"my-0 card-badge-top-with-image\">{{ card.tabTitle|raw }}</div>\n              <div class=\"mt-1 mb-0 card-badge-top-secondary\">\n                <div class=\"card-badge-top-secondary--text d-inline-block\">{{ card.tabSubtitle|raw }}</div>\n              </div>\n            {% endif %}\n          </div>\n        {% endif %}\n        <div class=\"card-top\">\n          <div class=\"glo-header w-100 d-table\">\n            <div class=\"d-table-cell align-middle w-100 text-center text-md-left text-lg-center\">\n              <h2 class=\"highlight-3 m-0 mb-2\">{{ card.title|raw }}</h2>\n              {% if card.subtitle %}\n                <p class=\"glo-subtitle highlight-2 content-3 m-0\">\n                  {% if card.preCaption %}<span class=\"glo-caption glo-pre-caption caption-1\">&nbsp;{{ card.preCaption|raw }}</span>{% endif %}\n                  <span class=\"pricing-wrapper\">{{ card.subtitle|raw }}</span>\n                  {% if card.caption %}<span class=\"glo-caption caption-1\">&nbsp;{{ card.caption|raw }}</span>{% endif %}\n                  {% with {'label': card.featureLabel, 'secondary': card.featureLabelSecondary, 'style': card.featureLabelStyle} %}\n                    {% block featureLabel %}\n                      {% if label %}\n                        <span class=\"badge{% if style %} badge-theme-{{ style }}{% endif %}\">\n                          {{ label|raw }}\n                          {% if secondary %}<span>{{ secondary|raw }}</span>{% endif %}\n                        </span>\n                      {% endif %}\n                    {% endblock %}\n                  {% endwith %}\n                  {% if card.captionBottom %}\n                    <span class=\"glo-caption caption-1 caption-bottom\">{{ card.captionBottom|raw }}</span>\n                  {% endif %}\n                </p>\n              {% endif %}\n            </div>\n          </div>\n          {% if card.mainContent %}<div class=\"glo-section content-3 text-center text-md-left text-lg-center mt-2\">{{ card.mainContent|raw }}</div>{% endif %}\n        </div>\n        {% if card.mainBtnText and card.mainBtnAction %}\n          <div class=\"glo-section d-table w-100 mt-4 d-md-none\">\n            {% block mainBtnBlock %}\n              <div class=\"d-table-cell align-middle\">\n                <a\n                  href=\"{{ card.mainBtnAction }}\"\n                  {% if '//' in card.mainBtnAction %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                  {% if card.mainBtnTracking %}data-ga-label=\"{{ card.mainBtnTracking }}\"{% endif %}\n                  class=\"btn btn{% if card.mainBtnModel == 'outline' %}-outline{% endif %}-action w-100 w-md-auto w-lg-100 {{card.mainBtnClasses}}\"\n                  {{card.mainBtnAttributes|raw}}\n                >{{ card.mainBtnText|raw }}</a>\n              </div>\n            {% endblock %}\n          </div>\n        {% endif %}\n        {% if card.extraLinkType != 'modal' and ((card.extraList|length > 0 and card.extraListIcon) or card.extraContent) %}\n          <div class=\"glo-size-18 pt-2 text-center d-md-none\">\n            <a\n              href=\"#collapse{{ seed }}-{{ loop.index }}\"\n              data-toggle=\"collapse\"\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse{{ seed }}-{{ loop.index }}\"\n              class=\"glo-toggle glo-link-action-plain collapsed\">\n              <span class=\"glo-inline-a\">View</span><span class=\"glo-inline-b\" aria-hidden=\"true\">Hide</span> features<span class=\"glo-icon icon-chevron\"\n              ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                <g fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\">\n                  <polyline points=\"4 1 9 6.49960717 4 12\" transform=\"rotate(90) translate(0, -13)\"></polyline>\n                </g>\n              </svg></span>\n            </a>\n          </div>\n        {% endif %}\n        {% with {'validation': not ((card.extraList|length > 0 and card.extraListIcon) or card.extraContent) or card.extraLinkType == 'modal', 'extraClasses': 'glo-size-18 text-center pt-2 d-md-none'} %}\n          {% block extraLinkBlock %}\n            {% if validation %}\n              <div class=\"{{ extraClasses }}\">\n                {% if card.extraLinkType == 'modal' %}\n                  <a\n                    id=\"modal-{{ loop.index }}-trigger\"\n                    href=\"#{{ card.extraLinkAction }}\"\n                    data-toggle=\"modal\"\n                    data-target=\"#{{ card.extraLinkAction|escape('html') }}\"\n                    {% if card.extraLinkTabModalDisable %}\n                      data-not-tab=\"true\"\n                    {% else %}\n                      onclick=\"[].slice.call(document.querySelectorAll('#modal .nav-tabs a'))[{{ loop.index - 1 }}].click()\"\n                    {% endif %}\n                    {% if card.extraLinkTracking %}data-ga-label=\"{{ card.extraLinkTracking }}\"{% endif %}\n                    class=\"glo-link-action-plain {{card.extraLinkClasses}}\"\n                    {{ card.extraLinkAttributes|raw }}\n                  >\n                    {{ card.extraLinkText|raw }}{% if card.extraLinkIcon %}<span class=\"btn btn-dot btn-action btn-xs\" title=\"info\"\n                      ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                        <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                      </svg>\n                    </span>{% endif %}\n                  </a>\n                {% else %}\n                  <a\n                    href=\"{{ card.extraLinkAction }}\"\n                    {% if '//' in card.extraLinkAction %} target=\"_blank\" rel=\"noopener\"{% endif %}\n                    {% if card.extraLinkTracking %}data-ga-label=\"{{ card.extraLinkTracking }}\"{% endif %}\n                    class=\"glo-link-action-plain {{card.extraLinkClasses}}\"\n                    {{card.extraLinkAttributes|raw}}\n                  >\n                    {{ card.extraLinkText|raw }}{% if card.extraLinkIcon %}<span class=\"btn btn-dot btn-action btn-xs\" title=\"info\"\n                      ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                        <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                      </svg>\n                    </span>{% endif %}\n                  </a>\n                {% endif %}\n              </div>\n            {% endif %}\n          {% endblock %}\n        {% endwith %}\n        <div\n          id=\"collapse{{ seed }}-{{ loop.index }}\"\n          class=\"glo-section content-3 collapse d-md-flex{% if (card.extraList|length > 0 and card.extraListIcon) or card.extraContent %} glo-divider{% else %} glo-divider-empty{% endif %}\"\n        >\n          {% if card.extraContent %}<div{% if card.extraList|length == 0 %} class=\"mb-4\"{% endif %}>{{ card.extraContent|raw }}</div>{% endif %}\n          {% if card.extraList|length > 0 and card.extraListIcon %}\n            <ul class=\"glo-list-{{ card.extraListIcon }}\">\n              {% for item in card.extraList %}\n                <li>\n                  {% with {'label': item.contentFeatureLabel, 'secondary': item.contentFeatureLabelSecondary, 'style': item.contentFeatureLabelStyle} %}\n                    {{ block('featureLabel') }}\n                    {% if label and item.content %}<br/>{% endif %}\n                  {% endwith %}\n                  {% if item.content %}{{ item.content|raw }}{% endif %}\n                  {% if item.contentPopoverText %}\n                    <a\n                      tabindex=\"0\"\n                      data-trigger=\"focus\"\n                      data-toggle=\"popover\"\n                      data-placement=\"bottom\"\n                      data-offset=\"-8px, 8px\"\n                      data-html=\"true\"\n                      data-container=\"body\"\n                      data-content=\"{{ item.contentPopoverText }}\"\n                      class=\"btn btn-dot btn-xs\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                        <use style=\"color: #fff;\" xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                      </svg>\n                    </a>\n                  {% endif %}\n                </li>\n              {% endfor %}\n            </ul>\n          {% endif %}\n          {% if card.mainBtnAction and card.mainBtnText %}\n            <div class=\"bottom-btn glo-section mt-4 w-100 w-md-auto w-lg-100 text-center text-md-left text-lg-center d-none d-md-flex\">\n              {{ block('mainBtnBlock') }}\n            </div>\n          {% endif %}\n          {% if card.extraLinkType != 'modal' %}\n            <div class=\"glo-section mt-2 w-100 w-md-auto w-lg-100 text-center text-md-left text-lg-center d-table\">\n              <div class=\"d-table-cell align-middle w-100 w-md-auto w-lg-100 glo-size-16\">\n                {% with {'validation': true, 'extraClasses': ''} %}\n                  {{ block('extraLinkBlock') }}\n                {% endwith %}\n              </div>\n            </div>\n          {% endif %}\n        </div>\n      </div>\n    </div>\n  {% endfor %}\n</div>\n{% if footerLink and footerText %}\n  <div class=\"pricing-footer{% if isFooterHiddenMobile %} d-none d-md-flex{% else %} d-flex{% endif %} align-items-center justify-content-center mt-4\">\n    <a class=\"{{ footerClasses }}\" {{ footerAttributes|raw }}{% if footerTracking %} data-ga-label=\"{{ footerTracking }}\"{% endif %} href=\"{{ footerLink }}\">{{ footerText }}</a>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <g stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\">\n        <path d=\"M11.2873263,2.80761184 L2.09493812,12 L11.2873263,21.1923882 M22.5,12 L2.09493812,12\" transform=\"translate(0, 24) rotate(-90)\"></path>\n      </g>\n    </svg>\n  </div>\n{% endif %}\n",
      "schema": {
        "key": "pricingCard",
        "title": "Pricing Card",
        "description": "Pricing Card fragment: product item detail comparison cards.",
        "properties": {
          "cards": {
            "title": "Cards",
            "description": "Pricing cards fragments. Will only accept between 1 and 3 cards",
            "type": "array",
            "maxItems": 3,
            "items": {
              "title": "Card",
              "type": "object",
              "properties": {
                "selected": {
                  "title": "Header: card selected",
                  "description": "Header section: Display this card as selected with a heavy border? The first card is generally selected and may have a badge label.",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "badge": {
                  "title": "Header: card badge",
                  "description": "Header section: Name for the card badge if it is to display one. Will only be applied to a selected card.",
                  "type": "string",
                  "format": "markdown"
                },
                "tabType": {
                  "title": "Header: card tab on top, display type",
                  "description": "Header section: Card tab that goes with or without image on top of card",
                  "type": "string",
                  "enum": [
                    "text",
                    "image",
                    "off"
                  ],
                  "default": "text"
                },
                "tabTitle": {
                  "title": "Header: card tab on top, main title",
                  "description": "Header section: Title for card tab",
                  "type": "string",
                  "format": "markdown"
                },
                "tabSubtitle": {
                  "title": "Header: card tab on top, subtitle (only for Image tab type)",
                  "description": "Header section: Subtitle for card tab",
                  "type": "string",
                  "format": "markdown",
                  "default": "<span>Kelly,</span> 8 years of experience"
                },
                "tabAttorney": {
                  "title": "Header: card tab on top, small attorney assist image",
                  "description": "Header section: Attorney image for card tab",
                  "type": "string",
                  "format": "markdown"
                },
                "title": {
                  "title": "Header: card title",
                  "description": "Header section: Title or product name for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "preCaption": {
                  "title": "Header: subtitle pre caption",
                  "description": "Header section: Caption statement to precede the subtitle, such as a descriptor.",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitle": {
                  "title": "Header: subtitle",
                  "description": "Header section: Card subtitle if any.",
                  "type": "string",
                  "format": "markdown"
                },
                "caption": {
                  "title": "Header: subtitle caption",
                  "description": "Header section: Caption statement to follow the subtitle, such as a descriptor.",
                  "type": "string",
                  "format": "markdown"
                },
                "captionBottom": {
                  "title": "Header: second subtitle caption",
                  "description": "Header section: Second caption statement to be below the featureTag",
                  "type": "string",
                  "format": "markdown"
                },
                "featureLabel": {
                  "title": "Header: feature label",
                  "description": "Header section: Optional feature label",
                  "type": "string",
                  "format": "markdown"
                },
                "featureLabelSecondary": {
                  "title": "Header: feature label secondary text",
                  "description": "Header section: Optional secondary text for feature label",
                  "type": "string",
                  "format": "markdown"
                },
                "featureLabelStyle": {
                  "title": "Header: feature label style",
                  "description": "Header section: Option style to use for the feature label",
                  "type": "string",
                  "enum": [
                    "light",
                    "teal",
                    "dark"
                  ],
                  "default": "light"
                },
                "mainContent": {
                  "title": "Main: content",
                  "description": "Main section: Main content or message for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "mainBtnText": {
                  "title": "Main: button text",
                  "description": "Main section: Text for the button to display below the main content section.",
                  "type": "string",
                  "format": "markdown"
                },
                "mainBtnAction": {
                  "title": "Main: button action",
                  "description": "Main section: If \"Button action type\" of \"link\" is used, provide the URL. For a Form action, provide the data for the field.",
                  "type": "string",
                  "format": "text"
                },
                "mainBtnModel": {
                  "title": "Main: button model",
                  "description": "Main section: Button design model to use in the main content section.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "mainBtnTracking": {
                  "title": "Main: button tracking label",
                  "description": "Main: Button tracking name",
                  "type": "string",
                  "format": "text"
                },
                "mainBtnClasses": {
                  "title": "Main: button custom classes",
                  "description": "Main section: Button additional classes for styling overrides.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "mainBtnAttributes": {
                  "title": "Main: button additional attributes",
                  "description": "Main section: Button additional HTML attributes when needed for things like data or tracking.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraContent": {
                  "title": "Extra: content",
                  "description": "Extra section: Content or message section to display in the extra details section.",
                  "type": "string",
                  "format": "markdown"
                },
                "extraListIcon": {
                  "title": "Extra: list icon",
                  "description": "Extra section: If using a list, choose the icon to use as a bullet point in the extra content section.",
                  "type": "string",
                  "enum": [
                    "check",
                    "bullet"
                  ]
                },
                "extraList": {
                  "title": "Extra: list items",
                  "description": "Extra section: Content for each list item in the extra section.",
                  "type": "array",
                  "items": {
                    "title": "Item",
                    "type": "object",
                    "properties": {
                      "content": {
                        "title": "Extra item: list item content",
                        "description": "Extra item section: Content for this list item.",
                        "type": "string",
                        "format": "markdown"
                      },
                      "contentFeatureLabel": {
                        "title": "Extra item: feature label",
                        "description": "Extra item section: Optional feature label",
                        "type": "string",
                        "format": "markdown"
                      },
                      "contentFeatureLabelSecondary": {
                        "title": "Extra item: feature label secondary text",
                        "description": "Extra item section: Optional secondary text for feature label",
                        "type": "string",
                        "format": "markdown"
                      },
                      "contentFeatureLabelStyle": {
                        "title": "Extra item: feature label style",
                        "description": "Extra item section: Option style to use for the feature label",
                        "type": "string",
                        "enum": [
                          "light",
                          "teal",
                          "dark"
                        ],
                        "default": "light"
                      },
                      "contentPopoverText": {
                        "title": "Extra item: popover text",
                        "description": "Extra item section: Optional popover text to appear in info icon",
                        "type": "string",
                        "format": "markdown"
                      }
                    }
                  }
                },
                "extraLinkText": {
                  "title": "Extra: link text",
                  "description": "Extra section: Text for the link to display in the extra section.",
                  "type": "string",
                  "format": "markdown"
                },
                "extraLinkType": {
                  "title": "Extra: link type",
                  "description": "Extra section: Provide the action type for the optional link. Choose if this link should call a modal or open a web page. NOTE: Modals are provided external of this fragment.",
                  "type": "string",
                  "enum": [
                    "link",
                    "modal"
                  ]
                },
                "extraLinkTabModalDisable": {
                  "title": "Extra: disable 'tab modal' integration",
                  "description": "Extra section: Check this option if using a specific modal integration that is not using the Tab Modal fragment.",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "extraLinkAction": {
                  "title": "Extra: link action",
                  "description": "Extra section: Provide the action for the optional link. If modal, give the modal ID. If link, give the URL.",
                  "type": "string",
                  "format": "text"
                },
                "extraLinkIcon": {
                  "title": "Extra: link info icon",
                  "description": "Extra section: If the link text and action were provided. Should it contain an \"info\" icon?",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "extraLinkTracking": {
                  "title": "Extra: link tracking label",
                  "description": "Extra section: Tracking attribute for extra link.",
                  "type": "string",
                  "format": "text"
                },
                "extraLinkClasses": {
                  "title": "Extra: link custom classes",
                  "description": "Extra section: Link additional classes for styling overrides.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "extraLinkAttributes": {
                  "title": "Extra: link additional attributes",
                  "description": "Extra section: Link additional HTML attributes when needed for things like data or tracking.",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              }
            },
            "default": [
              {
                "selected": false,
                "mainBtnModel": "[default]",
                "extraListIcon": "check",
                "extraList": [],
                "extraLinkType": "link",
                "extraLinkIcon": false,
                "extraLinkTabModalDisable": false,
                "footerType": "off",
                "footerIcon": "off"
              }
            ]
          },
          "footerText": {
            "title": "Footer: footer text",
            "description": "Footer: Text to be displayed in the footer section",
            "type": "string"
          },
          "footerLink": {
            "title": "Footer: footer link href",
            "description": "Footer: URL to appear in the bottom link",
            "type": "string"
          },
          "footerTracking": {
            "title": "Footer: footer tracking",
            "description": "Footer: link tracking name. If item is provided, class 'j-ga-hook' will be added automatically",
            "type": "string"
          },
          "footerClasses": {
            "title": "Footer: link/text custom classes",
            "description": "Footer: Additional classes for styling overrides and tracking",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "footerAttributes": {
            "title": "Footer: link/text additional attributes",
            "description": "Footer: Additional HTML attributes when needed for things like data or tracking",
            "type": "string",
            "format": "text",
            "options": {
              "hidden": true
            }
          },
          "isFooterHiddenMobile": {
            "title": "Footer: hide on mobile?",
            "description": "Footer: decide whether hide or shown footer link on mobile",
            "type": "boolean",
            "format": "checkbox"
          }
        }
      }
    },
    "progressBar": {
      "twig": "{%\n  set sectionsA = (sections matches '/^\\d+$/') ? sections : 1\n%}{%\n  set sectionsVal = (sectionsA < 1) ? 1 : sectionsA\n\n%}{%\n\n  set sectionA = (section matches '/^\\d+$/') ? section : 1\n%}{%\n  set sectionB = (sectionA > sectionsA) ? sectionsA : sectionA\n%}{%\n  set sectionVal = (sectionB < 1) ? 1 : sectionB\n\n%}{%\n\n  set questionsA = (questions matches '/^\\d+$/') ? questions : 1\n%}{%\n  set questionsVal = (questionsA < 1) ? 1 : questionsA\n\n%}{%\n\n  set questionA = (question matches '/^\\d+$/') ? question : 1\n%}{%\n  set questionB = (questionA > questionsA) ? questionsA : questionA\n%}{%\n  set questionVal = (questionB < 1) ? 1 : questionB\n\n%}{%\n  set statusVal = 'question ' ~ questionVal ~ ' of ' ~ questionsVal ~\n    ((sectionsVal > 1) ? ' in section ' ~ sectionVal ~ ' of ' ~ sectionsVal : '')\n%}<div class=\"glo-progress-bar{% if rounded %} progress-rounded{% endif %} d-inline-block w-100\">\n  <ul class=\"d-flex flex-row w-100\">\n    {% if sectionsVal > 1 and sectionVal > 1 %}\n      {% for i in range(1, sectionVal - 1) %}<li aria-hidden=\"true\"><div class=\"is-done\"></div></li>{% endfor %}\n    {% endif %}\n    <li class=\"progress{% if rounded %} progress-rounded{% endif %} flex-fill\">\n      <progress tabindex=\"0\" max=\"{{questions}}\" value=\"{{question}}\" aria-label=\"{{statusVal}}\"></progress>\n      <span>{{statusVal}}</span>\n    </li>\n    {% if sectionsVal > 1 and sectionVal < sectionsVal %}\n      {% for i in range(1, sectionsVal - sectionVal) %}<li aria-hidden=\"true\"><div></div></li>{% endfor %}\n    {% endif %}\n  </ul>\n</div>\n",
      "schema": {
        "key": "progressBar",
        "title": "Progress Bar",
        "description": "Progress Bar fragment",
        "properties": {
          "sections": {
            "title": "Total sections",
            "description": "Total sections for this process.",
            "type": "string",
            "format": "number",
            "default": 6
          },
          "section": {
            "title": "Current section",
            "description": "Current section in use.",
            "type": "string",
            "format": "number",
            "default": 2
          },
          "questions": {
            "title": "Section questions",
            "description": "Total questions for this section.",
            "type": "string",
            "format": "number",
            "default": 5
          },
          "question": {
            "title": "Current question",
            "description": "Current question in this section.",
            "type": "string",
            "format": "number",
            "default": 3
          },
          "rounded": {
            "title": "Rounded?",
            "description": "Should the bar be rounded.",
            "type": "boolean",
            "format": "checkbox",
            "default": true
          }
        },
        "required": [
          "questions",
          "question"
        ]
      }
    },
    "secondaryNavigation": {
      "twig": "<nav id=\"glo-secondary-navigation\" class=\"glo-secondary-navigation navbar navbar-expand-xl\">\n  {% set contactUsPartial %}\n    {% if phoneNumber %}\n      {% if phoneNumber matches '/^[0-9]{10}$/' %}\n        {% set firstChain = phoneNumber|slice(0, 3) %}\n        {% set secondChain = phoneNumber|slice(3, 3) %}\n        {% set thirdChain = phoneNumber|slice(6, 4) %}\n        {% set formattedNumberPhone = \"(\" ~ firstChain ~ \") \" ~ secondChain ~ \"-\" ~ thirdChain %}\n      {% else %}\n        {% set formattedNumberPhone = phoneNumber %}\n      {% endif %}\n      <a class=\"get-started-contact-us mr-3 mr-md-9\" href=\"tel:{{ phoneNumber }}\">\n        <img class=\"ml-2 mr-md-3\" src=\"/resources/img/lzr/icons/general/phone.svg\" loading=\"lazy\" alt=\"Call us\" height=\"24\" width=\"24\">\n        <span class=\"content-4 d-none d-md-inline\">{{ formattedNumberPhone }}</span>\n      </a>\n    {% endif %}\n  {% endset %}\n  <div class=\"container glo-secondary-navigation-wrapper\">\n    <div class=\"navbar-product-name text-button\">\n      <span class=\"product-name-wrapper\">{{ productName }}</span>\n      <svg id=\"trigger-nav-items-arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n        <polyline fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" transform=\"translate(15.000000, 6.000000) rotate(-270.000000)\" points=\"3.5 -2.5 8.5 2.99960717 3.5 8.5\"></polyline>\n      </svg>\n    </div>\n    <div class=\"get-started-mobile\">\n      {{ contactUsPartial }}\n      {% if ctaButtonLink and ctaButtonText %}\n        <a\n          href=\"{{ ctaButtonLink }}\"\n          {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n          class=\"cta btn btn-sm btn-action {{ customClasses}}\"\n          {{ attributes|raw }}\n        ><span>{{ ctaButtonText }}</span></a>\n      {% endif %}\n    </div>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        {% if menuItems %}\n          {% for menuItem in menuItems %}\n            <li class=\"nav-item text-nowrap{% if menuItem.isReviewsMenuItem %} nav-item-reviews{% endif %}\">\n              <a\n                href=\"#{{ menuItem.targetId }}\"\n                title=\"{{ menuItem.menuText|escape('html') }}\"\n                {% if menuItem.tracking %}data-ga-label=\"{{ menuItem.tracking }}\"{% endif %}\n                class=\"nav-link text-button {{ menuItem.customClasses }}\"\n                {{ menuItem.attributes|raw}}\n              >{{ menuItem.menuText }}</a>\n            </li>\n          {% endfor %}\n        {% endif %}\n      </ul>\n    </div>\n    <div class=\"get-started-desktop-xl text-nowrap\">\n      {{ contactUsPartial }}\n      {% if ctaButtonLink and ctaButtonText %}\n        <a\n          href=\"{{ ctaButtonLink }}\"\n          {% if tracking %}data-ga-label=\"{{ tracking }}\"{% endif %}\n          class=\"cta btn btn-action {{ customClasses }}\"\n          {{ attributes|raw }}\n        ><span>{{ ctaButtonText }}</span></a>\n      {% endif %}\n    </div>\n  </div>\n</nav>\n",
      "schema": {
        "key": "secondaryNavigation",
        "title": "Secondary Navigation",
        "description": "Secondary Navigation fragment",
        "properties": {
          "productName": {
            "title": "Product name",
            "description": "The name of the product",
            "type": "string",
            "format": "text"
          },
          "menuItems": {
            "title": "Menu items",
            "description": "List of menu items",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "menuText": {
                  "title": "Menu text",
                  "description": "Text displayed on secondary navigation",
                  "type": "string",
                  "format": "text"
                },
                "targetId": {
                  "title": "Section Target ID",
                  "description": "HTML element \"id\" attribute",
                  "type": "string",
                  "format": "text"
                },
                "isReviewsMenuItem": {
                  "title": "Is reviews menu item",
                  "description": "Boolean indicator of reviews menu item, hidden if Engagement cookie is not present",
                  "type": "boolean",
                  "format": "checkbox"
                },
                "tracking": {
                  "title": "Tracking label",
                  "type": "string",
                  "format": "text"
                },
                "customClasses": {
                  "title": "Menu item custom classes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                },
                "attributes": {
                  "title": "Menu item additional attributes",
                  "type": "string",
                  "format": "text",
                  "options": {
                    "hidden": true
                  }
                }
              },
              "required": [
                "menuText",
                "targetId"
              ]
            },
            "default": [
              {
                "isReviewsMenuItem": false
              }
            ]
          },
          "ctaButtonText": {
            "title": "CTA button text",
            "description": "Text to be displayed on CTA button",
            "type": "string",
            "format": "text"
          },
          "ctaButtonLink": {
            "title": "CTA button link",
            "description": "URL for product's CTA Button link",
            "type": "string",
            "format": "text"
          },
          "tracking": {
            "title": "CTA tracking label",
            "type": "string",
            "format": "text"
          },
          "customClasses": {
            "title": "CTA button custom classes",
            "type": "string",
            "format": "text"
          },
          "attributes": {
            "title": "CTA button additional attributes",
            "type": "string",
            "format": "text"
          },
          "phoneNumber": {
            "title": "Phone number",
            "description": "[optional] Add phone number to sticky header. Must be 10 digits (0-9), no other characters.",
            "type": "string",
            "format": "text"
          }
        },
        "required": [
          "productName",
          "menuItems"
        ]
      }
    },
    "cardSolidBackground": {
      "twig": "<div class=\"glo-card-solid-background row\">\n  {% set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex %}\n  {% set index = (indexA < 6) ? indexA : 6 %}{# limit header level: 6 #}\n  {% set bgClass = (backgroundColor == 'white') ? 'card-color-white' : 'card-color-default' %}\n  {% set isImageCard = cardType == \"image\" %}\n  {% set cardColumnClasses = isImageCard ? \"col-12 col-md-6 col-lg-4\" : \"col-12 col-lg-4\" %}\n  <div class=\"glo-slider\">\n    {% for card in cards %}\n      {% if isImageCard %}\n        <div class=\"glo-card glo-card-{{ cardType }} {{ cardColumnClasses }} d-flex align-items-stretch\">\n          <figure class=\"glo-card-body {{ bgClass }}\">\n            <div class=\"glo-img\"><img src=\"{{ card.image }}\" loading=\"lazy\" alt=\"{{ card.imageAlt|escape('html') }}\"></div>\n            <figcaption class=\"p-9\">\n              <h{{ index }} class=\"glo-card-title highlight-2 m-0\">{{ card.title|raw }}</h{{ index }}>\n              <blockquote class=\"content-3 mt-4\">\n                {{ card.description }}\n                {% if card.caption %}<address class=\"content-3\">{{ card.caption|raw }}</address>{% endif %}\n              </blockquote>\n            </figcaption>\n          </figure>\n        </div>\n      {% else %}\n        <div class=\"glo-card glo-card-{{ cardType }} {{ cardColumnClasses }} d-flex align-items-stretch\">\n          <blockquote class=\"glo-card-body content-2 p-9 {{ bgClass }}\">\n            <div class=\"mb-4\" aria-hidden=\"true\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 41 35\">\n                <path d=\"M31.68,34.4192 C34.24,34.4192 36.336,33.4432 37.968,31.4912 C39.6,29.5392 40.416,27.3792 40.416,25.0112 C40.416,22.1952 39.712,20.1312 38.304,18.8192 C36.896,17.5072 35.264,16.8512 33.408,16.8512 C33.088,16.8512 32.816,16.8992 32.592,16.9952 C32.368,17.0912 32.16,17.1392 31.968,17.1392 C31.712,17.1392 31.536,16.9792 31.44,16.6592 C31.344,16.3392 31.296,15.7952 31.296,15.0272 C31.296,12.4672 32.16,10.1792 33.888,8.16320003 C35.616,6.14720003 37.408,4.56320003 39.264,3.41120003 C39.456,3.34720003 39.44,3.0432 39.216,2.4992 C38.992,1.9552 38.784,1.5552 38.592,1.2992 C38.4,1.0432 38.08,0.7392 37.632,0.3872 C37.184,0.0352 36.864,-0.0768 36.672,0.0512 C32.128,2.6752 28.576,5.82720003 26.016,9.50720003 C23.456,13.1872 22.176,17.4592 22.176,22.3232 C22.176,25.7792 23.04,28.6592 24.768,30.9632 C26.496,33.2672 28.8,34.4192 31.68,34.4192 Z M9.504,34.4192 C12.064,34.4192 14.16,33.4432 15.792,31.4912 C17.424,29.5392 18.24,27.3792 18.24,25.0112 C18.24,22.1952 17.536,20.1312 16.128,18.8192 C14.72,17.5072 13.088,16.8512 11.232,16.8512 C10.912,16.8512 10.64,16.8992 10.416,16.9952 C10.192,17.0912 9.984,17.1392 9.792,17.1392 C9.536,17.1392 9.36,16.9792 9.264,16.6592 C9.168,16.3392 9.12,15.7952 9.12,15.0272 C9.12,12.4672 9.984,10.1792 11.712,8.16320003 C13.44,6.14720003 15.232,4.56320003 17.088,3.41120003 C17.28,3.34720003 17.264,3.0432 17.04,2.4992 C16.816,1.9552 16.608,1.5552 16.416,1.2992 C16.224,1.0432 15.904,0.7392 15.456,0.3872 C15.008,0.0352 14.688,-0.0768 14.496,0.0512 C9.952,2.6752 6.4,5.82720003 3.84,9.50720003 C1.28,13.1872 0,17.4592 0,22.3232 C0,25.7792 0.864,28.6592 2.592,30.9632 C4.32,33.2672 6.624,34.4192 9.504,34.4192 Z\" fill=\"currentColor\"></path>\n              </svg>\n            </div>\n            {{ card.description|raw }}\n            {% if card.subtitle %}<p class=\"mt-4 mb-0\"><strong class=\"subtitle-1\">{{ card.subtitle|raw }}</strong></p>{% endif %}\n            {% if card.caption %}<address class=\"content-3\">{{ card.caption|raw }}</address>{% endif %}\n          </blockquote>\n        </div>\n      {% endif %}\n    {% endfor %}\n  </div>\n  <div class=\"glo-card-dots\"></div>\n</div>\n",
      "schema": {
        "key": "cardSolidBackground",
        "title": "Card Solid Background",
        "description": "Card Solid Background fragment",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "cardType": {
            "title": "Cards type",
            "description": "The type of card layout we are working with: image or text.",
            "type": "string",
            "enum": [
              "image",
              "text"
            ],
            "default": "image"
          },
          "backgroundColor": {
            "title": "Background color",
            "description": "Background color",
            "type": "string",
            "enum": [
              "default",
              "white"
            ],
            "default": "default"
          },
          "cards": {
            "title": "Cards",
            "description": "List of cards",
            "type": "array",
            "items": {
              "title": "Card",
              "type": "object",
              "properties": {
                "image": {
                  "title": "Image",
                  "description": "Default image should be of the ratio 1x1.",
                  "type": "string",
                  "format": "text"
                },
                "imageAlt": {
                  "title": "Alt text",
                  "description": "Alt text for the above image.",
                  "type": "string",
                  "format": "text"
                },
                "title": {
                  "title": "Image card: title",
                  "description": "The name of the title.",
                  "type": "string",
                  "format": "markdown"
                },
                "description": {
                  "title": "Description",
                  "description": "Description or short info about the card",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitle": {
                  "title": "Text card: subtitle",
                  "description": "It's only shown if there are no images provided.",
                  "type": "string",
                  "format": "markdown"
                },
                "caption": {
                  "title": "Caption",
                  "description": "Related information",
                  "type": "string",
                  "format": "textarea"
                }
              }
            },
            "default": [
              {}
            ]
          }
        },
        "required": []
      }
    },
    "table": {
      "twig": "<div\n  class=\"glo-table glo-table--static\"\n  data-header=\"{{ header|json_encode|escape('html') }}\"\n  data-items=\"{{ items|json_encode|escape('html') }}\"\n  data-footer=\"{{ footer|json_encode|escape('html') }}\"\n  data-autofitColumnMode=\"{{ autofitColumnMode|json_encode|escape('html') }}\"\n>\n  <!-- mobile header -->\n  {% set mobileHeaderTemplate %}\n    <form class=\"glo-table--header-mobile row d-md-none{{ header.categories.length < 3 ? ' d-none' }}\">\n      {% for categoryIndex in 1..2 %}\n        <div class=\"col-6 glo-table--header-mobile-column\">\n          <p class=\"form form-select p-0\">\n            <select\n              name=\"category-dropdown-{{ categoryIndex }}\"\n              aria-label=\"Category {{ categoryIndex }}\"\n              class=\"form-control pt-0 pr-9 glo-table--padding-left-8 glo-table--font-weight-normal glo-table--header-mobile-select\"\n              data-category-index=\"{{ categoryIndex }}\"\n              data-unit--header-category-dropdown>\n              {% for category in header.categories %}\n                <option value=\"{{ loop.index0 }}\">{{ category.text }}</option>\n              {% endfor %}\n            </select>\n            <span\n              class=\"glo-table--form-arrow-icon form-svg d-flex justify-content-center align-items-center p-0 w-auto px-2 h-100 glo-table--top-0 bg-transparent\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 9\" width=\"14px\" height=\"9px\">\n                <polyline\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-width=\"3\"\n                  transform=\"translate(7, 4) rotate(-270.000000) translate(-6, -3)\"\n                  points=\"3.5 -2.5 8.5 2.99960717 3.5 8.5\">\n                </polyline>\n              </svg>\n            </span>\n          </p>\n        </div>\n      {% endfor %}\n    </form>\n  {% endset %}\n  <div data-js--sticky-header-mobile-trigger></div>\n  <div class=\"glo-table--sticky-header-mobile d-md-none\"\n       data-unit--sticky-header-mobile>\n    <div class=\"container\">\n      {{ mobileHeaderTemplate }}\n    </div>\n  </div>\n  {{ mobileHeaderTemplate }}\n\n  <!-- header row-->\n  {% set headerTemplate %}\n    <div class=\"glo-table--header row mt-md-0 align-items-center{{ header.categories.length > 2 ? ' mt-5' }}\">\n      <div class=\"glo-table--column-description glo-table--header-column\">\n        <div class=\"glo-table--header-text\"\n             data-unit--header-text>\n          {{ header.text }}\n        </div>\n      </div>\n      {% for category in header.categories %}\n        <div\n          class=\"d-none d-md-block subtitle-1 glo-table--column-category glo-table--header-column{% if iconOnlyMode == true %} text-center{% endif %}\"\n          data-unit--header-category>\n          {{ category.text }}\n        </div>\n      {% endfor %}\n    </div>\n  {% endset %}\n  <div data-js--sticky-header-trigger></div>\n  <div class=\"glo-table--sticky-header d-none d-md-block\" data-unit--sticky-header>\n    <div class=\"container\">\n      {{ headerTemplate }}\n    </div>\n  </div>\n  {{ headerTemplate }}\n\n  <!-- horizontal line -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"glo-table--first-row-border-top w-100 mt-4\" data-unit--header-horizontal-line></div>\n    </div>\n  </div>\n\n  <!-- main rows-->\n  {% for itemIndex, item in items %}\n    <div class=\"row glo-table--body\">\n      {% if item.isSubheader %}\n        <div class=\"col-12 glo-table--body-title glo-table--body-title--subheader\">\n          <div class=\"highlight-2 mt-5\">\n            {{ item.title }}\n          </div>\n          <div class=\"glo-table--first-row-border-top w-100 mt-4\"></div>\n        </div>\n      {% else %}\n        <div class=\"col-12 mt-9 d-md-flex glo-table--column-description glo-table--body-description\">\n          <div class=\"glo-table--body-description-wrapper{% if item.enableToggle and not item.preventAutoCollapseToggle %} glo-table--body-description-toggle--active{% endif %}\">\n            <p>\n              <a\n                class=\"glo-table--body-description-title glo-table--body-title {{ item.titleStyle == 'title' ? 'title-2': 'subtitle-1' }}{% if item.enableToggle %} glo-table--body-description-toggle glo-link-plain{% endif %}\"\n                {% if item.enableToggle %}\n                  role=\"button\" aria-pressed=\"false\" tabindex=\"0\"\n                  data-js--trigger-item-toggle=\"{{ itemIndex }}\"\n                  data-unit--list-item-description--toggle\n                {% else %}\n                  data-unit--list-item-description\n                {% endif %}\n                data-unit--list-item-title\n              >\n                <span class=\"float-right ml-2 ml-md-0 float-md-left mr-md-2 glo-table--toggle-icon user-select-none{% if not item.enableToggle %} d-none{% endif %}\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 9\" width=\"14px\" height=\"9px\" class=\"m-0\">\n                    <polyline\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      stroke-linecap=\"round\"\n                      stroke-width=\"3\"\n                      transform=\"rotate(-270.000000) translate(-2, -10)\"\n                      points=\"3.5 -2.5 8.5 2.99960717 3.5 8.5\">\n                    </polyline>\n                  </svg>\n                </span>\n                {{ item.title }}\n              </a>\n            </p>\n\n            <div{% if item.enableToggle %} class=\"pl-md-9\"{% endif %}>\n              <div class=\"glo-table--body-description-text content-3 mt-4 mt-md-1\" data-unit--list-item-description>\n                {{ item.description }}\n              </div>\n              <div class=\"d-none d-md-block\">\n                {% if item.button and item.button.text is not empty %}\n                  <a\n                    data-unit--list-item-button\n                    href=\"{{ item.button.href }}\"\n                    {% if item.button.target is not empty %}target=\"{{ item.button.target }}\" rel=\"noopener\" {% endif %}\n                    {% if item.button.tracking %}data-ga-label=\"{{ item.button.tracking }}\"{% endif %}\n                    class=\"btn btn-action mt-4{% if item.button.customClasses is not empty %} {{ item.button.customClasses }}{% endif %}\"\n                    {{ item.button.attributes|raw }}\n                  >{{ item.button.text }}</a>\n                {% endif %}\n\n                {% if item.subcopy is not empty %}\n                  <div data-unit--list-item-subcopy class=\"caption-1 glo-table--text-muted mt-2\">\n                    {{ item.subcopy }}\n                  </div>\n                {% endif %}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- category items-->\n        {% for categoryIndex, category in header.categories %}\n          {# gloTBC is short for tableBodyCategory #}\n          {% set gloTBC_isCategoryIndex1 = categoryIndex == 0 %}\n          {% set gloTBC_isCategoryIndex2 = categoryIndex == 1 %}\n          {% set gloTBC_order1Class = gloTBC_isCategoryIndex1 ? ' glo-table--order-sm-only-1' : '' %}\n          {% set gloTBC_order2Class = gloTBC_isCategoryIndex2 ? ' glo-table--order-sm-only-2' : '' %}\n          {% set gloTBC_displayClass = (gloTBC_isCategoryIndex1 or gloTBC_isCategoryIndex2) ? ' d-block' : '' %}\n          {% set gloTBC_classes = gloTBC_order1Class ~ gloTBC_order2Class ~ gloTBC_displayClass %}\n\n          <div\n            class=\"col-6 d-none d-md-block mt-9 glo-table--column-category glo-table--body-category{{ gloTBC_classes }}\"\n            data-category-index=\"{{ categoryIndex }}\">\n            {% if not iconOnlyMode %}\n              <div class=\"content-3\">\n                {{ item.categories[loop.index0].text }}\n              </div>\n            {% endif %}\n\n            {% if iconOnlyMode %}\n              <div class=\"h-100 d-flex justify-content-center align-items-center\">\n                {% if item.categories[loop.index0].iconType == 'checkmark' %}\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    width=\"24px\"\n                    height=\"24px\">\n                    <polyline\n                      points=\"2 12 9 18 21 4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"6\">\n                    </polyline>\n                  </svg>\n                {% elseif item.categories[loop.index0].iconType == 'string' %}\n                  <div class=\"text-center content-4\">\n                    {{ item.categories[loop.index0].text }}\n                  </div>\n                {% else %}\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    width=\"24px\"\n                    height=\"24px\">\n                    <line\n                      x1=\"2\"\n                      y1=\"12.5\"\n                      x2=\"22\"\n                      y2=\"12.5\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"1\">\n                    </line>\n                  </svg>\n                {% endif %}\n              </div>\n            {% endif %}\n          </div>\n        {% endfor %}\n\n        {% if loop.last == false %}\n          <div class=\"col-12 order-last\">\n            <div class=\"glo-table--border-top w-100 mt-9\"></div>\n          </div>\n        {% endif %}\n      {% endif %}\n    </div>\n  {% endfor %}\n\n  <!-- footer row-->\n  <div class=\"row glo-table--footer\">\n    <div class=\"col-12 order-first mt-9\">\n      <div class=\"glo-table--border-top w-100\"></div>\n    </div>\n    <div class=\"order-last order-md-first glo-table--column-description{{ footer.text is not empty ? ' mt-9' }}\">\n      <div class=\"glo-table--footer-text {{ footer.captionStyle ? 'caption-1 glo-table--text-muted' : 'content-2' }}\">\n        {{ footer.text|raw }}\n      </div>\n    </div>\n\n    {% for categoryIndex, category in footer.categories %}\n      {# gloTFC is short for tableFooterCategory #}\n      {% set gloTFC_isCategoryIndex1 = categoryIndex == 0 %}\n      {% set gloTFC_isCategoryIndex2 = categoryIndex == 1 %}\n      {% set gloTFC_marginClass = ((category.button.text is not empty) or (category.subcopy is not empty)) ? ' mt-9' : '' %}\n      {% set gloTFC_order1Class = gloTFC_isCategoryIndex1 ? ' glo-table--order-sm-only-1' : '' %}\n      {% set gloTFC_order2Class = gloTFC_isCategoryIndex2 ? ' glo-table--order-sm-only-2' : '' %}\n      {% set gloTFC_displayClass = (gloTFC_isCategoryIndex1 or gloTFC_isCategoryIndex2) ? ' d-block' : '' %}\n      {% set gloTFC_classes = gloTFC_marginClass ~ gloTFC_order1Class ~ gloTFC_order2Class ~ gloTFC_displayClass %}\n\n      <div class=\"col-6 text-center d-none d-md-block glo-table--column-category glo-table--footer-category{{ gloTFC_classes }}\"\n           data-category-index=\"{{ categoryIndex }}\">\n        {% if category.button and category.button.text %}\n          <a href=\"{{ category.button.href }}\"\n            {% if category.button.target is not empty %}\n              target=\"{{ category.button.target }}\" rel=\"noopener\"\n            {% endif %}\n            {% if category.button.tracking %}data-ga-label=\"{{ category.button.tracking }}\"{% endif %}\n            class=\"btn btn-action glo-table--w-mobile-100{% if category.button.customClasses is not empty %} {{ category.button.customClasses }}{% endif %} px-lg-3 px-xl-4{% if category.button.style == 'outline' %} btn-outline-action{% endif %}\"\n            {{ category.button.attributes|raw }}\n          >{{ category.button.text }}</a>\n        {% endif %}\n        {% if category.subcopy %}\n          <div class=\"caption-1 glo-table--text-muted mt-2\">\n            {{ category.subcopy }}\n          </div>\n        {% endif %}\n      </div>\n    {% endfor %}\n  </div>\n</div>\n",
      "schema": {
        "key": "table",
        "title": "Table [deprecated]",
        "description": "Table fragment. Use Flex Table fragment.",
        "properties": {
          "iconOnlyMode": {
            "title": "iconOnlyMode",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "autofitColumnMode": {
            "title": "Auto-fit Column Mode",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "header": {
            "title": "Header",
            "type": "object",
            "properties": {
              "text": {
                "title": "Text",
                "type": "string",
                "format": "text"
              },
              "enableStickyMode": {
                "title": "Enable Sticky Mode",
                "type": "boolean",
                "format": "checkbox",
                "default": false
              },
              "categories": {
                "title": "Categories",
                "type": "array",
                "items": {
                  "title": "Category",
                  "type": "object",
                  "properties": {
                    "text": {
                      "title": "Category name",
                      "type": "string",
                      "format": "text"
                    }
                  },
                  "required": [
                    "text"
                  ]
                }
              }
            }
          },
          "footer": {
            "title": "Footer",
            "type": "object",
            "properties": {
              "text": {
                "title": "Text",
                "type": "string",
                "format": "markdown"
              },
              "captionStyle": {
                "title": "Caption Style",
                "type": "boolean",
                "format": "text"
              },
              "categories": {
                "title": "Categories",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "subcopy": {
                      "title": "Sub-copy",
                      "type": "string",
                      "format": "text"
                    },
                    "button": {
                      "title": "Button",
                      "type": "object",
                      "properties": {
                        "text": {
                          "title": "Text",
                          "type": "string",
                          "format": "text"
                        },
                        "style": {
                          "title": "Style",
                          "type": "string",
                          "enum": [
                            "outline"
                          ]
                        },
                        "tracking": {
                          "title": "Tracking label",
                          "type": "string",
                          "format": "text"
                        },
                        "customClasses": {
                          "title": "Custom CSS classes",
                          "type": "string",
                          "format": "text"
                        },
                        "attributes": {
                          "title": "Additional HTML attributes",
                          "type": "string",
                          "format": "text"
                        }
                      },
                      "required": [
                        "text"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "categories"
            ]
          },
          "items": {
            "title": "Item list",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "titleStyle": {
                  "title": "Title Style",
                  "description": "(default: subtitle)",
                  "type": "string",
                  "enum": [
                    "subtitle",
                    "title"
                  ]
                },
                "title": {
                  "title": "Title",
                  "type": "string",
                  "format": "text"
                },
                "enableToggle": {
                  "title": "Enable toggle",
                  "type": "boolean",
                  "format": "checkbox",
                  "default": false
                },
                "preventAutoCollapseToggle": {
                  "title": "Prevent auto-collapse toggle",
                  "type": "boolean",
                  "format": "checkbox",
                  "default": false
                },
                "description": {
                  "title": "Description",
                  "type": "string",
                  "format": "text"
                },
                "subcopy": {
                  "title": "Sub-copy",
                  "type": "string",
                  "format": "text"
                },
                "button": {
                  "title": "Button",
                  "type": "object",
                  "properties": {
                    "text": {
                      "title": "Text",
                      "type": "string",
                      "format": "text"
                    },
                    "tracking": {
                      "title": "Tracking label",
                      "type": "string",
                      "format": "text"
                    },
                    "customClasses": {
                      "title": "Custom CSS classes",
                      "type": "string",
                      "format": "text"
                    },
                    "attributes": {
                      "title": "Additional HTML attributes",
                      "type": "string",
                      "format": "text"
                    }
                  },
                  "required": [
                    "text"
                  ]
                },
                "categories": {
                  "title": "Categories",
                  "type": "array",
                  "items": {
                    "title": "Category",
                    "type": "object",
                    "properties": {
                      "iconType": {
                        "title": "iconType",
                        "type": "string",
                        "enum": [
                          "checkmark",
                          "string"
                        ]
                      },
                      "text": {
                        "title": "text",
                        "type": "string",
                        "format": "markdown"
                      }
                    }
                  }
                }
              },
              "required": [
                "categories",
                "title"
              ]
            }
          }
        },
        "required": [
          "header",
          "items"
        ]
      }
    },
    "tabModal": {
      "twig": "<div\n  id=\"{{ modalId }}\"\n  class=\"glo-tab-modal modal fade\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"{{ modalId }}-label\"\n  aria-hidden=\"true\"\n>{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\" role=\"tablist\">\n      <div id=\"{{ modalId }}-label\" class=\"modal-header d-block\">\n        <div class=\"modal-header\">\n          <div></div>\n          <button type=\"button\" class=\"close glo-btn-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n              <use xlink:href=\"#glo-close-2\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-close-2\"></use>\n            </svg>\n          </button>\n        </div>\n        <ul class=\"nav nav-tabs nav-tabs-auto\">\n          {% for card in cards %}\n            {% if card.shortTitle %}\n              <li class=\"nav-item\">\n                <a\n                  id=\"tab{{ loop.index }}\"\n                  href=\"#panel{{ loop.index }}\"\n                  class=\"nav-link\"\n                  role=\"tab\"\n                  aria-controls=\"panel{{ loop.index }}\"\n                  aria-selected=\"{% if loop.first %}true{% else %}false{% endif %}\"\n                ><span>{{ card.shortTitle|raw }}</span></a>\n              </li>\n            {% endif %}\n          {% endfor %}\n        </ul>\n      </div>\n      <div class=\"tabs-panels glo-tab-body\">\n        {% for card in cards %}\n          {% if card.shortTitle %}\n            <div\n              id=\"panel{{ loop.index }}\"\n              class=\"pt-0\"\n              tabindex=\"-1\"\n              role=\"tabpanel\"\n              aria-labelledby=\"tab{{ loop.index }}\"\n              {% if not loop.first %} hidden{% endif %}\n            >\n              <div class=\"glo-tab-flex\">\n                <div class=\"glo-tab-content\">\n                  <h{{ index }} class=\"highlight-2 my-5\">{{ card.longTitle|raw }}</h{{ index }}>\n                  {% if card.content %}\n                    <div class=\"glo-section content-3\">{{ card.content|raw }}</div>{% endif %}\n                  {% if card.list|length %}\n                    <ul class=\"glo-section glo-list-check content-3\">\n                      {% for item in card.list %}\n                        <li{% if item.notOffered %} class=\"glo-not-offered\" title=\"not included\"{% endif %}>\n                          {{ item.content|raw }}\n                          {% if item.popoverContent|length > 0 %}\n                            {% set pLabel = item.popoverLabel ?: (item.popoverTitle ?: 'What\\'s included') %}\n                            {% if item.popoverType == 'icon' %}\n                              <a tabindex=\"0\" class=\"btn btn-dot btn-xs pointer-event\"\n                                role=\"button\" data-toggle=\"popover\" data-trigger=\"focus\" data-html=\"true\" data-placement=\"bottom\"\n                                aria-label=\"{{ pLabel }}\"\n                                {% if item.popoverTitle %} data-title=\"{{ item.popoverTitle|escape('html') }}\"{% endif %}\n                                data-content=\"{{ item.popoverContent|escape('html') }}\">\n                                <svg style=\"color:#fff\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 13 13\">\n                                  <use xlink:href=\"#glo-info\" href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-info\"></use>\n                                </svg>\n                              </a>\n                            {% else %}\n                              <p class=\"mt-2 mb-0\">\n                                <a tabindex=\"0\" class=\"glo-link-action-plain\"\n                                  role=\"button\" data-toggle=\"popover\" data-trigger=\"focus\" data-html=\"true\" data-placement=\"bottom\"\n                                  aria-label=\"{{ pLabel }}\"\n                                  {% if item.popoverTitle %} data-title=\"{{ item.popoverTitle|escape('html') }}\"{% endif %}\n                                  data-content=\"{{ item.popoverContent|escape('html') }}\">\n                                  {{ pLabel }}\n                                </a>\n                            {% endif %}\n                          {% endif %}\n                        </li>\n                      {% endfor %}\n                    </ul>\n                  {% endif %}\n                  {% if card.extraContent %}\n                    <div class=\"glo-section glo-caption caption-1\">{{ card.extraContent|raw }}</div>\n                  {% endif %}\n                </div>\n                <div class=\"glo-tab-footer table\">\n                  <div class=\"d-table-cell align-middle w-100\">\n                    <h{{ index + 1 }} class=\"subtitle-1 m-0\">{{ card.shortTitle|raw }}</h{{ index + 1 }}>\n                    {% if card.subtitle %}\n                      <p class=\"glo-subtitle{% if card.subtitleClass == 'bold' %} subtitle-1{% else %} content-3{% endif %} m-0\">\n                        <span class=\"pricing-wrapper\">{{ card.subtitle|raw }}&nbsp;</span>\n                        {% if card.caption %}\n                        <span class=\"glo-caption caption-1\">{{ card.caption|raw }}</span>\n                        {% endif %}\n                      </p>\n                    {% endif %}\n                  </div>\n                  {% if card.btnAction and card.btnText %}\n                    <div class=\"d-table-cell align-middle\">\n                      <a\n                        href=\"{{ card.btnAction }}\"\n                        {% if '//' in card.btnAction %} target=\"_blank\" rel=\"noopener\"{% endif %}\n                        {% if card.btnTracking %}data-ga-label=\"{{ card.btnTracking }}\"{% endif %}\n                        class=\"btn btn{% if card.btnModel == 'outline' %}-outline{% endif %}-action{% if card.btnClasses %} {{ card.btnClasses }}{% endif %}\"\n                        {{ card.btnAttributes|raw }}\n                      >{{ card.btnText|raw }}</a>\n                    </div>\n                  {% endif %}\n                </div>\n              </div>\n            </div>\n          {% endif %}\n        {% endfor %}\n      </div>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "tabModal",
        "title": "Tab Modal",
        "description": "Tab Modal fragment: product item detail comparison cards viewed as tabs in a modal on mobile.",
        "properties": {
          "modalId": {
            "title": "Modal ID",
            "description": "Provide an HTML ID for this modal. This must be alpha-numeric with no spaces.",
            "type": "string",
            "format": "text"
          },
          "headerIndex": {
            "title": "Heading index",
            "description": "What will be the starting heading index? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "cards": {
            "title": "Card items",
            "description": "Define the contents of each card item in descending sequence. These items will be rendered in descending order, the way they will be shown on mobile. Desktop will display these items from right to left, in reverse order.",
            "type": "array",
            "items": {
              "title": "Item",
              "type": "object",
              "properties": {
                "longTitle": {
                  "title": "Long title",
                  "description": "Long title or product name for content area. Can be any length (within reason) and can have HTML.",
                  "type": "string",
                  "format": "markdown"
                },
                "shortTitle": {
                  "title": "Short title",
                  "description": "Short title or product name for the tabs and button area. Keep this as short as possible as all short titles are shown in one line in the tabs for Mobile size screens.",
                  "type": "string",
                  "format": "markdown"
                },
                "subtitle": {
                  "title": "Subtitle",
                  "description": "Card subtitle for the button area.",
                  "type": "string",
                  "format": "text"
                },
                "caption": {
                  "title": "Subtitle caption",
                  "description": "Caption statement to follow the subtitle, such as a descriptor.",
                  "type": "string",
                  "format": "text"
                },
                "subtitleClass": {
                  "title": "Subtitle class",
                  "description": "Should the subtitle be bolded or default plain text?",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "bold"
                  ]
                },
                "btnText": {
                  "title": "Button text",
                  "description": "Text for the action button.",
                  "type": "string",
                  "format": "text"
                },
                "btnAction": {
                  "title": "Button action",
                  "description": "Provide the URL for the button.",
                  "type": "string",
                  "format": "text"
                },
                "btnModel": {
                  "title": "Button model",
                  "description": "Button design model to use.",
                  "type": "string",
                  "enum": [
                    "[default]",
                    "outline"
                  ]
                },
                "btnTracking": {
                  "title": "Button tracking label",
                  "type": "string",
                  "format": "text"
                },
                "btnClasses": {
                  "title": "Button custom classes",
                  "type": "string",
                  "format": "text"
                },
                "btnAttributes": {
                  "title": "Button additional attributes",
                  "type": "string",
                  "format": "text"
                },
                "content": {
                  "title": "Main content",
                  "description": "Main content or message for this card.",
                  "type": "string",
                  "format": "markdown"
                },
                "list": {
                  "title": "List details",
                  "description": "List details for the item.",
                  "type": "array",
                  "items": {
                    "title": "Detail",
                    "type": "object",
                    "properties": {
                      "notOffered": {
                        "title": "Item not offered",
                        "description": "Is this item not offered for this option?",
                        "type": "boolean",
                        "format": "checkbox",
                        "default": true
                      },
                      "content": {
                        "title": "Item content",
                        "description": "Content for this list item.",
                        "type": "string",
                        "format": "markdown"
                      },
                      "popoverType": {
                        "title": "Popover type",
                        "description": "Type of popover to use when defined.",
                        "type": "string",
                        "enum": [
                          "link",
                          "icon"
                        ],
                        "default": "link"
                      },
                      "popoverLabel": {
                        "title": "Popover label",
                        "description": "Identify or label the popover to the user. Link text or name it's use. (optional but recommended)",
                        "type": "string",
                        "format": "text"
                      },
                      "popoverTitle": {
                        "title": "Popover title",
                        "description": "Bolded title of the popover message. (optional)",
                        "type": "string",
                        "format": "text"
                      },
                      "popoverContent": {
                        "title": "Popover message",
                        "description": "Message to provide in the popover. (this is required for the popover to be used)",
                        "type": "string",
                        "format": "text"
                      }
                    }
                  }
                },
                "extraContent": {
                  "title": "Extra content",
                  "description": "Extra content, disclaimer, or message to display below the list.",
                  "type": "string",
                  "format": "textarea"
                }
              }
            },
            "default": [
              {
                "subtitleClass": "[default]",
                "btnModel": "[default]",
                "list": [
                  {
                    "notOffered": false
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "topicList": {
      "twig": "{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}<div class=\"row\">\n    <div class=\"glo-topic-list col-12\">\n    {% for group in collection %}\n        <div class=\"pb-9\">\n          <h{{ index }} class=\"highlight-2 m-0\">{{ group.title }}</h{{ index }}>\n          <ul>\n            {% for item in group.list %}\n              <li class=\"pt-4\"><a\n                href=\"{{ item.url }}\"\n                {% if '//' in item.url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                {% if item.tracking %}data-ga-label=\"{{ item.tracking }}\"{% endif %}\n                class=\"btn btn-tag {{ item.customClasses }}\"\n                {{ item.attributes|raw }}\n              >{{ item.title }}</a></li>\n            {% endfor %}\n          </ul>\n        </div>\n    {% endfor %}\n  </div>\n</div>\n",
      "schema": {
        "key": "topicList",
        "title": "Topic List",
        "description": "Topic List fragment: list of sorted and grouped buttons displayed in columns.",
        "properties": {
          "headerIndex": {
            "title": "Heading strength",
            "description": "What will be the starting heading strength? (number 1-6, default = 2)",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "collection": {
            "title": "Collection groups",
            "description": "Define each collection group and it's items.",
            "type": "array",
            "items": {
              "title": "Group item",
              "type": "object",
              "properties": {
                "title": {
                  "title": "Group title",
                  "description": "Plain text group title",
                  "type": "string",
                  "format": "text"
                },
                "list": {
                  "title": "Group list",
                  "description": "How may items are there to place in the accordion?",
                  "type": "array",
                  "items": {
                    "title": "List item",
                    "type": "object",
                    "properties": {
                      "title": {
                        "title": "Item title",
                        "description": "Plain text title.",
                        "type": "string",
                        "format": "text"
                      },
                      "content": {
                        "url": "Item link",
                        "description": "URL for the item.",
                        "type": "string",
                        "format": "text"
                      },
                      "tracking": {
                        "title": "Tracking label",
                        "type": "string",
                        "format": "text"
                      },
                      "customClasses": {
                        "title": "Custom CSS classes",
                        "type": "string",
                        "format": "text"
                      },
                      "attributes": {
                        "title": "Additional HTML attributes",
                        "type": "string",
                        "format": "text"
                      }
                    }
                  }
                }
              }
            },
            "default": [
              {
                "list": [
                  {}
                ]
              }
            ]
          },
          "required": [
            "title",
            "url"
          ]
        },
        "required": [
          "collection"
        ]
      }
    },
    "userReviews": {
      "twig": "<div id=\"user-reviews{{ seed }}\"\n     class=\"row glo-user-reviews\">\n  <div class=\"col-12\">\n    <div class=\"highlight-1 mb-2\">\n      User reviews\n    </div>\n\n    <div class=\"glo-user-reviews-stars mb-5\">\n      <div class=\"rating rating-lg\">\n        <div class=\"stars\" aria-hidden=\"true\">\n          {% set starList = 1..5 %}\n          <div class=\"glo-user-reviews-stars-filled\">\n            {% for item in starList %}\n            <svg class=\"star\"\n                 xmlns=\"http://www.w3.org/2000/svg\"\n                 viewBox=\"0 0 24 24\">\n              <use xlink:href=\"#glo-star-1\"\n                   href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-1\"></use>\n            </svg>\n            {% endfor %}\n          </div>\n          <div class=\"glo-user-reviews-stars-outlines\">\n            {% for item in starList %}\n              <svg class=\"star\"\n                   xmlns=\"http://www.w3.org/2000/svg\"\n                   viewBox=\"0 0 24 24\">\n                <use xlink:href=\"#glo-star-0\"\n                     href=\"/resources/global/glo/1/assets/svg/view/svg/sprite.view.svg#glo-star-0\"></use>\n              </svg>\n            {% endfor %}\n          </div>\n        </div>\n\n        <span class=\"rate highlight-1\"></span>\n      </div>\n    </div>\n\n    <div class=\"glo-user-reviews-bv-stars\" data-bv-product-id=\"{{productId}}\">\n    </div>\n\n    <div id=\"user-reviews-accordion{{ seed }}\"\n         class=\"accordion\">\n      <div class=\"card\">\n        <div id=\"user-reviews-accordion{{ seed }}-header\"\n             class=\"card-header\">\n          <a\n            href=\"#user-reviews-accordion{{ seed }}-collapse\"\n            data-toggle=\"collapse\"\n            role=\"button\"\n            aria-expanded=\"true\"\n            aria-controls=\"user-reviews-accordion{{ seed }}-collapse\"\n            {% if toggleLink.tracking %}data-ga-label=\"{{ toggleLink.tracking }}\"{% endif %}\n            class=\"glo-link-plain {{ toggleLink.customClasses }}\"\n            {{ toggleLink.attributes|raw }}\n          >\n            <h4 class=\"subtitle-1 glo-user-reviews-count\"></h4>\n\n            <span class=\"glo-svg\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\"\n                   viewBox=\"0 0 36 36\">\n                <g fill=\"none\"\n                   stroke=\"currentColor\"\n                   stroke-linecap=\"square\"\n                   stroke-width=\"6\">\n                  <polyline points=\"14 6 21.5 14.2494108 14 22.5\" transform=\"rotate(-270.0000) translate(0, -32)\"></polyline>\n                </g>\n              </svg>\n            </span>\n          </a>\n        </div>\n\n        <div id=\"user-reviews-accordion{{ seed }}-collapse\"\n             class=\"collapse show\"\n             data-toggle=\"collapse\"\n             data-parent=\"#user-reviews-accordion{{ seed }}\"\n             aria-labelledby=\"user-reviews-accordion{{ seed }}-header\">\n          <div class=\"card-body pb-5 pb-md-6 offset-lg-2 col-lg-8 content-2 glo-user-reviews-bv-reviews-parent\">\n            <div class=\"glo-user-reviews-bv-reviews\"\n                {% if __uniTest_mockTag_ready__ %}data-bv-ready=\"true\"{% endif %}\n                 data-bv-show=\"reviews\"\n                 data-bv-product-id=\"{{productId}}\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
      "schema": {
        "key": "userReviews",
        "title": "User Reviews",
        "description": "User reviews for products and attorneys. Powered by BazaarVoice.",
        "properties": {
          "productId": {
            "title": "Product ID",
            "description": "Provide the productId that corresponds to a valid BazaarVoice product id.",
            "type": "string",
            "format": "text"
          },
          "toggleLink": {
            "title": "Toggle link",
            "description": "Link to toggle the accordion",
            "type": "object",
            "properties": {
              "tracking": {
                "title": "Tracking label",
                "type": "string",
                "format": "text"
              },
              "customClasses": {
                "title": "Custom CSS classes",
                "type": "string",
                "format": "text"
              },
              "attributes": {
                "title": "Additional HTML attributes",
                "type": "string",
                "format": "text"
              }
            }
          }
        },
        "required": [
          "productId"
        ]
      }
    },
    "verticalCard": {
      "twig": "{% if columns < 2 %}{%\n  set class = 'col-12'\n%}{% elseif columns == 2 %}{%\n  set class = 'col-12 col-md-6'\n%}{% elseif columns == 3 %}{%\n  set class = 'col-12 col-md-6 col-lg-4'\n%}{% else %}{%\n  set class = 'col-6 col-md-4 col-lg-3'\n%}{% endif %}{%\n  set indexA = (not headerIndex or headerIndex < 1) ? 2 : headerIndex\n%}{# limit header level: 6 #}{%\n  set index = (indexA < 7) ? indexA : 6\n%}<div class=\"vertical-card d-flex row\">\n  {% for card in cards %}\n    {% with card %}\n      <div class=\"vertical-card {{ class }}\">\n        {% if image %}\n          {% if url %}<a\n            href=\"{{ url }}\"\n            {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n            {% if imageTracking %}data-ga-label=\"{{ imageTracking }}\"{% endif %}\n            class=\"{{imageClasses}}\"\n            {{imageAttributes|raw}}\n          >{% endif %}\n            <img src=\"{{ image }}\" loading=\"lazy\" class=\"card-img-top rounded-0\" alt=\"{{ title|escape('html') }}\">\n          {% if url %}</a>{% endif %}\n        {% endif %}\n        <div class=\"card-body-inside\">\n          {% if topic and not displaySmallTitle %}\n            <p class=\"card-topic\">\n            {% if topicUrl %}<a\n              href=\"{{ topicUrl }}\"\n              {% if '//' in topicUrl %}target=\"_blank\" rel=\"noopener\"{% endif %}\n              {% if topicTracking %}data-ga-label=\"{{ topicTracking }}\"{% endif %}\n              class=\"{{topicClasses}}\"\n              {{topicAttributes|raw}}\n            >{% endif %}\n              {{ topic }}\n            {% if topicUrl %}</a>{% endif %}\n            </p>\n          {% endif %}\n          {% if title %}\n            <h{{ index }} class=\"card-title{% if displaySmallTitle %} small-card-title{% endif %}{% if enable4pxTitleBottomMargin %} mb-1{% endif %}\">\n              {% if url %}<a\n                href=\"{{ url }}\"\n                {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                {% if titleTracking %}data-ga-label=\"{{ titleTracking }}\"{% endif %}\n                class=\"{{titleClasses}}\"\n                {{titleAttributes|raw}}\n              >{% endif %}\n                {{ title }}\n              {% if url %}</a>{% endif %}\n            </h{{ index }}>\n          {% endif %}\n          {% if description %}\n            <div class=\"card-text\"><p class=\"content-3\">{% if fullText %}{{ description }}{% else %}{{ description|striptags|slice(0,90) }}{% endif %}{% if not fullText and description|length > 90 %}&hellip;{% endif %}</p></div>\n          {% endif %}\n          {% if info %}\n          <div>\n            <div{% if share or like %} class=\"col-9\"{% endif %}><small class=\"card-text-muted\"><time datetime=\"20:00\">{{ info }}</time> {% if minutes %} &middot; <time datetime=\"2 minutes\" >{{ minutes }}</time> min read{% endif %}</small></div>\n            {% if (share or like) and not ctaLink %}\n              <div class=\"col-3 align-self-center action-link\">\n                {% if share %}\n                  <span class=\"icon-share\">\n                    {# icons are for placeholder only#}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"24px\" viewBox=\"0 0 20 24\">\n                      <path d=\"M15.5,17 C16.8807119,17 18,18.1192881 18,19.5 C18,20.8807119 16.8807119,22 15.5,22 C14.1192881,22 13,20.8807119 13,19.5 C13,18.1192881 14.1192881,17 15.5,17 Z M2.5,8.5 C3.88071187,8.5 5,9.61928813 5,11 C5,12.3807119 3.88071187,13.5 2.5,13.5 C1.11928813,13.5 0,12.3807119 0,11 C0,9.61928813 1.11928813,8.5 2.5,8.5 Z M15.5,0 C16.8807119,0 18,1.11928813 18,2.5 C18,3.88071187 16.8807119,5 15.5,5 C14.1192881,5 13,3.88071187 13,2.5 C13,1.11928813 14.1192881,0 15.5,0 Z M8.0172553,7.39256384 L13.2387628,3.97850124 M4.67868594,12.4392536 L10.0061237,15.9102344\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" transform=\"translate(1.000000, 1.000000)\"></path>\n                    </svg>\n                  </span>\n                {% endif %}\n                {% if like %}\n                  <span class=\"icon-like\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"24px\" viewBox=\"0 0 24 24\">\n                      <path d=\"M11,3.77636446 C9.8749851,2.16323938 8.05244504,0.945326006 6.07559922,0.945326006 C2.06837293,0.945326006 0.202532784,4.12827609 0.0206724155,6.8656289 C-0.198189846,10.1454137 1.34329328,12.6607552 3.57679052,14.8674851 C5.84099147,17.1033442 11,21.054674 11,21.054674 C11,21.054674 16.1590087,17.1033442 18.4224224,14.8674851 C20.6567069,12.6607552 22.19819,10.1454137 21.9793278,6.8656289 C21.7974674,4.12827609 19.9316273,0.945326006 15.924401,0.945326006 C13.9475552,0.945326006 12.1250151,2.16323938 11,3.77636446 Z\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" transform=\"translate(1.000000, 1.000000)\"></path>\n                    </svg>\n                  </span>\n                {% endif %}\n              </div>\n            {% endif %}\n          </div>\n          {% endif %}\n          {% if ctaLink or share or like %}\n            <div class=\"row no-gutters d-flex card-action-container \">\n              {% if ctaLink and ctaText %}\n                <div class=\"col-8 flex-grow-1 cta-link\">\n                  <a\n                    href=\"{{ ctaLink }}\"\n                    {% if '//' in url %}target=\"_blank\" rel=\"noopener\"{% endif %}\n                    title=\"{{ ctaText|escape('html') }}\"\n                    {% if ctaTracking %}data-ga-label=\"{{ ctaTracking }}\"{% endif %}\n                    class=\"btn {{ctaClasses}}\"\n                    {{ctaAttributes|raw}}\n                  >\n                    <span>{{ ctaText }}</span>\n                  </a>\n                </div>\n              {% endif %}\n              {% if ctaLink %}\n                {% if share or like %}\n                  <div class=\"col-4 align-self-center action-link\">\n                    {% if share %}\n                      <span class=\"icon-share\">\n                      {# icons are for placeholder only#}\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"24px\" viewBox=\"0 0 20 24\" >\n                        <path d=\"M15.5,17 C16.8807119,17 18,18.1192881 18,19.5 C18,20.8807119 16.8807119,22 15.5,22 C14.1192881,22 13,20.8807119 13,19.5 C13,18.1192881 14.1192881,17 15.5,17 Z M2.5,8.5 C3.88071187,8.5 5,9.61928813 5,11 C5,12.3807119 3.88071187,13.5 2.5,13.5 C1.11928813,13.5 0,12.3807119 0,11 C0,9.61928813 1.11928813,8.5 2.5,8.5 Z M15.5,0 C16.8807119,0 18,1.11928813 18,2.5 C18,3.88071187 16.8807119,5 15.5,5 C14.1192881,5 13,3.88071187 13,2.5 C13,1.11928813 14.1192881,0 15.5,0 Z M8.0172553,7.39256384 L13.2387628,3.97850124 M4.67868594,12.4392536 L10.0061237,15.9102344\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" transform=\"translate(1.000000, 1.000000)\"></path>\n                      </svg>\n                      </span>\n                    {% endif %}\n                    {% if like %}\n                      <span class=\"icon-like\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"24px\" viewBox=\"0 0 24 24\">\n                          <path d=\"M11,3.77636446 C9.8749851,2.16323938 8.05244504,0.945326006 6.07559922,0.945326006 C2.06837293,0.945326006 0.202532784,4.12827609 0.0206724155,6.8656289 C-0.198189846,10.1454137 1.34329328,12.6607552 3.57679052,14.8674851 C5.84099147,17.1033442 11,21.054674 11,21.054674 C11,21.054674 16.1590087,17.1033442 18.4224224,14.8674851 C20.6567069,12.6607552 22.19819,10.1454137 21.9793278,6.8656289 C21.7974674,4.12827609 19.9316273,0.945326006 15.924401,0.945326006 C13.9475552,0.945326006 12.1250151,2.16323938 11,3.77636446 Z\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" transform=\"translate(1.000000, 1.000000)\"></path>\n                        </svg>\n                      </span>\n                    {% endif %}\n                  </div>\n                {% endif %}\n              {% endif %}\n            </div>\n          {% endif %}\n        </div>\n      </div>\n    {% endwith %}\n  {% endfor %}\n</div>\n",
      "schema": {
        "key": "verticalCard",
        "title": "Vertical Card",
        "description": "Vertical Card fragment",
        "properties": {
          "columns": {
            "title": "Columns",
            "description": "Desktop columns to show.",
            "type": "number",
            "format": "number",
            "default": 2
          },
          "enable4pxTitleBottomMargin": {
            "title": "4px below the card title",
            "description": "Toggle to make the spacing between the card title and description 4 pixels",
            "type": "boolean",
            "format": "checkbox",
            "default": false
          },
          "cards": {
            "title": "Cards",
            "description": "Define card items.",
            "type": "array",
            "items": {
              "title": "Card",
              "type": "object",
              "properties": {
                "displaySmallTitle": {
                  "title": "Show small article title",
                  "description": "Show small article title, 18px instead of 24px.",
                  "type": "boolean",
                  "format": "checkbox",
                  "default": false
                },
                "url": {
                  "url": "URL",
                  "description": "Card article URL.",
                  "type": "string",
                  "format": "text"
                },
                "image": {
                  "title": "Image",
                  "description": "Default image of the vertical card should be 408X228 pixels in size.",
                  "type": "string",
                  "format": "text"
                },
                "imageTracking": {
                  "title": "Image tracking label",
                  "type": "string",
                  "format": "text"
                },
                "imageClasses": {
                  "title": "Image custom classes",
                  "type": "string",
                  "format": "text"
                },
                "imageAttributes": {
                  "title": "Image additional attributes",
                  "type": "string",
                  "format": "text"
                },
                "topic": {
                  "title": "Topic link text",
                  "description": "The name of topic.",
                  "type": "string",
                  "format": "text"
                },
                "topicUrl": {
                  "url": "Topic link URL",
                  "description": "Topic URL.",
                  "type": "string",
                  "format": "text"
                },
                "topicTracking": {
                  "title": "Topic tracking label",
                  "type": "string",
                  "format": "text"
                },
                "topicClasses": {
                  "title": "Topic custom classes",
                  "type": "string",
                  "format": "text"
                },
                "topicAttributes": {
                  "title": "Topic additional attributes",
                  "type": "string",
                  "format": "text"
                },
                "title": {
                  "title": "Card title",
                  "description": "The name of the title.",
                  "type": "string",
                  "format": "text"
                },
                "titleTracking": {
                  "title": "Title tracking label",
                  "type": "string",
                  "format": "text"
                },
                "titleClasses": {
                  "title": "Title custom classes",
                  "type": "string",
                  "format": "text"
                },
                "titleAttributes": {
                  "title": "Title additional attributes",
                  "type": "string",
                  "format": "text"
                },
                "description": {
                  "title": "Description",
                  "description": "Description or short info about the card",
                  "type": "string",
                  "format": "textarea"
                },
                "fullText": {
                  "title": "Full text",
                  "description": "Allow full description text to display. Overrides the max string length.",
                  "type": "boolean",
                  "format": "checkbox",
                  "default": false
                },
                "info": {
                  "title": "Info",
                  "description": "Related information",
                  "type": "string",
                  "format": "textarea"
                },
                "minutes": {
                  "title": "How many minutes to read",
                  "description": "Minutes to read",
                  "type": "string",
                  "format": "text",
                  "default": "XX"
                },
                "ctaText": {
                  "title": "CTA text",
                  "description": "CTA text",
                  "type": "string",
                  "format": "text"
                },
                "ctaLink": {
                  "title": "CTA link",
                  "description": "CTA link",
                  "type": "string",
                  "format": "text"
                },
                "ctaTracking": {
                  "title": "CTA tracking label",
                  "type": "string",
                  "format": "text"
                },
                "ctaClasses": {
                  "title": "CTA custom classes",
                  "type": "string",
                  "format": "text"
                },
                "ctaAttributes": {
                  "title": "CTA additional attributes",
                  "type": "string",
                  "format": "text"
                },
                "share": {
                  "title": "Share link",
                  "description": "Share link",
                  "type": "string",
                  "format": "text"
                },
                "like": {
                  "title": "Like link",
                  "description": "Like link",
                  "type": "string",
                  "format": "text"
                }
              }
            }
          }
        },
        "required": []
      }
    }
  }
}
